<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>记简单实现动态加载APK</title>
      <link href="2023/05/11/ji-jian-dan-shi-xian-dong-tai-jia-zai-apk/"/>
      <url>2023/05/11/ji-jian-dan-shi-xian-dong-tai-jia-zai-apk/</url>
      
        <content type="html"><![CDATA[<h1 id="记简单实现动态加载APK"><a href="#记简单实现动态加载APK" class="headerlink" title="记简单实现动态加载APK"></a>记简单实现动态加载APK</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着时代的进步，技术的发展，不少应用在移动平台上的大小越来越大，比如QQ，从以前的二三十MB到现在的上百MB，简直不可相信，但确实如此，有网友调侃到，以前人问：你能装某大型网游吗？以后人问：你的手机能装QQ吗？让人忍不住发笑。不过，事实上，作为用户，确实不想一个app安装包十分庞大，就只是下载都要一定的时间，给人的体验感极其不好，但是好在安卓系统有插件化的支持。</p><p>简单来说，就是将一些核心的代码，打包成app给用户下载，然后其它的一些功能就以插件的形势下载，然后启用。这就极大的优化了用户的体验效果。下面就是这次想要简单分享的动态加载APK文件的主题。</p><h2 id="简单的原理"><a href="#简单的原理" class="headerlink" title="简单的原理"></a>简单的原理</h2><p>为了更好的称呼，理解，先介绍一下有关本文的一些概念和运行原理吧。</p><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><ul><li>宿主app，就是用户需要下载的需要安装的apk文件，用来加载插件的。（本文的宿主app的名称为loadApp）</li><li>插件app，就是宿主app运行时，从网络或sd卡上加载的一个不用安装就能运行的apk文件。（本文的插件app使用名称是loadedApp）</li></ul><h3 id="运行原理"><a href="#运行原理" class="headerlink" title="运行原理"></a>运行原理</h3><p>通过宿主app（loadApp）将位于网络或sd卡上的一个插件app(loadedApp)加载并运行的过程。</p><p><img src="image-20220630191152016.png" alt="image-20220630191152016"></p><p>至于一些细节，后文慢慢研究。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><h3 id="宿主APP"><a href="#宿主APP" class="headerlink" title="宿主APP"></a>宿主APP</h3><p>新建一个apk工程，宿主app的名就为loadApp。下面为实现的一些代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qqq.test.loadapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageInfo;</span><br><span class="line"><span class="keyword">import</span> android.os.Environment;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dalvik.system.DexClassLoader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        findViewById(R.id.main_btn).setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        lanuchTargetActivity();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String mClss;</span><br><span class="line">    String dexPath = Environment.getExternalStorageDirectory().toString() + File.separator + <span class="string">&quot;loadedApp.apk&quot;</span>;</span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NewApi&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">lanuchTargetActivity</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        PackageInfo packageinfo = getPackageManager().getPackageArchiveInfo(dexPath, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> ((packageinfo != <span class="keyword">null</span>)&amp;&amp;(packageinfo.activities.length&gt;<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            String activityName = packageinfo.activities[<span class="number">0</span>].name;</span><br><span class="line">            mClss = activityName;</span><br><span class="line">            launchTargetActivity(mClss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NewApi&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">launchTargetActivity</span><span class="params">(<span class="keyword">final</span> String className)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        File dexOutputDir = <span class="keyword">this</span>.getDir(<span class="string">&quot;loadedDexDir&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">final</span> String dexOutputPath = dexOutputDir.getAbsolutePath();</span><br><span class="line">        ClassLoader classLoader = ClassLoader.getSystemClassLoader();</span><br><span class="line">        DexClassLoader dexClassLoader = <span class="keyword">new</span> DexClassLoader(dexPath,dexOutputPath,<span class="keyword">null</span>,classLoader);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            Class&lt;?&gt; localClass = dexClassLoader.loadClass(className);<span class="comment">//实例化activity</span></span><br><span class="line">            Constructor&lt;?&gt; localConstructor = localClass.getConstructor(<span class="keyword">new</span> Class[]&#123;Activity.class&#125;);</span><br><span class="line">            Object instense = localConstructor.newInstance(<span class="keyword">new</span> Object[]&#123;<span class="keyword">this</span>&#125;);</span><br><span class="line"></span><br><span class="line">            Method onCreate = localClass.getDeclaredMethod(<span class="string">&quot;onCreate&quot;</span>, <span class="keyword">new</span> Class[]&#123;Bundle.class&#125;);</span><br><span class="line">            onCreate.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line">            onCreate.invoke(instense, <span class="keyword">new</span> Object[]&#123;bundle&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.getStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于需要从sd卡加载loadedApp.apk，就不要忘了在AndroidManifest.xml中配置读写权限。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.READ_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">&quot;android.permission.MANAGE_EXTERNAL_STORAGE&quot;</span>/&gt;</span></span><br></pre></td></tr></table></figure><h3 id="插件APP"><a href="#插件APP" class="headerlink" title="插件APP"></a>插件APP</h3><p>插件app需要导出到sd卡根目录，方便宿主app加载，当然自定义目录也行。</p><p>下面为一些插件app的主要代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qqq.test.loadedapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.TextView;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Activity mActivity;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MActivity</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MActivity</span><span class="params">(Activity context)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        mActivity = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mActivity != <span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            show(<span class="string">&quot;okkkk&quot;</span>);</span><br><span class="line">            LinearLayout parent = <span class="keyword">new</span> LinearLayout(mActivity);</span><br><span class="line">            TextView tv = <span class="keyword">new</span> TextView(mActivity);</span><br><span class="line">            tv.setText(<span class="string">&quot;new uninstalled loadedApp&quot;</span>);</span><br><span class="line">            parent.addView(tv);</span><br><span class="line">            mActivity.setContentView(parent);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">            setContentView(R.layout.activity_main);</span><br><span class="line">            mActivity = <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">show</span><span class="params">(String a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        Toast.makeText(mActivity,a,Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>需要注意的是，插件app是以插件的形势运行在宿主app中，所以插件app的一些权限需要在宿主app中配置。其次，资源文件在插件app中不能直接使用，只能使用代码，若要实现，需要添加其它办法。</p><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><p>直接安装的插件app:</p><p><img src="image-20220630193526151.png" alt="直接安装插件APP"></p><p>安装宿主app，使用宿主APP加载的运行结果：</p><p><img src="3tc9e-3icll.gif" alt="动态加载apk运行"></p><p>运行时，还要注意，必须开启宿主APP的存储权限，不然无法运行。从结果可以看出，除了标题栏不一样，其它内容还是loadedApp的代码执行的结果。</p><h2 id="探究"><a href="#探究" class="headerlink" title="探究"></a>探究</h2><p>在loadApp加载插件loadedApp后，在<code>/data/data/宿主app包名/</code>目录下多了一个文件夹，即app_loadedDexDir文件夹，在宿主app代码中有写<code>File dexOutputDir = this.getDir(&quot;loadedDexDir&quot;, 0);</code>，所以有这么一个文件夹，里面有个loadedApp.dex文件。</p><p><img src="image-20220630200138466.png" alt="image-20220630200138466"></p><p>我们可以将其提取出来研究</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb pull loadedApp.dex ./</span><br></pre></td></tr></table></figure><p>然后用JEB打开查看一下里面的内容。</p><p><img src="image-20220630200405746.png" alt="image-20220630200405746"></p><p>这里就是loadedApp的全部代码，所以，在加密插件方面，这里依然是可以知道插件APP的全部代码，为了安全，可以考虑添加一些检测机制，不然你的代码就很危险了。</p><p>其次，这里只是简单的通过例子实现了加载apk，自己可以通过深入研究添加插件app的生命周期控制，以及一些services，资源访问问题等。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><p>loadApp下载:</p><p><a href="https://pan.baidu.com/s/1DWSfTqAAjv64W_M7UE7-GA">https://pan.baidu.com/s/1DWSfTqAAjv64W_M7UE7-GA</a> （kata）</p></li><li><p>loadedAPP下载：</p><p><a href="https://pan.baidu.com/s/1hgkXhs8w_i0xc5cP-FZ1Sg">https://pan.baidu.com/s/1hgkXhs8w_i0xc5cP-FZ1Sg</a> （kata）</p></li><li><p>Android反射调用未安装的APK打开activity：</p><p><a href="https://www.jianshu.com/p/30f63cdd9f0d">https://www.jianshu.com/p/30f63cdd9f0d</a></p></li><li><p>动态加载APK原理分享：</p><p><a href="https://blog.csdn.net/liang5630/article/details/46509939">https://blog.csdn.net/liang5630/article/details/46509939</a></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 编译器 </tag>
            
            <tag> Java </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hook神器-frida的安装和使用</title>
      <link href="2023/05/09/hook-shen-qi-frida-de-an-zhuang-he-shi-yong/"/>
      <url>2023/05/09/hook-shen-qi-frida-de-an-zhuang-he-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="AndroidHook之frida学习1-起步"><a href="#AndroidHook之frida学习1-起步" class="headerlink" title="AndroidHook之frida学习1-起步"></a>AndroidHook之frida学习1-起步</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>想必，能翻开我的这篇文章的人都和我一样，想学习有关android平台的hook技术，但事实上，在安卓平台上有很多hook的技术，比如很早之前的xposed框架，还有很多同类型的其它框架，但是，这里，我要和大家一起学习frida的hook框架，因为这个框架能在多平台下hook，由于它的一些特性，使我选择首先学习frida，比如，它的脚本支持python，互交采用javascript都是它不错的特性。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在此之前，必须确保电脑上已经拥有了python环境。然后接下来就可以通过pip安装frida了</p><p>安装frida</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install frida</span><br></pre></td></tr></table></figure><p>安装frida-tools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install frida-tools</span><br></pre></td></tr></table></figure><p>当然了，这些语句在linux平台下也适用。</p><p>检测安装的frida版本,以便下载frida-srver</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida --version</span><br></pre></td></tr></table></figure><p>由于，我们是对android进行hook所以，在android上必须安装frida-server,也就是说，这个安卓设备需要root，可以是su也可以是其它的比如magisk等，一般模拟器会默认提供root权限，可手动开启。frida-server需要手动到github下载安卓对应版本的frida-server,由于安卓的架构不同，有的是x86,arm,arm64等，需要对应平台下载。</p><p>先查询安卓的架构，通过安卓adb工具查询</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell getprop ro.product.cpu.abi</span><br></pre></td></tr></table></figure><p>比如，我使用的雷电模拟器，对应查询的结果是x86，根据frida版本和安卓架构，在<a href="https://github.com/frida/frida/releases">https://github.com/frida/frida/releases</a> 下载frida-server</p><p><img src="image-20220622151653972.png" alt="image-20220622151653972"></p><p>下载后，解压里面的文件，并将其命名为frida-server方便操作。然后可以将这个frida-server放在/data/local/tmp/目录下，并给与其可执行的权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb push frida-server /data/<span class="built_in">local</span>/tmp</span><br></pre></td></tr></table></figure><p>给予权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell</span><br><span class="line">chmod +x /data/<span class="built_in">local</span>/tmp/frida-server</span><br></pre></td></tr></table></figure><p>这样，frida-server就安装好了，下面可以验证一下。先启动frida-server</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell /data/<span class="built_in">local</span>/tmp/frida-server</span><br></pre></td></tr></table></figure><p>然后新启动一个terminal窗口，执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">frida-ps -U</span><br></pre></td></tr></table></figure><p>就可以看见所有的程序进程了，也就说明frida全部安装成功。</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><p>最好选择frida-server和frida一样版本的server，不然会有很多问题；同时，也要注意是frida-server，不是下面图片上这些。</p><p><img src="image-20220622153101458.png" alt="image-20220622153101458"></p><h1 id="AndroidHook之frida学习2-简单函数的hook"><a href="#AndroidHook之frida学习2-简单函数的hook" class="headerlink" title="AndroidHook之frida学习2-简单函数的hook"></a>AndroidHook之frida学习2-简单函数的hook</h1><p>要想要hook，那么可以从最基本的程序开始，比如，hook安卓应用中的一个函数，或者调用函数，拦截函数的传参，影响函数的返回值等。</p><h2 id="写一点代码"><a href="#写一点代码" class="headerlink" title="写一点代码"></a>写一点代码</h2><p>下面就用一个简单的安卓程序代码来演示，比如，用Android Studio新建一个简单的程序，添加一个button，用于点击。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View p)</span></span>&#123;</span><br><span class="line">         Toast.makeText(MainActivity.<span class="keyword">this</span>,showMessage(<span class="string">&quot;button clicked&quot;</span>), Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">showMessage</span><span class="params">(String a)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;rightShow:&quot;</span> + a;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>正常的演示效果如下：</p><p><img src="image-20220625161815094.png" alt="image-20220625161815094"></p><p><img src="image-20220625162016423.png" alt="image-20220625162016423"></p><h2 id="使用frida来hook函数返回值"><a href="#使用frida来hook函数返回值" class="headerlink" title="使用frida来hook函数返回值"></a>使用frida来hook函数返回值</h2><p>首先是fridatest.py文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> frida</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">message</span>(<span class="params">msg, data</span>):</span></span><br><span class="line">    <span class="keyword">if</span> msg[<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;send&#x27;</span>:</span><br><span class="line">        print(<span class="string">&quot;[*] &#123;0&#125;&quot;</span>.<span class="built_in">format</span>(msg[<span class="string">&#x27;payload&#x27;</span>]))</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(msg);</span><br><span class="line"></span><br><span class="line">print(os.system(<span class="string">&quot;adb devices&quot;</span>));</span><br><span class="line">os.system(<span class="string">&quot;adb forward tcp:27042 tcp:27042&quot;</span>);</span><br><span class="line">os.system(<span class="string">&quot;adb forward tcp:27043 tcp:27043&quot;</span>);</span><br><span class="line"></span><br><span class="line">devices = frida.get_remote_device();</span><br><span class="line">process = devices.attach(<span class="string">&quot;fridatest1&quot;</span>);</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;fridatest.js&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    script = process.create_script(f.read());</span><br><span class="line">script.on(<span class="string">&#x27;message&#x27;</span>, message);<span class="comment">#注册回调</span></span><br><span class="line">script.load() <span class="comment">#js注入目标应用</span></span><br><span class="line"></span><br><span class="line">sys.stdin.read()<span class="comment">#避免结束</span></span><br></pre></td></tr></table></figure><p>然后写fridatest.js</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Java.perform(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> clasz = Java.use(<span class="string">&#x27;com.qqq.fridatest1.MainActivity&#x27;</span>);</span><br><span class="line">    clasz.showMessage.implementation = <span class="function"><span class="keyword">function</span>(<span class="params">a</span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;hook start&quot;</span>);</span><br><span class="line">        send(<span class="string">&quot;success!&quot;</span>);</span><br><span class="line">        send(a);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;frida:&quot;</span>+a;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>就可以改变showMessage函数的返回值，原本是“rightshow:button clicked”，后面被frida改为了“frida:button clicked”，比较神奇哈，演示的效果如下：</p><p><img src="image-20220625163258507.png" alt="image-20220625163258507"></p><p>很显然，这样直接hook成功。</p><h2 id="代码解释"><a href="#代码解释" class="headerlink" title="代码解释"></a>代码解释</h2><p>对于python代码就不做解释了，具体的写在注释里面，这里主要讲一下js代码，js 代码中的<code>Java.use(&#39;com.qqq.fridatest1.MainActivity&#39;);</code>是直接使用的目标类，然后对showMessage方法进行监听hook，然后在js的function(a)可以接受源java函数showMessage传来的参数，然后进行利用后，返回一定的内容。</p><p>js代码中的send()函数，为python代码中注册的回调函数，实现与js与python互交，处理某些逻辑会很方便。</p><h2 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h2><p>值得注意的是，在hook时，需要使用adb shell启用frida-server，不然，python代码一定会报错。也可以像我一样，在bin目录下新建文本文档，里面的内容为<code>/data/local/tmp/frida-server</code>，并将这个文本文档重命名为frida，并赋予可执行权限，然后就可以在各个目录下直接使用frida命令开启frida-server。其次，最好使用su权限启动frida-server，不然，可能遇到一个报错，一个system文件找不到。</p><p>如下是我直接在Magisk on x86终端中使用su启动frida-server的截图，至于其它，也可以自己瞎折腾。除了这样，adb shell或带有root 的termux高级终端也行。</p><p><img src="image-20220625165652171.png" alt="image-20220625165652171"></p>]]></content>
      
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> Android </tag>
            
            <tag> 原理 </tag>
            
            <tag> 配置 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android动态注册NDK函数</title>
      <link href="2023/04/08/android-dong-tai-zhu-ce-ndk-han-shu/"/>
      <url>2023/04/08/android-dong-tai-zhu-ce-ndk-han-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="Android动态注册NDK函数"><a href="#Android动态注册NDK函数" class="headerlink" title="Android动态注册NDK函数"></a>Android动态注册NDK函数</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前在<a href="https://kuangtant.gitee.io/2021/12/12/android-studio-sheng-cheng-so-wen-jian/%E4%B8%80%E6%96%87%E8%AE%B2%E8%BF%87%E5%9C%A8Android">https://kuangtant.gitee.io/2021/12/12/android-studio-sheng-cheng-so-wen-jian/一文讲过在Android</a> Studio中java与so文件的关系，和简单实现相互的调用，文章里面介绍的native函数调用属于静态调用，原理是Java代码中的native方法与so中的JNI方法一一对应，当Java层调用so层的函数时，如果发现其上有JNIEXPORT和JNICALL两个宏定义声明时，就会将so层函数链接到对应的native方法上。本文将介绍一下安卓NDK动态注册函数。</p><h2 id="实现例子"><a href="#实现例子" class="headerlink" title="实现例子"></a>实现例子</h2><h3 id="c-文件"><a href="#c-文件" class="headerlink" title="c++文件"></a>c++文件</h3><p>创建过程和静态创建过程一致，主要不同在于其中的内容。</p><h4 id="写待注册函数"><a href="#写待注册函数" class="headerlink" title="写待注册函数"></a>写待注册函数</h4><p>动态函数注册，需要准备被注册的函数，这里被注册的函数就没有静态注册函数那样严格，可以直接写函数主体，不需要其它宏定义，例如，实现加减法的native函数：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">jint <span class="title">addAB</span><span class="params">(JNIEnv *env, jobject thiz, jint a, jint b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">jint <span class="title">subAB</span><span class="params">(JNIEnv *env, jobject thiz, jint a, jint b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="写JNINativeMethod数组"><a href="#写JNINativeMethod数组" class="headerlink" title="写JNINativeMethod数组"></a>写JNINativeMethod数组</h4><p>JNINativeMethod是一个结构体，在jni.h文件中有定义:</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* name;  <span class="comment">//Java层native函数名</span></span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span>* signature; <span class="comment">//Java函数签名，记录参数类型和个数，以及返回值类型</span></span><br><span class="line">    <span class="keyword">void</span>*       fnPtr; <span class="comment">//Native层对应的函数指针</span></span><br><span class="line">&#125; JNINativeMethod;</span><br></pre></td></tr></table></figure><p>动态注册方法需要一个数组将我们想要的东西记录下来，方便动态调用注册。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JNINativeMethod methods[] = &#123;&#125; <span class="comment">//三个参数：java层函数名，java函数签名，native函数指针</span></span><br></pre></td></tr></table></figure><p>java函数名和native函数指针就不需要介绍了，主要要注意一下java函数签名，其类型为字符串，由一对小括号和若干签名符号组成，其中括号内写传入参数的签名符号，没有参数则不写，括号外写返回参数的签名符号。</p><table><thead><tr><th>签名符号</th><th>C/C++</th><th>java</th></tr></thead><tbody><tr><td>V</td><td>void</td><td>void</td></tr><tr><td>Z</td><td>jboolean</td><td>boolean</td></tr><tr><td>I</td><td>jint</td><td>int</td></tr><tr><td>J</td><td>jlong</td><td>long</td></tr><tr><td>D</td><td>jdouble</td><td>double</td></tr><tr><td>F</td><td>jfloat</td><td>float</td></tr><tr><td>B</td><td>jbyte</td><td>byte</td></tr><tr><td>C</td><td>jchar</td><td>char</td></tr><tr><td>S</td><td>jshort</td><td>short</td></tr><tr><td>[Z</td><td>jbooleanArray</td><td>boolean[]</td></tr><tr><td>[I</td><td>jintArray</td><td>int[]</td></tr><tr><td>[J</td><td>jlongArray</td><td>long[]</td></tr><tr><td>[D</td><td>jdoubleArray</td><td>double[]</td></tr><tr><td>[F</td><td>jfloatArray</td><td>float[]</td></tr><tr><td>[B</td><td>jbyteArray</td><td>byte[]</td></tr><tr><td>[C</td><td>jcharArray</td><td>char[]</td></tr><tr><td>[S</td><td>jshortArray</td><td>short[]</td></tr><tr><td>L+完整包名+类名</td><td>jobject</td><td>class</td></tr></tbody></table><p>例如：Java层函数<code>String getString(int a,int b)</code>的方法签名就是<code>(II)Ljava/lang/String;</code>。</p><p>所以，综合以上内容，JNINativeMethod数组，即函数映射表，我们写为：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">JNINativeMethod methods[] =</span><br><span class="line">        &#123;</span><br><span class="line">                &#123;<span class="string">&quot;add&quot;</span>,<span class="string">&quot;(II)I&quot;</span>,(<span class="keyword">void</span>*)addAB&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;sub&quot;</span>,<span class="string">&quot;(II)I&quot;</span>,(<span class="keyword">void</span>*)subAB&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;iWillGet&quot;</span>,<span class="string">&quot;()Ljava/lang/String;&quot;</span>,(<span class="keyword">void</span>*)getString&#125;</span><br><span class="line">        &#125;;</span><br></pre></td></tr></table></figure><h4 id="写JNI-OnLoad方法"><a href="#写JNI-OnLoad方法" class="headerlink" title="写JNI_OnLoad方法"></a>写JNI_OnLoad方法</h4><p>之所以要写JNI_OnLoad方法，是因为在java层，<code>System.loadLibrary()</code>执行后，将会自动调用JNI_OnLoad方法。</p><p>动态注册函数代码，应该</p><ol><li>调用FindClass方法，获取java对象</li><li>调用RegisterNatives方法，传入java对象、JNINativeMethod数组以及注册数目完成注册</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">jint <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm, <span class="keyword">void</span>* reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv* env = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (vm-&gt;GetEnv((<span class="keyword">void</span>**)&amp;env, JNI_VERSION_1_6) != JNI_OK) <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    <span class="comment">//获取java对象</span></span><br><span class="line">    jclass clazz = env-&gt;FindClass(<span class="string">&quot;com/qqq/test/autimaticso/MainActivity&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (clazz == <span class="literal">NULL</span>) <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//调用RegisterNatives方法，传入java对象、函数映射表以及注册数目完成注册注册</span></span><br><span class="line">    <span class="keyword">if</span> (env-&gt;RegisterNatives(clazz, methods, <span class="keyword">sizeof</span>(methods)/ <span class="keyword">sizeof</span>(methods[<span class="number">0</span>])) &lt; <span class="number">0</span>) <span class="keyword">return</span> JNI_FALSE;<span class="comment">//注册失败，返回值小于0</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_6; <span class="comment">//注册成功返回JNI版本</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="jni代码"><a href="#jni代码" class="headerlink" title="jni代码"></a>jni代码</h4><p>最终的jni代码如下：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//静态注册函数部分</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT jstring</span><br><span class="line"></span><br><span class="line">JNICALL</span><br><span class="line">Java_com_qqq_test_autimaticso_MainActivity_stringFromJNI(JNIEnv *env, jobject thiz)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> hello = <span class="string">&quot;Hello from C++&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;NewStringUTF(hello.c_str());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//动态注册函数部分</span></span><br><span class="line"></span><br><span class="line"><span class="function">jint <span class="title">addAB</span><span class="params">(JNIEnv *env, jobject thiz, jint a, jint b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">jint <span class="title">subAB</span><span class="params">(JNIEnv *env, jobject thiz, jint a, jint b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">jstring <span class="title">getString</span><span class="params">(JNIEnv *env, jobject thiz)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> hello = <span class="string">&quot;you got it&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;NewStringUTF(hello.c_str());</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//函数映射表</span></span><br><span class="line">JNINativeMethod methods[] =</span><br><span class="line">        &#123;</span><br><span class="line">                &#123;<span class="string">&quot;add&quot;</span>,<span class="string">&quot;(II)I&quot;</span>,(<span class="keyword">void</span>*)addAB&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;sub&quot;</span>,<span class="string">&quot;(II)I&quot;</span>,(<span class="keyword">void</span>*)subAB&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;iWillGet&quot;</span>,<span class="string">&quot;()Ljava/lang/String;&quot;</span>,(<span class="keyword">void</span>*)getString&#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">jint <span class="title">JNI_OnLoad</span><span class="params">(JavaVM* vm, <span class="keyword">void</span>* reserved)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    JNIEnv* env = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">if</span> (vm-&gt;GetEnv((<span class="keyword">void</span>**)&amp;env, JNI_VERSION_1_6) != JNI_OK) <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    jclass clazz = env-&gt;FindClass(<span class="string">&quot;com/qqq/test/autimaticso/MainActivity&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (clazz == <span class="literal">NULL</span>) <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    <span class="keyword">if</span> (env-&gt;RegisterNatives(clazz, methods, <span class="keyword">sizeof</span>(methods)/ <span class="keyword">sizeof</span>(methods[<span class="number">0</span>])) &lt; <span class="number">0</span>) <span class="keyword">return</span> JNI_FALSE;</span><br><span class="line">    <span class="keyword">return</span> JNI_VERSION_1_6;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="java文件"><a href="#java文件" class="headerlink" title="java文件"></a>java文件</h3><p>java代码就比较简单，动态和静态函数注册写法都一样，这里就直接贴代码了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;native-lib&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// Example of a call to a native method</span></span><br><span class="line">        TextView tv = (TextView) findViewById(R.id.sample_text);</span><br><span class="line">        tv.setText(stringFromJNI());</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> String <span class="title">stringFromJNI</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> <span class="keyword">int</span> <span class="title">sub</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2)</span></span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">native</span> String <span class="title">iWillGet</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;add:&quot;</span>+add(<span class="number">1</span>,<span class="number">2</span>), Toast.LENGTH_SHORT).show();</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, <span class="string">&quot;sub:&quot;</span>+sub(<span class="number">2</span>,<span class="number">1</span>), Toast.LENGTH_SHORT).show();</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>, iWillGet(), Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实现的demo"><a href="#实现的demo" class="headerlink" title="实现的demo"></a>实现的demo</h3><p><img src="a2uw9-xf03p.gif" alt="demo"></p><h2 id="逆向查看"><a href="#逆向查看" class="headerlink" title="逆向查看"></a>逆向查看</h2><h3 id="JEB查看java代码"><a href="#JEB查看java代码" class="headerlink" title="JEB查看java代码"></a>JEB查看java代码</h3><p><img src="image-20220718173657712.png" alt="image-20220718173657712"></p><h3 id="IDA查看so代码"><a href="#IDA查看so代码" class="headerlink" title="IDA查看so代码"></a>IDA查看so代码</h3><p>不管在任何架构下，都可以看到<code>Java_com_qqq_test_autimaticso_MainActivity_stringFromJNI</code>函数名，因为这是静态注册的函数，那么动态注册的函数，以Arm64-v8a架构下的so为例，动态注册的函数需要在<code>JNI_OnLoad</code>函数里面观察调试。</p><p><img src="image-20220718174641356.png" alt="image-20220718174641356"></p><p>里面我们只要找到了函数映射表，即JNINativeMethod数组，就能得到所有动态函数注册的映射关系。这里很显然，在RegisterNatives函数的第三个参数，就是我们需要的函数映射表。</p><p><img src="image-20220718175059869.png" alt="image-20220718175059869"></p><p>然后，到这里，直接可以发现，第三个参数，第六个参数，第九个参数就是函数的地址。可以双击查看各自伪代码</p><p><img src="image-20220718175609917.png" alt="image-20220718175609917"></p><p>当然，这是由于demo比较简单，在实际场景中，动态调试分析或hook分析过程中，可以注意一下NDK函数可以静态注册，有些分析方法思路得另辟捷径。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>本文demo下载：<a href="https://pan.baidu.com/s/1m0gxIVOe0LwL2o3jwfXPzw">https://pan.baidu.com/s/1m0gxIVOe0LwL2o3jwfXPzw</a> （kata）</p><p>Android studio实现动态注册Native方法：<a href="https://www.jianshu.com/p/14436d56e6be">https://www.jianshu.com/p/14436d56e6be</a></p><p>Android NDK开发——静态注册和动态注册：<a href="https://zhuanlan.zhihu.com/p/357885076">https://zhuanlan.zhihu.com/p/357885076</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> C </tag>
            
            <tag> 编译器 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SO加固之section加密</title>
      <link href="2023/03/19/so-jia-gu-zhi-section-jia-mi/"/>
      <url>2023/03/19/so-jia-gu-zhi-section-jia-mi/</url>
      
        <content type="html"><![CDATA[<h1 id="SO加固之section加密"><a href="#SO加固之section加密" class="headerlink" title="SO加固之section加密"></a>SO加固之section加密</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>没有前言</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>为了简单演示section加密，那就使用默认的native stringFromJNI函数吧</p><h3 id="JNI代码"><a href="#JNI代码" class="headerlink" title="JNI代码"></a>JNI代码</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>都知道c语言程序一般都是从main函数开始执行，但是需要知道的是，有<code>__attribute__((constructor))</code>属性的函数会先于main函数执行，这就为加壳解密带来了契机。其次，还可以通过<code>__attribute__((section(&quot;.mytext&quot;)))</code>的方式将特定的函数编译到so文件中特定的节区中。那么，我们就可以通过加密特定的节区实现加固so文件。再通过<code>__attribute__((constructor))</code>优先于main函数的方法，进行section解密，最后运行解密后的节区里面的代码。</p><h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;elf.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/mman.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;android/log.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  LOG_TAG <span class="meta-string">&quot;SHUIYES&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  LOGD(fmt, args...)  __android_log_print(ANDROID_LOG_INFO,LOG_TAG, fmt, ##args)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> <span class="function">jstring <span class="title">Java_com_qqq_test_sectionso_MainActivity_stringFromJNI</span><span class="params">(JNIEnv* env,jobject <span class="comment">/* this */</span>)</span> __<span class="title">attribute__</span><span class="params">((section(<span class="string">&quot;.mytext&quot;</span>)))</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_getString</span><span class="params">()</span> __<span class="title">attribute__</span><span class="params">((constructor))</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">getLibAddr</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span></span><br><span class="line">JNIEXPORT jstring</span><br><span class="line"></span><br><span class="line">JNICALL</span><br><span class="line">Java_com_qqq_test_sectionso_MainActivity_stringFromJNI(</span><br><span class="line">        JNIEnv *env,</span><br><span class="line">        jobject <span class="comment">/* this */</span>) &#123;</span><br><span class="line">    <span class="built_in">std</span>::<span class="built_in">string</span> hello = <span class="string">&quot;Hello from C++&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> env-&gt;NewStringUTF(hello.c_str());</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init_getString</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">15</span>];</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> length;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> nsize;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> base;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> text_addr;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i;</span><br><span class="line">    Elf32_Ehdr *ehdr;</span><br><span class="line"></span><br><span class="line">    base = getLibAddr();<span class="comment">//获取so的起始位置</span></span><br><span class="line">    ehdr = (Elf32_Ehdr *)base;</span><br><span class="line">    text_addr = ehdr-&gt;e_flags + base; <span class="comment">//偏移值,加密节的地址</span></span><br><span class="line">    length = ehdr-&gt;e_entry &gt;&gt; <span class="number">16</span>;<span class="comment">//加密节的大小(高位)</span></span><br><span class="line">    nsize = ehdr-&gt;e_entry &amp; <span class="number">0xffff</span>;<span class="comment">//（低位）</span></span><br><span class="line"></span><br><span class="line">    LOGD(<span class="string">&quot;tips:&quot;</span>);</span><br><span class="line">    LOGD(<span class="string">&quot;base:0x%x&quot;</span>, base);</span><br><span class="line">    LOGD(<span class="string">&quot;mysection at 0x%x&quot;</span>, ehdr-&gt;e_flags);</span><br><span class="line">    LOGD(<span class="string">&quot;length:%d&quot;</span>, length);</span><br><span class="line">    LOGD(<span class="string">&quot;nsize:%d&quot;</span>, nsize);</span><br><span class="line">    LOGD(<span class="string">&quot;text_addr:0x%x&quot;</span>,text_addr);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> status = mprotect((<span class="keyword">void</span> *)(base), <span class="number">4096</span> * nsize, PROT_EXEC|PROT_READ|PROT_WRITE);</span><br><span class="line">    <span class="keyword">if</span> ( status != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//修改内存权限失败</span></span><br><span class="line">        LOGD(<span class="string">&quot;error set .mytext read,mprotect:%d&quot;</span>, status);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//进行解密</span></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">char</span> *addr = (<span class="keyword">char</span>*)(text_addr + i);</span><br><span class="line">        *addr = ~(*addr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> sa = mprotect((<span class="keyword">void</span> *)(base), <span class="number">4096</span>*nsize, PROT_EXEC|PROT_READ);</span><br><span class="line">    <span class="keyword">if</span> ( sa != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//修改内存权限失败</span></span><br><span class="line">        LOGD(<span class="string">&quot;error set .mytext noly read&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    LOGD(<span class="string">&quot;decrept success&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取so文件被加载到内存中的起始地址</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="title">getLibAddr</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pid = getpid();</span><br><span class="line">    <span class="keyword">char</span> buf[<span class="number">4096</span>];</span><br><span class="line">    <span class="keyword">char</span> *temp;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> base = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sprintf</span>(buf,<span class="string">&quot;/proc/%d/maps&quot;</span>,pid);<span class="comment">//在这个文件中有进程映射的模块信息</span></span><br><span class="line">    fp = fopen(buf,<span class="string">&quot;r&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="keyword">goto</span> error;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (fgets(buf, <span class="keyword">sizeof</span>(buf),fp))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strstr</span>(buf,<span class="string">&quot;libnative-lib.so&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            temp = strtok(buf, <span class="string">&quot;-&quot;</span>);<span class="comment">//返回-之前的字符串</span></span><br><span class="line">            base = strtoul(temp, <span class="literal">NULL</span>, <span class="number">16</span>);<span class="comment">//字符串转换为长整型</span></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    error:</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> base;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里主要要注意一下，网上有些博主，mprotect函数修改内存权限，大多写的是<code>mprotect((void*)(text_addr/PAGE_SIZE * PAGE_SIZE), 4096*nsize, PROT_EXEC|PROT_READ)</code>，多次测试，程序很多时候都不能运行，也看了网上很多文章，也没有说清楚。</p><p>通过mprotect修改<code>text_addr/PAGE_SIZE * PAGE_SIZE</code>权限为可读时，会修改不成功，我从开始写section加密到调试“程序无法运行”，一直找原因，用了4天左右，还是只知道修改内存权限，这里会爆“SIGSEGV (signal SIGSEGV: address access protected (fault address: 0xa7d380c4))”错误。有博主<a href="https://blog.csdn.net/earbao/article/details/120308836">https://blog.csdn.net/earbao/article/details/120308836</a> 在文章中这样解释，还是感觉有问题。</p><h3 id="section加密程序"><a href="#section加密程序" class="headerlink" title="section加密程序"></a>section加密程序</h3><h4 id="原理-1"><a href="#原理-1" class="headerlink" title="原理"></a>原理</h4><p>通过遍历节区名的方式，找到so文件的特定节区，然后读取节区偏移和大小，将其偏移所在的位置进行加密，然后将节区偏移、大小等数据保存在so header里面，即e_entry、e_flags、e_shentsize等部位，因为动态链接库的这些东西都没用。</p><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;tchar.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;elf.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> soPath[MAX_PATH] = <span class="string">&quot;libnative-lib.so&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> section[] = <span class="string">&quot;.mytext&quot;</span>;</span><br><span class="line"></span><br><span class="line">    HANDLE hFile = CreateFileA(soPath, GENERIC_READ|GENERIC_WRITE, FILE_SHARE_READ, <span class="literal">NULL</span>, OPEN_EXISTING, FILE_ATTRIBUTE_NORMAL,<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">if</span> (hFile == INVALID_HANDLE_VALUE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;no such file&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ULONG ulHigh = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> ulLow = GetFileSize(hFile, &amp;ulHigh);</span><br><span class="line">    <span class="keyword">char</span> fileData[ulLow + <span class="number">20</span>];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;file at 0x%x \n&quot;</span>, fileData);</span><br><span class="line"></span><br><span class="line">    ULONG ulReturn = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (ReadFile(hFile, fileData, ulLow, &amp;ulReturn, <span class="literal">NULL</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        CloseHandle(hFile);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    Elf32_Ehdr* ehdr = (Elf32_Ehdr*)(fileData);</span><br><span class="line">    Elf32_Shdr* shdrstr = (Elf32_Shdr*)(fileData + ehdr-&gt;e_shoff + <span class="keyword">sizeof</span>(Elf32_Shdr)*ehdr-&gt;e_shstrndx);</span><br><span class="line">    <span class="keyword">char</span> *shstr = (<span class="keyword">char</span>*)(fileData + shdrstr-&gt;sh_offset);</span><br><span class="line">    Elf32_Shdr* shdr = (Elf32_Shdr*)(fileData + ehdr-&gt;e_shoff);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> base, length, i;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; ehdr-&gt;e_shnum; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(shstr + shdr-&gt;sh_name, section) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            base = shdr-&gt;sh_offset;</span><br><span class="line">            length = shdr-&gt;sh_size;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;find section %s at 0x%x size: 0x%x\n&quot;</span>, section, base, length);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        shdr++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span>* content = <span class="literal">NULL</span>;</span><br><span class="line">    content = (<span class="keyword">char</span>*)(fileData + base);</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> nblock,nsize;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> block_size = <span class="number">16</span>;</span><br><span class="line">    nblock = length / block_size;</span><br><span class="line">    nsize = base/<span class="number">4096</span> + (base % <span class="number">4096</span> == <span class="number">0</span> ? <span class="number">0</span>:<span class="number">1</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;base = 0x%x, length = 0x%x\n&quot;</span>, base, length);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;nblock = %d, nsize = %d\n&quot;</span>, nblock, nsize);</span><br><span class="line"></span><br><span class="line">    ehdr-&gt;e_entry = (length &lt;&lt; <span class="number">16</span>) + nsize;<span class="comment">//大小</span></span><br><span class="line">    ehdr-&gt;e_flags = base;<span class="comment">//地址</span></span><br><span class="line">    ehdr-&gt;e_shentsize = <span class="number">1</span>;<span class="comment">//(可改)</span></span><br><span class="line">    ehdr-&gt;e_shstrndx = <span class="number">5</span>;<span class="comment">//（可改）</span></span><br><span class="line">    <span class="comment">//e_shoff,e_shnum不能改</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;content is %x\n&quot;</span>, content);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; length; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        content[i] =~content[i];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">strcat</span>(soPath, <span class="string">&quot;_&quot;</span>);</span><br><span class="line">    HANDLE hFileOut = CreateFileA(soPath,GENERIC_READ|GENERIC_WRITE,FILE_SHARE_READ,<span class="literal">NULL</span>,OPEN_ALWAYS,FILE_ATTRIBUTE_NORMAL,<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (hFileOut == INVALID_HANDLE_VALUE)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;file create error&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-3</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (WriteFile(hFileOut, fileData, ulLow, &amp;ulReturn, <span class="literal">NULL</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;write success&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;write error: %d\r\n&quot;</span>, GetLastError());</span><br><span class="line">    &#125;</span><br><span class="line">    CloseHandle(hFile);</span><br><span class="line">    CloseHandle(hFileOut);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><p><img src="image-20220816194603973.png" alt="image-20220816194603973"></p><h2 id="探究"><a href="#探究" class="headerlink" title="探究"></a>探究</h2><p>通过对secion加密来实现对函数加密，方法虽然不错，但是也能被破解，破解方法很简单，直接在内存里面dump解密后的代码就行了。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>实例下载：<a href="https://pan.baidu.com/s/148Mr1Hb6Lu-fuJh3cd0t4w">https://pan.baidu.com/s/148Mr1Hb6Lu-fuJh3cd0t4w</a> （kata）</p><p>ELF文件格式分析：<a href="https://www.cnblogs.com/lhc-java/p/5549774.html">https://www.cnblogs.com/lhc-java/p/5549774.html</a></p><p><a href="https://bbs.pediy.com/thread-191649.htm">https://bbs.pediy.com/thread-191649.htm</a></p><p>基于对so中的section加密技术实现so加固：<a href="https://blog.csdn.net/qq_44906504/article/details/89512706">https://blog.csdn.net/qq_44906504/article/details/89512706</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> C </tag>
            
            <tag> 原理 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>写一个Android第一代壳</title>
      <link href="2023/01/15/xie-yi-ge-android-di-yi-dai-ke/"/>
      <url>2023/01/15/xie-yi-ge-android-di-yi-dai-ke/</url>
      
        <content type="html"><![CDATA[<h1 id="写一个Android第一代壳"><a href="#写一个Android第一代壳" class="headerlink" title="写一个Android第一代壳"></a>写一个Android第一代壳</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在讲解之前，需要了解加壳之前，必须先了解Android动态加载Apk的原理及机制，这次基于这样的机制，实现加壳。</p><h2 id="加壳实例"><a href="#加壳实例" class="headerlink" title="加壳实例"></a>加壳实例</h2><h3 id="被加壳的APP"><a href="#被加壳的APP" class="headerlink" title="被加壳的APP"></a>被加壳的APP</h3><p>随便写个demo的App来，至于为什么这么写，可以回顾一些Android动态加载Apk的原理</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qqq.myapp;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.Button;</span><br><span class="line"><span class="keyword">import</span> android.widget.LinearLayout;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Activity that;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainActivity</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MainActivity</span><span class="params">(Activity content)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        that = content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (that != <span class="keyword">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            LinearLayout lv = <span class="keyword">new</span> LinearLayout(that);</span><br><span class="line">            that.setContentView(lv);</span><br><span class="line">            Button btn = <span class="keyword">new</span> Button(that);</span><br><span class="line">            btn.setText(<span class="string">&quot;点我&quot;</span>);</span><br><span class="line">            lv.addView(btn);</span><br><span class="line">            btn.setOnClickListener(<span class="keyword">this</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">            setContentView(R.layout.activity_main);</span><br><span class="line">            that = <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getMessage</span><span class="params">(String str)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">        Toast.makeText(that,str,Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        getMessage(<span class="string">&quot;加载成功，并点击&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="壳APP"><a href="#壳APP" class="headerlink" title="壳APP"></a>壳APP</h3><p>壳App执行流程就是将被合并的apk数据从classes.dex中提取出来，然后解密，最后加载Activity</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qqq.test.shell;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Application;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.DataInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipEntry;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipInputStream;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by admin on 2022/7/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">App</span> <span class="keyword">extends</span> <span class="title">Application</span></span>&#123;</span><br><span class="line">    String odexPath,apkFileName;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">attachBaseContext</span><span class="params">(Context base)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.attachBaseContext(base);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            File odex = <span class="keyword">this</span>.getDir(<span class="string">&quot;odex&quot;</span>, MODE_PRIVATE);</span><br><span class="line">            odexPath = odex.getAbsolutePath();</span><br><span class="line">            apkFileName = odexPath + <span class="string">&quot;/myapp.apk&quot;</span>;</span><br><span class="line">            File dexFile = <span class="keyword">new</span> File(apkFileName);</span><br><span class="line">            <span class="keyword">if</span> (!dexFile.exists())</span><br><span class="line">            &#123;</span><br><span class="line">                dexFile.createNewFile();</span><br><span class="line">                <span class="keyword">byte</span>[] dexdata = readDexFromApk();</span><br><span class="line">                splitApk(dexdata);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">splitApk</span><span class="params">(<span class="keyword">byte</span>[] dexdata)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        <span class="keyword">int</span> dexlen = dexdata.length;</span><br><span class="line">        <span class="keyword">byte</span>[] dexlendata = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">        System.arraycopy(dexdata,dexlen - <span class="number">4</span>, dexlendata,<span class="number">0</span>,<span class="number">4</span> );</span><br><span class="line">        <span class="keyword">int</span> apklen = (<span class="keyword">new</span> DataInputStream(<span class="keyword">new</span> ByteArrayInputStream(dexlendata))).readInt();</span><br><span class="line">        <span class="comment">//得到apk数据长度</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] newDex = <span class="keyword">new</span> <span class="keyword">byte</span>[apklen];</span><br><span class="line">        System.arraycopy(dexdata, dexlen - apklen - <span class="number">4</span>, newDex, <span class="number">0</span>, apklen);</span><br><span class="line"></span><br><span class="line">        newDex = decrpt(newDex);<span class="comment">//进行解密处理</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//写入文件</span></span><br><span class="line">        File file = <span class="keyword">new</span> File(apkFileName);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            FileOutputStream out = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">            out.write(newDex);</span><br><span class="line">            out.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(e);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//可添加so文件处理，将apk中的so文件拿出来，放到/data/data/app包名/lib目录下，由于本实例不需要，这里省略</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] decrpt(<span class="keyword">byte</span>[] newDex) &#123;</span><br><span class="line">        <span class="keyword">return</span> newDex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] readDexFromApk() <span class="keyword">throws</span> IOException&#123;</span><br><span class="line">        ByteArrayOutputStream dex = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        ZipInputStream local = <span class="keyword">new</span> ZipInputStream(<span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(getApplicationInfo().sourceDir)));</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ZipEntry zipentry = local.getNextEntry();</span><br><span class="line">            <span class="keyword">if</span> (zipentry == <span class="keyword">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                local.close();</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (zipentry.getName().equals(<span class="string">&quot;classes.dex&quot;</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">                <span class="keyword">int</span> i = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">while</span> ((i = local.read(b)) != -<span class="number">1</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    dex.write(b, <span class="number">0</span>, i);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            local.closeEntry();</span><br><span class="line">        &#125;</span><br><span class="line">        local.close();</span><br><span class="line">        <span class="keyword">return</span> dex.toByteArray();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面的代码是实现加载apk运行的实例。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qqq.test.shell;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.annotation.SuppressLint;</span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.pm.PackageInfo;</span><br><span class="line"><span class="keyword">import</span> android.support.v7.app.AppCompatActivity;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Constructor;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Method;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dalvik.system.DexClassLoader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GoodActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String mClss;</span><br><span class="line">    <span class="keyword">private</span> String dexPath;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        <span class="keyword">this</span>.dexPath = <span class="keyword">this</span>.getDir(<span class="string">&quot;odex&quot;</span>, MODE_PRIVATE).getAbsolutePath() + File.separator +<span class="string">&quot;myapp.apk&quot;</span>;</span><br><span class="line">        lanuchTargetActivity();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NewApi&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">lanuchTargetActivity</span><span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        PackageInfo packageinfo = getPackageManager().getPackageArchiveInfo(dexPath, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> ((packageinfo != <span class="keyword">null</span>)&amp;&amp;(packageinfo.activities.length&gt;<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            String activityName = packageinfo.activities[<span class="number">0</span>].name;</span><br><span class="line">            mClss = activityName;</span><br><span class="line">            launchTargetActivity(mClss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@SuppressLint(&quot;NewApi&quot;)</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">launchTargetActivity</span><span class="params">(<span class="keyword">final</span> String className)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        File dexOutputDir = <span class="keyword">this</span>.getDir(<span class="string">&quot;loadedDexDir&quot;</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">final</span> String dexOutputPath = dexOutputDir.getAbsolutePath();</span><br><span class="line">        ClassLoader classLoader = ClassLoader.getSystemClassLoader();</span><br><span class="line">        DexClassLoader dexClassLoader = <span class="keyword">new</span> DexClassLoader(dexPath,dexOutputPath,<span class="keyword">null</span>,classLoader);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            Class&lt;?&gt; localClass = dexClassLoader.loadClass(className);<span class="comment">//实例化activity</span></span><br><span class="line">            Constructor&lt;?&gt; localConstructor = localClass.getConstructor(<span class="keyword">new</span> Class[]&#123;Activity.class&#125;);</span><br><span class="line">            Object instense = localConstructor.newInstance(<span class="keyword">new</span> Object[]&#123;<span class="keyword">this</span>&#125;);</span><br><span class="line"></span><br><span class="line">            Method onCreate = localClass.getDeclaredMethod(<span class="string">&quot;onCreate&quot;</span>, <span class="keyword">new</span> Class[]&#123;Bundle.class&#125;);</span><br><span class="line">            onCreate.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            Bundle bundle = <span class="keyword">new</span> Bundle();</span><br><span class="line">            onCreate.invoke(instense, <span class="keyword">new</span> Object[]&#123;bundle&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.getStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里需要替换Application入口，先执行解密代码，然后再正常执行壳APP的正常逻辑，即加载已经解密后的App。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">manifest</span> <span class="attr">xmlns:android</span>=<span class="string">&quot;http://schemas.android.com/apk/res/android&quot;</span></span></span><br><span class="line"><span class="tag">    <span class="attr">package</span>=<span class="string">&quot;com.qqq.test.shell&quot;</span>&gt;</span></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup=&quot;true&quot;</span><br><span class="line">        android:icon=&quot;@mipmap/ic_launcher&quot;</span><br><span class="line">        android:label=&quot;@string/app_name&quot;</span><br><span class="line">        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;</span><br><span class="line">        android:supportsRtl=&quot;true&quot;</span><br><span class="line">        android:name=&quot;.App&quot;</span><br><span class="line">        android:theme=&quot;@style/AppTheme&quot;&gt;</span><br><span class="line">        <span class="tag">&lt;<span class="name">activity</span> <span class="attr">android:name</span>=<span class="string">&quot;.GoodActivity&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.action.MAIN&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">&quot;android.intent.category.LAUNCHER&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">activity</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="加壳工程"><a href="#加壳工程" class="headerlink" title="加壳工程"></a>加壳工程</h3><p>新建java工程，然后写代码，将壳app(shell.apk)和被加壳app（myapp.apk）放在同一目录下。加壳的流程就是</p><ul><li>解压壳APP，读取解压的classes.dex的数据</li><li>读取需要加壳的app的数据，并按需加密</li><li>将壳的数据和已被加密的数据合并，并在数据结尾用4个字节记录加密数据长度</li><li>将合并的新的dex数据进行依次修复file_size、SHA1_signature及checksum数据</li><li>把修复好的新dex数据输出，并替换原shell目录下的classes.dex文件</li><li>压缩替换classes.dex的文件目录为新的apk</li><li>最后对新的apk进行签名、安装、测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.Adler32;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipEntry;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipFile;</span><br><span class="line"><span class="keyword">import</span> java.util.Enumeration;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.zip.ZipInputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">enCode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String path = <span class="string">&quot;E:\\testShell\\&quot;</span>;</span><br><span class="line">     <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">try</span> &#123; </span><br><span class="line">        File srcFile = <span class="keyword">new</span> File(path + <span class="string">&quot;myapp.apk&quot;</span>);</span><br><span class="line">        d(<span class="string">&quot;需要加密的apk大小&quot;</span>,String.valueOf(srcFile.length()));</span><br><span class="line"></span><br><span class="line">        File shellFile = <span class="keyword">new</span> File(path + <span class="string">&quot;shell.apk&quot;</span>);</span><br><span class="line">        d(<span class="string">&quot;原始壳apk大小&quot;</span>,String.valueOf(shellFile.length()));</span><br><span class="line"></span><br><span class="line">        File shellDexFile = getZipFile(shellFile, <span class="string">&quot;classes.dex&quot;</span>);</span><br><span class="line">        d(<span class="string">&quot;原始壳dex大小&quot;</span>,String.valueOf(shellDexFile.length()));</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">byte</span>[] shellDex = getFilebyte(shellDexFile);</span><br><span class="line">        <span class="keyword">byte</span>[] enCodedApk = encrpt(getFilebyte(srcFile));</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> enCodedApkLen = enCodedApk.length;</span><br><span class="line">        d(<span class="string">&quot;加密后的apk大小&quot;</span>,String.valueOf(enCodedApkLen));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> shellDexLen = shellDex.length;</span><br><span class="line">        d(<span class="string">&quot;原始shellDex大小&quot;</span>,String.valueOf(shellDexLen));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> toatalLen = enCodedApkLen + shellDexLen + <span class="number">4</span>;</span><br><span class="line">        d(<span class="string">&quot;合并后shell-encodedApk.dex大小&quot;</span>,String.valueOf(toatalLen));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">byte</span>[] newDex = <span class="keyword">new</span> <span class="keyword">byte</span>[toatalLen];</span><br><span class="line">        System.arraycopy(shellDex, <span class="number">0</span>, newDex, <span class="number">0</span>, shellDexLen);</span><br><span class="line">        System.arraycopy(enCodedApk, <span class="number">0</span>, newDex, shellDexLen, enCodedApkLen);</span><br><span class="line">        System.arraycopy(intToByte(enCodedApkLen), <span class="number">0</span>, newDex, toatalLen - <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line"></span><br><span class="line">        fixNewdexHeaderSize(newDex);</span><br><span class="line">        d(<span class="string">&quot;修复file_size&quot;</span>,<span class="string">&quot;完成&quot;</span>);</span><br><span class="line"></span><br><span class="line">        fixSHA1Header(newDex);</span><br><span class="line">        d(<span class="string">&quot;修复signature&quot;</span>,<span class="string">&quot;完成&quot;</span>);</span><br><span class="line"></span><br><span class="line">        fixNewdexHeqaderChecksum(newDex);</span><br><span class="line">        d(<span class="string">&quot;修复checksum&quot;</span>,<span class="string">&quot;完成&quot;</span>);</span><br><span class="line">        </span><br><span class="line">        File outNewDexFile = <span class="keyword">new</span> File(path + <span class="string">&quot;shell-encodedApk.dex&quot;</span>);</span><br><span class="line">        outNewDexFile.createNewFile();</span><br><span class="line">        FileOutputStream outStream = <span class="keyword">new</span> FileOutputStream(outNewDexFile);</span><br><span class="line">        outStream.write(newDex);</span><br><span class="line">        outStream.flush();</span><br><span class="line">        outStream.close();</span><br><span class="line">        d(<span class="string">&quot;输出&quot;</span>,<span class="string">&quot;shell-encodedApk.dex&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        File news = <span class="keyword">new</span> File(path + <span class="string">&quot;shell/classes.dex&quot;</span>);</span><br><span class="line">        news.createNewFile();</span><br><span class="line">        FileOutputStream outSteam = <span class="keyword">new</span> FileOutputStream(news);</span><br><span class="line">        outSteam.write(newDex);</span><br><span class="line">        outSteam.flush();</span><br><span class="line">        outSteam.close();</span><br><span class="line">        d(<span class="string">&quot;输出&quot;</span>,<span class="string">&quot;shell-encodedApk.dex到shell/classes.dex&quot;</span>);</span><br><span class="line"></span><br><span class="line">        File newApk = <span class="keyword">new</span> File(path + <span class="string">&quot;myapp-encoded.apk&quot;</span>);</span><br><span class="line">        toZip(path + <span class="string">&quot;shell&quot;</span>, <span class="keyword">new</span> FileOutputStream(newApk), <span class="keyword">true</span>);</span><br><span class="line">        d(<span class="string">&quot;输出&quot;</span>,<span class="string">&quot;myapp-encoded.apk&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//签名apk</span></span><br><span class="line">        apksign(path + <span class="string">&quot;myapp-encoded.apk&quot;</span>);</span><br><span class="line"></span><br><span class="line">      &#125; <span class="keyword">catch</span>(Exception e)</span><br><span class="line">      &#123;&#125; </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">apksign</span><span class="params">(String filePath)</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        String cmd = <span class="string">&quot;java -jar &quot;</span> + path +<span class="string">&quot;signApk/signapk.jar &quot;</span></span><br><span class="line">         + path + <span class="string">&quot;signApk/testkey.x509.pem &quot;</span></span><br><span class="line">         + path + <span class="string">&quot;signApk/testkey.pk8 &quot;</span></span><br><span class="line">         + filePath + <span class="string">&quot; &quot;</span></span><br><span class="line">         + filePath.replace(<span class="string">&quot;.apk&quot;</span>, <span class="string">&quot;_signed.apk&quot;</span>);</span><br><span class="line">        d(<span class="string">&quot;签名中&quot;</span>, cmd);</span><br><span class="line">        BufferedReader br = <span class="keyword">null</span>;</span><br><span class="line">        Process process = Runtime.getRuntime().exec(cmd);</span><br><span class="line">        InputStream is = process.getInputStream();</span><br><span class="line">        br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(is,<span class="string">&quot;utf-8&quot;</span>));</span><br><span class="line">        StringBuffer sb = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        sb.append(br.readLine());</span><br><span class="line">        String content;</span><br><span class="line">        <span class="keyword">while</span> ((content = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">            content = br.readLine();</span><br><span class="line">            sb.append(content);</span><br><span class="line">        &#125;</span><br><span class="line">        br.close();</span><br><span class="line">        br = <span class="keyword">null</span>;</span><br><span class="line">        d(<span class="string">&quot;签名信息&quot;</span>,content);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改dex头 file_size值</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] fixNewdexHeaderSize(<span class="keyword">byte</span>[] data)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] newLenData = intToByte(data.length);</span><br><span class="line">        d(<span class="string">&quot;修复file_size值为&quot;</span>,Integer.toHexString(data.length));</span><br><span class="line">        <span class="keyword">byte</span>[] refs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;<span class="comment">//高位低位转换</span></span><br><span class="line">            refs[i] = newLenData[newLenData.length - <span class="number">1</span> - i];</span><br><span class="line">            d(<span class="string">&quot;-修复为&quot;</span>,Integer.toHexString(newLenData[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        System.arraycopy(refs, <span class="number">0</span>, data, <span class="number">32</span>, <span class="number">4</span>);<span class="comment">//修改32-35 </span></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] fixSHA1Header(<span class="keyword">byte</span>[] data) <span class="keyword">throws</span> Exception</span><br><span class="line">    &#123;</span><br><span class="line">        MessageDigest md = MessageDigest.getInstance(<span class="string">&quot;SHA-1&quot;</span>);</span><br><span class="line">        md.update(data, <span class="number">32</span>, data.length - <span class="number">32</span>);</span><br><span class="line">        <span class="keyword">byte</span>[] newData = md.digest();</span><br><span class="line">        System.arraycopy(newData, <span class="number">0</span>, data, <span class="number">12</span>, <span class="number">20</span>);</span><br><span class="line">        <span class="comment">//输出sha-1值，可有可无</span></span><br><span class="line">        String hexstr = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; newData.length; i++) &#123;</span><br><span class="line">            hexstr += Integer.toString((newData[i] &amp; <span class="number">0xff</span>) + <span class="number">0x100</span>, <span class="number">16</span>).substring(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        d(<span class="string">&quot;-sha1 signature修改为&quot;</span>,hexstr);</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] fixNewdexHeqaderChecksum(<span class="keyword">byte</span>[] data)</span><br><span class="line">    &#123;</span><br><span class="line">        Adler32 adler = <span class="keyword">new</span> Adler32();</span><br><span class="line">        adler.update(data,<span class="number">12</span>,data.length-<span class="number">12</span>);<span class="comment">//从12到文件末计算</span></span><br><span class="line">        <span class="keyword">long</span> value = adler.getValue();</span><br><span class="line">        <span class="keyword">byte</span>[] newData = longToByte(value);</span><br><span class="line">        d(<span class="string">&quot;修复checkSum值为&quot;</span>,Long.toHexString(value));</span><br><span class="line">        <span class="keyword">byte</span>[] refs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;<span class="comment">//高位低位转换</span></span><br><span class="line">            refs[i] = newData[newData.length - <span class="number">1</span> - i];<span class="comment">//取低4位</span></span><br><span class="line">            d(<span class="string">&quot;-修复为&quot;</span>,Long.toHexString(newData[<span class="number">4</span> + i]));</span><br><span class="line">        &#125;</span><br><span class="line">        System.arraycopy(refs, <span class="number">0</span>, data, <span class="number">8</span>, <span class="number">4</span>);<span class="comment">//修改8-13 </span></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] longToByte(<span class="keyword">long</span> num) &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">8</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">7</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            b[i] = (<span class="keyword">byte</span>)(num%<span class="number">256</span>);</span><br><span class="line">            num &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] intToByte(<span class="keyword">int</span> num)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">3</span>; i &gt; <span class="number">0</span>; i--)</span><br><span class="line">        &#123;</span><br><span class="line">            b[i] = (<span class="keyword">byte</span>)(num%<span class="number">256</span>);</span><br><span class="line">            num &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] encrpt(<span class="keyword">byte</span>[] data)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] getFilebyte(File file) <span class="keyword">throws</span> IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">        ByteArrayOutputStream byteArrayOutputStream = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">        FileInputStream fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> readCount = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span> ((readCount = fis.read(buffer)) != -<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                byteArrayOutputStream.write(buffer, <span class="number">0</span>, readCount);</span><br><span class="line">            &#125;<span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        fis.close();</span><br><span class="line">        <span class="keyword">return</span> byteArrayOutputStream.toByteArray();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> File <span class="title">getZipFile</span><span class="params">(File file,String zipIn)</span> <span class="keyword">throws</span> Exception</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        ZipFile zip = <span class="keyword">new</span> ZipFile(file);</span><br><span class="line">        Enumeration&lt;? extends ZipEntry&gt; files = zip.entries();</span><br><span class="line">        ZipEntry entry = <span class="keyword">null</span>;</span><br><span class="line">        File outFile = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span> (files.hasMoreElements())</span><br><span class="line">        &#123;</span><br><span class="line">            entry = files.nextElement();</span><br><span class="line">            d(<span class="string">&quot;-解压中&quot;</span>,entry.getName());</span><br><span class="line"></span><br><span class="line">            String outPath = (path +<span class="string">&quot;shell/&quot;</span>+ entry.getName()).replace(<span class="string">&quot;\\*&quot;</span>, <span class="string">&quot;/&quot;</span>);</span><br><span class="line">            File outfile = <span class="keyword">new</span> File(outPath.substring(<span class="number">0</span>,outPath.lastIndexOf(<span class="string">&quot;/&quot;</span>)));</span><br><span class="line">            <span class="keyword">if</span> (!outfile.exists())</span><br><span class="line">            &#123;</span><br><span class="line">                outfile.mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            InputStream in = zip.getInputStream(entry);</span><br><span class="line">            OutputStream out = <span class="keyword">new</span> FileOutputStream(outPath);</span><br><span class="line">            <span class="keyword">byte</span>[] buf1 = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">while</span>((len=in.read(buf1))&gt;<span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                out.write(buf1,<span class="number">0</span>,len);</span><br><span class="line">            &#125;</span><br><span class="line">            in.close();</span><br><span class="line">            out.close();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (entry.getName().equals(zipIn))</span><br><span class="line">            &#123;</span><br><span class="line">                outFile = <span class="keyword">new</span> File(outPath);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        zip.close();</span><br><span class="line">        <span class="keyword">return</span> outFile;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> srcDir 压缩文件夹路径</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> out    压缩文件输出流</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> KeepDirStructure  是否保留原来的目录结构,true:保留目录结构;</span></span><br><span class="line"><span class="comment">         *                          false:所有文件跑到压缩包根目录下(注意：不保留目录结构可能会出现同名文件,会压缩失败)</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@throws</span> RuntimeException 压缩失败会抛出运行时异常</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">toZip</span><span class="params">(String srcDir, OutputStream out, <span class="keyword">boolean</span> KeepDirStructure)</span></span></span><br><span class="line"><span class="function">        <span class="keyword">throws</span> RuntimeException</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> start = System.currentTimeMillis();</span><br><span class="line">        ZipOutputStream zos = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            zos = <span class="keyword">new</span> ZipOutputStream(out);</span><br><span class="line">            File sourceFile = <span class="keyword">new</span> File(srcDir);</span><br><span class="line">            compress(sourceFile, zos, sourceFile.getName(), KeepDirStructure);</span><br><span class="line">            <span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">            d(<span class="string">&quot;压缩用时&quot;</span>,String.valueOf(end - start) + <span class="string">&quot;ms&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">&quot;zip error from ZipUtils&quot;</span>, e);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (zos != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    zos.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">      <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 递归压缩方法</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> sourceFile 源文件</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> zos        zip输出流</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> name       压缩后的名称</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> KeepDirStructure  是否保留原来的目录结构,true:保留目录结构;</span></span><br><span class="line"><span class="comment">         *                          false:所有文件跑到压缩包根目录下(注意：不保留目录结构可能会出现同名文件,会压缩失败)</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">compress</span><span class="params">(File sourceFile, ZipOutputStream zos, String name,</span></span></span><br><span class="line"><span class="function"><span class="params">        <span class="keyword">boolean</span> KeepDirStructure)</span> <span class="keyword">throws</span> Exception </span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">2</span> * <span class="number">1024</span>];</span><br><span class="line">            d(<span class="string">&quot;-压缩中&quot;</span>,name);</span><br><span class="line">            <span class="keyword">if</span> (sourceFile.isFile()) &#123;</span><br><span class="line">                <span class="comment">// 向zip输出流中添加一个zip实体，构造器中name为zip实体的文件的名字</span></span><br><span class="line">                zos.putNextEntry(<span class="keyword">new</span> ZipEntry(name.substring(<span class="number">6</span>)));</span><br><span class="line">                <span class="comment">// copy文件到zip输出流中</span></span><br><span class="line">                <span class="keyword">int</span> len;</span><br><span class="line">                FileInputStream in = <span class="keyword">new</span> FileInputStream(sourceFile);</span><br><span class="line">                <span class="keyword">while</span> ((len = in.read(buf)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                    zos.write(buf, <span class="number">0</span>, len);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// Complete the entry</span></span><br><span class="line">                zos.closeEntry();</span><br><span class="line">                in.close();</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                File[] listFiles = sourceFile.listFiles();</span><br><span class="line">                <span class="keyword">if</span> ((listFiles == <span class="keyword">null</span> || listFiles.length == <span class="number">0</span>) &amp;&amp; !name.equals(<span class="string">&quot;shell&quot;</span>)) &#123;</span><br><span class="line">                    <span class="comment">// 需要保留原来的文件结构时,需要对空文件夹进行处理</span></span><br><span class="line">                    <span class="keyword">if</span> (KeepDirStructure) &#123;</span><br><span class="line">                        <span class="comment">// 空文件夹的处理</span></span><br><span class="line">                        zos.putNextEntry(<span class="keyword">new</span> ZipEntry(name + <span class="string">&quot;/&quot;</span>));</span><br><span class="line">                        <span class="comment">// 没有文件，不需要文件的copy</span></span><br><span class="line">                        zos.closeEntry();</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">for</span> (File file : listFiles) &#123;</span><br><span class="line">                        <span class="comment">// 判断是否需要保留原来的文件结构</span></span><br><span class="line">                        <span class="keyword">if</span> (KeepDirStructure) &#123;</span><br><span class="line">                            <span class="comment">// 注意：file.getName()前面需要带上父文件夹的名字加一斜杠,</span></span><br><span class="line">                            <span class="comment">// 不然最后压缩包中就不能保留原来的文件结构,即：所有文件都跑到压缩包根目录下了</span></span><br><span class="line">                            compress(file, zos, name + <span class="string">&quot;/&quot;</span> + file.getName(), KeepDirStructure);</span><br><span class="line">                        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                            compress(file, zos, file.getName(), KeepDirStructure);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">d</span><span class="params">(String str,String str1)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">long</span> time = System.currentTimeMillis();</span><br><span class="line">        System.out.println(<span class="string">&quot;[&quot;</span>+time+<span class="string">&quot;] &quot;</span>+str+<span class="string">&quot;:&quot;</span>+str1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行效果"><a href="#运行效果" class="headerlink" title="运行效果"></a>运行效果</h3><p><img src="image-20220806213231321.png" alt="image-20220806213231321"></p><h2 id="探究"><a href="#探究" class="headerlink" title="探究"></a>探究</h2><p>加壳，就是为了避免反编译直接被读取apk的正常代码，这里实现的加壳基本上实现了这样一个目的，完全看不见被合并的源apk逻辑。在JEB中的分析结果如下：</p><p><img src="image-20220806215751970.png" alt="image-20220806215751970"></p><p>但是这样加壳是有缺陷的，而且挺致命的。因为这里的加壳后运行会进行解密，并且将解密的apk结果放在了/data/data/私有目录下，就会导致已经root了的设备能够直接读取。这样的加载数据形式一般被称为落地加载，而不是在内存中加载。这样，即使落地加载一秒钟，也有可能被读取源apk数据。懂了这点，所以以后研究研究不落地加载的实例吧。</p><p>其次，虽然直接反编译不能直接看见被加密的代码逻辑，但是可以看到壳app的运行逻辑，也并不安全，最好将壳 apk的代码逻辑采用native的方式实现，这种方法也是相对安全的，但是至少能增加逆向者的时间花费。</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>下载实例：<a href="https://pan.baidu.com/s/15G8eB48ySQk1vkKh9LcGPg">https://pan.baidu.com/s/15G8eB48ySQk1vkKh9LcGPg</a> （kata）</p><p>Android之Apk加壳：<a href="https://blog.csdn.net/LVXIANGAN/article/details/84956476">https://blog.csdn.net/LVXIANGAN/article/details/84956476</a></p><p>Android第一代壳加固原理及实现：<a href="https://zhuanlan.zhihu.com/p/373056904">https://zhuanlan.zhihu.com/p/373056904</a></p><p>java压缩zip方法：<a href="https://www.cnblogs.com/stromgao/p/16086838.html">https://www.cnblogs.com/stromgao/p/16086838.html</a></p><p>用SignApk.jar对APK进行签名：<a href="http://t.zoukankan.com/fengxing999-p-11978037.html">http://t.zoukankan.com/fengxing999-p-11978037.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> Android </tag>
            
            <tag> Java </tag>
            
            <tag> 脚本 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵2022——InvisiableMaze解法</title>
      <link href="2022/11/28/an-xun-2022-invisiablemaze-jie-fa/"/>
      <url>2022/11/28/an-xun-2022-invisiablemaze-jie-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="InvisiableMaze"><a href="#InvisiableMaze" class="headerlink" title="InvisiableMaze"></a>InvisiableMaze</h1><h4 id="题目考点："><a href="#题目考点：" class="headerlink" title="题目考点："></a>题目考点：</h4><p>​            1.     玩玩游戏</p><p>​            2.     魔改xxtea</p><p>​            3.     解动态迷宫</p><p>​            4.      so的section节区脱壳</p><p>​            5.     NativeActivity（无java代码）</p><h4 id="题目难度："><a href="#题目难度：" class="headerlink" title="题目难度："></a>题目难度：</h4><p>中等</p><p><img src="poster.png" alt="poster"></p><h4 id="题目Hint："><a href="#题目Hint：" class="headerlink" title="题目Hint："></a>题目Hint：</h4><ol><li>play games</li><li>have you noticed function env?</li><li>or Maybe you don’t know I’ll change</li><li>Maybe you can try to run the Android 7.1 simulator</li></ol><h4 id="解题思路："><a href="#解题思路：" class="headerlink" title="解题思路："></a>解题思路：</h4><p>​            1.     动态调试，脱壳，dump出map（或提取数据，解xxtea获得map） </p><p>​            2.     解出迷宫路线，但迷宫将在移动时变换，后面还需要dump新的map</p><p>​            3.     并且解出迷宫，合并路线，生成md5的flag</p><p>​            4.     需要注意，上下左右是一次走到底，不会有类似连续“上移”等场景，易使flag得出错误</p><h4 id="题目下载："><a href="#题目下载：" class="headerlink" title="题目下载："></a>题目下载：</h4><p>以下两个地址均可：</p><p>蓝奏云： <a href="https://wwm.lanzouv.com/iyNic0gplh8d">https://wwm.lanzouv.com/iyNic0gplh8d</a>   (d0g3)</p><p>阿里云：<a href="https://www.aliyundrive.com/s/DhZDFCNdzrN">https://www.aliyundrive.com/s/DhZDFCNdzrN</a>  （9k3l）</p><p><img src="image-20221128110300566.png" alt="image-20221128110300566"></p><h4 id="题目wp"><a href="#题目wp" class="headerlink" title="题目wp"></a>题目wp</h4><p>先ida找到map的偏移（0x25604）</p><p><img src="image-20221119160459673.png" alt="image-20221119160459673"></p><p>同时容易得出该迷宫大小为40x40=1600。然后动态调试，找到so库的基址，然后frida来dump出map，这里记录为文件map0</p><p><img src="image-20221119154342963.png" alt="image-20221119154342963"></p><p>十六进制查看：</p><p><img src="image-20221119155239404.png" alt="image-20221119155239404"></p><p>写大小为40x40的解迷宫python脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line">maze0 = [</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">dirs = [</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x + <span class="number">1</span>, y),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x - <span class="number">1</span>, y),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x, y - <span class="number">1</span>),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x, y + <span class="number">1</span>)</span><br><span class="line">]</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPath</span>(<span class="params">maze,x1,y1,x2,y2</span>):</span></span><br><span class="line">    stack = []</span><br><span class="line">    path = []</span><br><span class="line">    shorts = []</span><br><span class="line">    stack.append((x1,y1))</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(stack)&gt;<span class="number">0</span>:</span><br><span class="line">        curNode = stack[-<span class="number">1</span>]  <span class="comment">#当前的节点</span></span><br><span class="line">        <span class="keyword">if</span> curNode[<span class="number">0</span>] == x2 <span class="keyword">and</span> curNode[<span class="number">1</span>] == y2:</span><br><span class="line">            X1 = x1</span><br><span class="line">            Y1 = y1</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> stack:</span><br><span class="line">                <span class="keyword">if</span> p[<span class="number">0</span>] != X1:</span><br><span class="line">                    <span class="keyword">if</span> p[<span class="number">0</span>] - <span class="number">1</span> == X1:</span><br><span class="line">                        path.append(<span class="string">&quot;down&quot;</span>) <span class="comment">#down 0</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        path.append(<span class="string">&quot;up&quot;</span>) <span class="comment">#up d</span></span><br><span class="line">                <span class="keyword">if</span> p[<span class="number">1</span>] != Y1:</span><br><span class="line">                    <span class="keyword">if</span> p[<span class="number">1</span>] - <span class="number">1</span> == Y1:</span><br><span class="line">                        path.append(<span class="string">&quot;right&quot;</span>) <span class="comment">#right 3</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        path.append(<span class="string">&quot;left&quot;</span>) <span class="comment">#left g</span></span><br><span class="line">                X1 = p[<span class="number">0</span>]</span><br><span class="line">                Y1 = p[<span class="number">1</span>]</span><br><span class="line">            print(<span class="string">&quot;xyPosition:\n&quot;</span>,stack)</span><br><span class="line">            print(<span class="string">&quot;stepPosition:\n&quot;</span>,path)</span><br><span class="line">            Tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> path:</span><br><span class="line">                <span class="keyword">if</span> d!=Tmp:</span><br><span class="line">                    shorts.append(d)</span><br><span class="line">                    Tmp = d       </span><br><span class="line">            print(<span class="string">&quot;step:\n&quot;</span>,shorts)</span><br><span class="line">            print(<span class="string">&quot;control:\n&quot;</span>,<span class="string">&#x27;-&#x27;</span>.join(shorts))</span><br><span class="line">            <span class="keyword">return</span> stack,path    <span class="comment">#Ture</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> di <span class="keyword">in</span> dirs:</span><br><span class="line">            nextNode = di(curNode[<span class="number">0</span>],curNode[<span class="number">1</span>])  <span class="comment">#如果下一个结点可以走</span></span><br><span class="line">            <span class="keyword">if</span> maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] ==<span class="number">0</span>:</span><br><span class="line">                stack.append(nextNode)</span><br><span class="line">                maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] = <span class="number">2</span>  <span class="comment">#标记为已经走过</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] = <span class="number">2</span></span><br><span class="line">            stack.pop()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;noWay&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#解出map0的路线</span></span><br><span class="line">getPath(maze0,<span class="number">1</span>,<span class="number">0</span>,<span class="number">38</span>,<span class="number">39</span>)</span><br><span class="line">​```</span><br><span class="line">control:</span><br><span class="line"> right-down-right-up-right-down-right-down-right-down-right-down-right-down-left-down-left-down-right-down-right-down-right-down-right-up-right-down-right-down-left-down-left-down-left-down-left-down-left-down-right-down-left-down-left-down-right-down-right-up-right-down-right-up-right-down-right-down-right-up-right-down-right-up-right-down-right</span><br><span class="line"></span><br><span class="line">​```</span><br></pre></td></tr></table></figure><p><img src="image-20221119161552604.png" alt="image-20221119161552604"></p><p>解完迷宫，在游戏里面走了一下，</p><p><img src="image-20221119162325954.png" alt="image-20221119162325954"></p><p>发现在人物走到步骤“xxx-down-left”的位置后，后面步骤全然不通。猜想迷宫地图变了。</p><p>这时，用相同的方法dump出新的地图map1，并且修复新dump出的map1，因为在走map0时，跳转到map1，且走了错误的map1，修复就回退走的路设置1为0</p><p><img src="image-20221119163304300.png" alt="image-20221119163304300"></p><p><img src="image-20221119163215444.png" alt="image-20221119163215444"></p><p>修复map1后，并再次解迷宫。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">maze1 = [</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,]   </span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">dirs = [</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x + <span class="number">1</span>, y),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x - <span class="number">1</span>, y),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x, y - <span class="number">1</span>),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x, y + <span class="number">1</span>)</span><br><span class="line">]</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPath</span>(<span class="params">maze,x1,y1,x2,y2</span>):</span></span><br><span class="line">    stack = []</span><br><span class="line">    path = []</span><br><span class="line">    shorts = []</span><br><span class="line">    stack.append((x1,y1))</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(stack)&gt;<span class="number">0</span>:</span><br><span class="line">        curNode = stack[-<span class="number">1</span>]  <span class="comment">#当前的节点</span></span><br><span class="line">        <span class="keyword">if</span> curNode[<span class="number">0</span>] == x2 <span class="keyword">and</span> curNode[<span class="number">1</span>] == y2:</span><br><span class="line">            X1 = x1</span><br><span class="line">            Y1 = y1</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> stack:</span><br><span class="line">                <span class="keyword">if</span> p[<span class="number">0</span>] != X1:</span><br><span class="line">                    <span class="keyword">if</span> p[<span class="number">0</span>] - <span class="number">1</span> == X1:</span><br><span class="line">                        path.append(<span class="string">&quot;down&quot;</span>) <span class="comment">#down 0</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        path.append(<span class="string">&quot;up&quot;</span>) <span class="comment">#up d</span></span><br><span class="line">                <span class="keyword">if</span> p[<span class="number">1</span>] != Y1:</span><br><span class="line">                    <span class="keyword">if</span> p[<span class="number">1</span>] - <span class="number">1</span> == Y1:</span><br><span class="line">                        path.append(<span class="string">&quot;right&quot;</span>) <span class="comment">#right 3</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        path.append(<span class="string">&quot;left&quot;</span>) <span class="comment">#left g</span></span><br><span class="line">                X1 = p[<span class="number">0</span>]</span><br><span class="line">                Y1 = p[<span class="number">1</span>]</span><br><span class="line">            print(<span class="string">&quot;xyPosition:\n&quot;</span>,stack)</span><br><span class="line">            print(<span class="string">&quot;stepPosition:\n&quot;</span>,path)</span><br><span class="line">            Tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> path:</span><br><span class="line">                <span class="keyword">if</span> d!=Tmp:</span><br><span class="line">                    shorts.append(d)</span><br><span class="line">                    Tmp = d       </span><br><span class="line">            print(<span class="string">&quot;step:\n&quot;</span>,shorts)</span><br><span class="line">            print(<span class="string">&quot;control:\n&quot;</span>,<span class="string">&#x27;-&#x27;</span>.join(shorts))</span><br><span class="line">            <span class="keyword">return</span> stack,path    <span class="comment">#Ture</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> di <span class="keyword">in</span> dirs:</span><br><span class="line">            nextNode = di(curNode[<span class="number">0</span>],curNode[<span class="number">1</span>])  <span class="comment">#如果下一个结点可以走</span></span><br><span class="line">            <span class="keyword">if</span> maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] ==<span class="number">0</span>:</span><br><span class="line">                stack.append(nextNode)</span><br><span class="line">                maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] = <span class="number">2</span>  <span class="comment">#标记为已经走过</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] = <span class="number">2</span></span><br><span class="line">            stack.pop()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;noWay&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#解出map1的路线</span></span><br><span class="line">getPath(maze1,<span class="number">1</span>,<span class="number">0</span>,<span class="number">38</span>,<span class="number">39</span>)</span><br></pre></td></tr></table></figure><p><img src="image-20221119163808937.png" alt="image-20221119163808937"></p><p>将地图一二相同的路线坐标输出，得出共同坐标。然后合并路线。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#使用栈来存储路径</span></span><br><span class="line">maze0 = [</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">maze1 = [</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,]   </span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPath</span>(<span class="params">maze,x1,y1,x2,y2</span>):</span></span><br><span class="line">    stack = []</span><br><span class="line">    path = []</span><br><span class="line">    shorts = []</span><br><span class="line">    stack.append((x1,y1))</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(stack)&gt;<span class="number">0</span>:</span><br><span class="line">        curNode = stack[-<span class="number">1</span>]  <span class="comment">#当前的节点</span></span><br><span class="line">        <span class="keyword">if</span> curNode[<span class="number">0</span>] == x2 <span class="keyword">and</span> curNode[<span class="number">1</span>] == y2:</span><br><span class="line">            X1 = x1</span><br><span class="line">            Y1 = y1</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> stack:</span><br><span class="line">                <span class="keyword">if</span> p[<span class="number">0</span>] != X1:</span><br><span class="line">                    <span class="keyword">if</span> p[<span class="number">0</span>] - <span class="number">1</span> == X1:</span><br><span class="line">                        path.append(<span class="string">&quot;down&quot;</span>) <span class="comment">#down 0</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        path.append(<span class="string">&quot;up&quot;</span>) <span class="comment">#up d</span></span><br><span class="line">                <span class="keyword">if</span> p[<span class="number">1</span>] != Y1:</span><br><span class="line">                    <span class="keyword">if</span> p[<span class="number">1</span>] - <span class="number">1</span> == Y1:</span><br><span class="line">                        path.append(<span class="string">&quot;right&quot;</span>) <span class="comment">#right 3</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        path.append(<span class="string">&quot;left&quot;</span>) <span class="comment">#left g</span></span><br><span class="line">                X1 = p[<span class="number">0</span>]</span><br><span class="line">                Y1 = p[<span class="number">1</span>]</span><br><span class="line">            print(<span class="string">&quot;xyPosition:\n&quot;</span>,stack)</span><br><span class="line">            print(<span class="string">&quot;stepPosition:\n&quot;</span>,path)</span><br><span class="line">            Tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> path:</span><br><span class="line">                <span class="keyword">if</span> d!=Tmp:</span><br><span class="line">                    shorts.append(d)</span><br><span class="line">                    Tmp = d       </span><br><span class="line">            print(<span class="string">&quot;step:\n&quot;</span>,shorts)</span><br><span class="line">            print(<span class="string">&quot;control:\n&quot;</span>,<span class="string">&#x27;-&#x27;</span>.join(shorts))</span><br><span class="line">            <span class="keyword">return</span> stack,path    <span class="comment">#Ture</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> di <span class="keyword">in</span> dirs:</span><br><span class="line">            nextNode = di(curNode[<span class="number">0</span>],curNode[<span class="number">1</span>])  <span class="comment">#如果下一个结点可以走</span></span><br><span class="line">            <span class="keyword">if</span> maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] ==<span class="number">0</span>:</span><br><span class="line">                stack.append(nextNode)</span><br><span class="line">                maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] = <span class="number">2</span>  <span class="comment">#标记为已经走过</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] = <span class="number">2</span></span><br><span class="line">            stack.pop()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;noWay&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">dirs = [</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x + <span class="number">1</span>, y),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x - <span class="number">1</span>, y),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x, y - <span class="number">1</span>),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x, y + <span class="number">1</span>)</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment">#解出map0,map1的路线</span></span><br><span class="line">s0 = getPath(maze0,<span class="number">1</span>,<span class="number">0</span>,<span class="number">38</span>,<span class="number">39</span>)</span><br><span class="line">s1 = getPath(maze1,<span class="number">1</span>,<span class="number">0</span>,<span class="number">38</span>,<span class="number">39</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#找出map0与map1所有公共点，</span></span><br><span class="line"><span class="comment">#可能地图丛这里开始变化，</span></span><br><span class="line"><span class="comment">#拼接之前与之后的路线</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s0[<span class="number">0</span>]:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s1[<span class="number">0</span>]:</span><br><span class="line">        <span class="keyword">if</span> i == j:</span><br><span class="line">            print(i)</span><br><span class="line"><span class="comment">#得出操作迷宫变换点为（25,19）           </span></span><br><span class="line"><span class="comment">#将map0与map1断开，拼接路线</span></span><br><span class="line">path = []</span><br><span class="line">bz = <span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s0[<span class="number">0</span>]:</span><br><span class="line">    <span class="keyword">if</span> i == (<span class="number">25</span>,<span class="number">19</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    path.append(s0[<span class="number">1</span>][s0[<span class="number">0</span>].index(i)])</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> s1[<span class="number">0</span>]: </span><br><span class="line">    <span class="keyword">if</span> j == (<span class="number">25</span>,<span class="number">19</span>):</span><br><span class="line">        bz = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> bz:</span><br><span class="line">        path.append(s1[<span class="number">1</span>][s1[<span class="number">0</span>].index(j)-<span class="number">1</span>])</span><br><span class="line">        </span><br><span class="line"><span class="comment">#去掉重复操作</span></span><br><span class="line">flag = []</span><br><span class="line">Tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> path:</span><br><span class="line">    <span class="keyword">if</span> d!=Tmp:</span><br><span class="line">        flag.append(d)</span><br><span class="line">        Tmp = d</span><br><span class="line">print(<span class="string">&quot;result control:\n&quot;</span>,<span class="string">&#x27;-&#x27;</span>.join(flag))</span><br><span class="line">​```</span><br><span class="line">result control:</span><br><span class="line"> right-down-right-up-right-down-right-down-right-down-right-down-right-down-left-down-left-down-right-down-right-down-right-down-right-up-right-down-right-down-left-down-left-down-left-down-left-down-right-down-right-up-right-down-right-down-right-down-left-down-left-down-left-up-left-down-left-down-left-down-left-down-right-down-right-up-right-up-right-up-right-up-right-up-right-up-right-up-right-up-left-up-right-up-right-down-right-down-left-down-right-down-left-down-left-down-left-down-left-down-right-up-right-down-right</span><br><span class="line">​```</span><br></pre></td></tr></table></figure><p><img src="image-20221119164616481.png" alt="image-20221119164616481"></p><p>得到新的操作路线，操作得到</p><p><img src="image-20221119170710223.png" alt="image-20221119170710223"></p><p>最后，按照poster的提示，更换“上下左右”为“d0g3”，生成md5的flag。</p><p><img src="image-20221119164856467.png" alt="image-20221119164856467"></p><p>完整代码为：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"><span class="comment">#使用栈来存储路径</span></span><br><span class="line">maze0 = [</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">maze1 = [</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,],</span><br><span class="line">[<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,]   </span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">dirs = [</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x + <span class="number">1</span>, y),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x - <span class="number">1</span>, y),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x, y - <span class="number">1</span>),</span><br><span class="line">    <span class="keyword">lambda</span> x, y: (x, y + <span class="number">1</span>)</span><br><span class="line">]</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getPath</span>(<span class="params">maze,x1,y1,x2,y2</span>):</span></span><br><span class="line">    stack = []</span><br><span class="line">    path = []</span><br><span class="line">    shorts = []</span><br><span class="line">    stack.append((x1,y1))</span><br><span class="line">    <span class="keyword">while</span> <span class="built_in">len</span>(stack)&gt;<span class="number">0</span>:</span><br><span class="line">        curNode = stack[-<span class="number">1</span>]  <span class="comment">#当前的节点</span></span><br><span class="line">        <span class="keyword">if</span> curNode[<span class="number">0</span>] == x2 <span class="keyword">and</span> curNode[<span class="number">1</span>] == y2:</span><br><span class="line">            X1 = x1</span><br><span class="line">            Y1 = y1</span><br><span class="line">            <span class="keyword">for</span> p <span class="keyword">in</span> stack:</span><br><span class="line">                <span class="keyword">if</span> p[<span class="number">0</span>] != X1:</span><br><span class="line">                    <span class="keyword">if</span> p[<span class="number">0</span>] - <span class="number">1</span> == X1:</span><br><span class="line">                        path.append(<span class="string">&quot;0&quot;</span>) <span class="comment">#down 0</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        path.append(<span class="string">&quot;d&quot;</span>) <span class="comment">#up d</span></span><br><span class="line">                <span class="keyword">if</span> p[<span class="number">1</span>] != Y1:</span><br><span class="line">                    <span class="keyword">if</span> p[<span class="number">1</span>] - <span class="number">1</span> == Y1:</span><br><span class="line">                        path.append(<span class="string">&quot;3&quot;</span>) <span class="comment">#right 3</span></span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        path.append(<span class="string">&quot;g&quot;</span>) <span class="comment">#left g</span></span><br><span class="line">                X1 = p[<span class="number">0</span>]</span><br><span class="line">                Y1 = p[<span class="number">1</span>]</span><br><span class="line">            print(<span class="string">&quot;xyPosition:\n&quot;</span>,stack)</span><br><span class="line">            print(<span class="string">&quot;stepPosition:\n&quot;</span>,path)</span><br><span class="line">            Tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">            <span class="keyword">for</span> d <span class="keyword">in</span> path:</span><br><span class="line">                <span class="keyword">if</span> d!=Tmp:</span><br><span class="line">                    shorts.append(d)</span><br><span class="line">                    Tmp = d       </span><br><span class="line">            print(<span class="string">&quot;step:\n&quot;</span>,shorts)</span><br><span class="line">            print(<span class="string">&quot;control:\n&quot;</span>,<span class="string">&#x27;&#x27;</span>.join(shorts))</span><br><span class="line">            <span class="keyword">return</span> stack,path    <span class="comment">#Ture</span></span><br><span class="line"> </span><br><span class="line">        <span class="keyword">for</span> di <span class="keyword">in</span> dirs:</span><br><span class="line">            nextNode = di(curNode[<span class="number">0</span>],curNode[<span class="number">1</span>])  <span class="comment">#如果下一个结点可以走</span></span><br><span class="line">            <span class="keyword">if</span> maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] ==<span class="number">0</span>:</span><br><span class="line">                stack.append(nextNode)</span><br><span class="line">                maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] = <span class="number">2</span>  <span class="comment">#标记为已经走过</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            maze[nextNode[<span class="number">0</span>]][nextNode[<span class="number">1</span>]] = <span class="number">2</span></span><br><span class="line">            stack.pop()</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(<span class="string">&quot;noWay&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"><span class="comment">#解出map0,map1的路线</span></span><br><span class="line">s0 = getPath(maze0,<span class="number">1</span>,<span class="number">0</span>,<span class="number">38</span>,<span class="number">39</span>)</span><br><span class="line">s1 = getPath(maze1,<span class="number">1</span>,<span class="number">0</span>,<span class="number">38</span>,<span class="number">39</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#找出map0与map1所有公共点，</span></span><br><span class="line"><span class="comment">#可能地图丛这里开始变化，</span></span><br><span class="line"><span class="comment">#拼接之前与之后的路线</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s0[<span class="number">0</span>]:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> s1[<span class="number">0</span>]:</span><br><span class="line">        <span class="keyword">if</span> i == j:</span><br><span class="line">            print(i)</span><br><span class="line">            </span><br><span class="line"><span class="comment">#将map0与map1断开，拼接路线</span></span><br><span class="line">path = []</span><br><span class="line">bz = <span class="literal">False</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s0[<span class="number">0</span>]:</span><br><span class="line">    <span class="keyword">if</span> i == (<span class="number">25</span>,<span class="number">19</span>):</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    path.append(s0[<span class="number">1</span>][s0[<span class="number">0</span>].index(i)])</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> s1[<span class="number">0</span>]: </span><br><span class="line">    <span class="keyword">if</span> j == (<span class="number">25</span>,<span class="number">19</span>):</span><br><span class="line">        bz = <span class="literal">True</span></span><br><span class="line">    <span class="keyword">if</span> bz:</span><br><span class="line">        path.append(s1[<span class="number">1</span>][s1[<span class="number">0</span>].index(j)-<span class="number">1</span>])</span><br><span class="line">        </span><br><span class="line"><span class="comment">#去掉重复操作</span></span><br><span class="line">flag = []</span><br><span class="line">Tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> d <span class="keyword">in</span> path:</span><br><span class="line">    <span class="keyword">if</span> d!=Tmp:</span><br><span class="line">        flag.append(d)</span><br><span class="line">        Tmp = d</span><br><span class="line">        </span><br><span class="line"><span class="comment">#md5加密得到flag</span></span><br><span class="line">md5 = hashlib.md5()</span><br><span class="line">md5.update(<span class="string">&#x27;&#x27;</span>.join(flag).encode(encoding=<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">print(<span class="string">&quot;result control:\n&quot;</span>,<span class="string">&#x27;-&#x27;</span>.join(flag))</span><br><span class="line">print(<span class="string">&quot;flag:\n&quot;</span>,<span class="string">&quot;D0g3&#123;%s&#125;&quot;</span>%md5.hexdigest())</span><br></pre></td></tr></table></figure><p><img src="image-20221119165158283.png" alt="image-20221119165158283"></p><p>flag为:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D0g3&#123;8c4c8e4247928992fb37474512c52569&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> C </tag>
            
            <tag> 原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win32笔记-高级</title>
      <link href="2022/10/09/win32-bi-ji-gao-ji/"/>
      <url>2022/10/09/win32-bi-ji-gao-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在本文将讲解高级Win32编程的内容，主要讲解静态链接库、动态链接库、以及远程线程的有关内容</p><h1 id="win32笔记-静态链接库"><a href="#win32笔记-静态链接库" class="headerlink" title="win32笔记-静态链接库"></a>win32笔记-静态链接库</h1><p>现在一个软件可以包含许多的功能，就涉及到了软件的模块化开发，不可能将一个软件的所有代码全部写进一个文件，所以，win32就可以通过静态链接库提供一个模块化的开发方式。</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>这里以VS 2019演示，新建项目，分别选择C++，Windows，库，静态库就可以了。如果在VS C++里面，就应该直接选择win32 static library创建项目。</p><p>VS 2019 c++会默认带有“framework.h”、”pch.h”、”pch.cpp”、”文件名.cpp”，这些都没什么用，全部删除。</p><p>例如，新建test.h头文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TEST_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TEST_H</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>新建test.cpp文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;test.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后在-生成-生成解决方案，就会在项目目录生成lib文件</p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>将生成的lib文件和test.h文件一起复制到项目的目录，就可以正常使用了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;test.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib,<span class="meta-string">&quot;StaticLib1.lib&quot;</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, add(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将上面的代码用IDA反编译：</p><p><img src="image-20220405200651748.png" alt="image-20220405200651748"></p><p>add函数：</p><p><img src="image-20220405200733516.png" alt="image-20220405200733516"></p><p>可以看出，全局没怎么变。</p><p>静态库主要的原理就是将lib的文件复制到即将生成的exe代码中，导致可执行文件体积变大。其次包含相同的公共代码，造成浪费。</p><h1 id="win32笔记-动态链接库"><a href="#win32笔记-动态链接库" class="headerlink" title="win32笔记-动态链接库"></a>win32笔记-动态链接库</h1><p>说到动态链接库，有什么好处呢？好处就是解决静态链接库的缺点。</p><p>静态链接库的缺点：</p><ul><li>使用静态链接库生成的可执行文件体积较大</li><li>包含相同的公共代码，造成浪费</li></ul><p>动态链接库（Dynamic Link Library,缩写为DLL）,是微软公司在Windows操作系统中，实现共享函数库概念的一种方式。这些函数库的拓展名是“.dll”、“.ocx”（包括ActiveX控制的库)</p><h2 id="准备-1"><a href="#准备-1" class="headerlink" title="准备"></a>准备</h2><p>用VS 2019新建项目分别选着C++、windows、库、动态链接库（DLL），完成创建就行了。里面可能有一些软件创建的文件，为了简单快捷，全部删除就好，我们采用自己手动新建。</p><p>新建头文件testdll.h</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> TESTDLL_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> TESTDLL_H</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> _declspec(dllexport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure><p>新建testdll.cpp文件</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;testdll.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面就生成解决方案。</p><h2 id="使用DLL文件"><a href="#使用DLL文件" class="headerlink" title="使用DLL文件"></a>使用DLL文件</h2><p>使用动态链接库有两种方法，可以加载时使用动态链接，也可以运行时动态链接。不过两者都需要将动态链接库文件放到程序运行的目录下。所以，这里要将生成的Dll1.dll放到项目运行debug的目录下。</p><h3 id="加载时动态链接"><a href="#加载时动态链接" class="headerlink" title="加载时动态链接"></a>加载时动态链接</h3><p>这种方案还需要将生成的lib文件放到项目目录下（隐式链接）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Dll1.lib&quot;</span>)</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> _declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, add(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反编译得到：</p><p><img src="image-20220405222146790.png" alt="image-20220405222146790"></p><h3 id="运行时动态链接"><a href="#运行时动态链接" class="headerlink" title="运行时动态链接"></a>运行时动态链接</h3><p>这种方式只需要运行时，exe文件能找到dll文件就行。（显式链接）</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义函数指针</span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">int</span><span class="params">(*lpadd)</span><span class="params">(<span class="keyword">int</span>,<span class="keyword">int</span>)</span></span>;</span><br><span class="line"><span class="comment">//声明函数指针变量</span></span><br><span class="line">lpadd add;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//动态加载dll到内存中</span></span><br><span class="line">HINSTANCE hmodule = LoadLibrary(<span class="string">L&quot;Dll1.dll&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> ( hmodule != <span class="literal">NULL</span> ) &#123;</span><br><span class="line"><span class="comment">//获取函数地址</span></span><br><span class="line">add = (lpadd)GetProcAddress(hmodule, <span class="string">&quot;add&quot;</span>);</span><br><span class="line"><span class="comment">//调用函数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, add(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">&#125;</span><br><span class="line">    <span class="comment">//释放内存</span></span><br><span class="line">    FreeLibrary(hmodule);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>反编译得到：</p><p><img src="image-20220405222302295.png" alt="image-20220405222302295"></p><h1 id="win32笔记-远程线程"><a href="#win32笔记-远程线程" class="headerlink" title="win32笔记-远程线程"></a>win32笔记-远程线程</h1><h2 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h2><ul><li>线程是附属在进程上的执行实体，是代码的执行流程。</li><li>代码必须通过线程才能执行。</li></ul><h2 id="一个简单的线程程序"><a href="#一个简单的线程程序" class="headerlink" title="一个简单的线程程序"></a>一个简单的线程程序</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//接上次win32笔记，导入DLL</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> comment(lib, <span class="meta-string">&quot;Dll1.lib&quot;</span>)</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">&quot;C&quot;</span> _declspec(dllimport) <span class="function"><span class="keyword">int</span> <span class="title">add</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">myfun</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Sleep(<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d&quot;</span>, add(<span class="number">2</span>,<span class="number">3</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">DWORD WINAPI <span class="title">Thread1</span><span class="params">(LPVOID LpParma)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">myfun();<span class="comment">//线程中调用</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">myfun(); <span class="comment">//第一次调用</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n%d&quot;</span>, add(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line">HANDLE hT = CreateThread(<span class="literal">NULL</span>, <span class="number">0</span>, Thread1, <span class="literal">NULL</span>, <span class="number">0</span>, <span class="literal">NULL</span>);<span class="comment">//线程中调用</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (hT) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nsuccess&quot;</span>);</span><br><span class="line">CloseHandle(hT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getchar();<span class="comment">//用于线程阻塞，防止线程Thread1未执行完成而退出程序</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行的结果</p><p><img src="image-20220410202637201.png" alt="image-20220410202637201"></p><h2 id="远程线程"><a href="#远程线程" class="headerlink" title="远程线程"></a>远程线程</h2><p>一般程序都是自己创建线程，自己使用，但是微软提供了一个CreateRemoteThread()的函数，用来创建远程线程，意思就是用B程序在A程序里面创建线程。上网一个简单的程序暂时叫做A程序。</p><p>下面就写一个能操作远程线程的B程序</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function">BOOL <span class="title">myCreateRP</span><span class="params">(DWORD dwProcessID, DWORD dwProcAddr)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//1.获得进程句柄</span></span><br><span class="line">HANDLE hprocess = OpenProcess(</span><br><span class="line">PROCESS_ALL_ACCESS,<span class="comment">//以怎样的权限访问</span></span><br><span class="line"><span class="literal">false</span>,<span class="comment">//句柄是否需要被继承</span></span><br><span class="line">dwProcessID<span class="comment">//打开进程的id</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (!hprocess)<span class="comment">//判断是否成功获取进程句柄</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hprocess error\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//2.创建远程线程</span></span><br><span class="line">DWORD threadId = <span class="number">0</span>;</span><br><span class="line">HANDLE hThread = CreateRemoteThread(</span><br><span class="line">    hprocess,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line">(LPTHREAD_START_ROUTINE)dwProcAddr,<span class="comment">//A程序的一个函数地址</span></span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line">&amp;threadId <span class="comment">//返回线程id</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span> (!hThread) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;hThread error\n&quot;</span>);</span><br><span class="line">CloseHandle(hprocess);<span class="comment">//线程创建失败，关闭打开的进程</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//3.关闭资源</span></span><br><span class="line">CloseHandle(hThread);<span class="comment">//关闭线程</span></span><br><span class="line">CloseHandle(hprocess);<span class="comment">//关闭进程</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">DWORD id = <span class="number">0</span>, addr = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input id and addr:\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">scanf_s(<span class="string">&quot;%d %x&quot;</span>, &amp;id, &amp;addr);<span class="comment">//获取10进制的A程序id和16进制函数地址</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (id &amp;&amp; addr) &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;checking process %d and  addr %x\n&quot;</span>, id, addr);</span><br><span class="line">myCreateRP(id, addr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please check id and addr&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="开始运行调试"><a href="#开始运行调试" class="headerlink" title="开始运行调试"></a>开始运行调试</h2><p>看到这里，想必已经对上面的程序了如指掌了，那么现在进行调试和理解程序的运行。</p><p>既然是远程对A程序创建的线程进行操作，那么先将A程序运行起来</p><p><img src="image-20220410234324900.png" alt="image-20220410234324900"></p><ul><li><p>运行即将被攻击的A程序</p></li><li><p>运行攻击程序B</p><p><img src="image-20220410235038144.png" alt="image-20220410235038144"></p></li><li><p>打开任务管理器，找到需要查看的A程序的ID</p><p><img src="image-20220410235302012.png" alt="image-20220410235302012">可以清楚的看到，A程序的ID是29528</p></li><li><p>下面找一下A程序中想要额外运行函数地址，先将A.exe拖进IDA中进行分析</p><p><img src="image-20220411000057984.png" alt="image-20220411000057984"></p></li></ul><p><img src="image-20220411000343414.png" alt="image-20220411000343414"></p><p>要想获得我们需要的地址，必须更改004113C0的基址，最快获得我们想要正确的地址，那就在这里打断点，等它运行起来，就能看到基址了。那也就是我们想要的地址001C13C0。<img src="image-20220411000832444.png" alt="image-20220411000832444"></p><ul><li><p>有了ID和函数地址，就可以输入运行测试了。</p><p><img src="image-20220411001638522.png" alt="image-20220411001638522"></p></li><li><p>为了测试更多的函数地址，那么可以继续探索，比如，由于这个A程序是由VC 2019的debug模式编译出来的，StartAddress的实际StartAddress_0地址并不是一样的，可以试试StartAddress_0处的函数地址。<img src="image-20220411002257806.png" alt="image-20220411002257806"></p></li></ul><p>通过第一次函数地址的测试，可以发现，由于程序运行了一次，现在程序的基地址已经被修改正确，可以直接使用，即001C1F80,运行测试如下：</p><p><img src="image-20220411003038424.png" alt="image-20220411003038424"></p><p>标有数字的第二、三个5都是通过B程序远程线程新建的。同理，还可以使用如下地址001C13C5和001C17E0,第二个地址就是myfun的函数起始地址。第一个001C13C5处的函数就是跳转到001C17E0处myfun函数。<img src="image-20220411004510603.png" alt="image-20220411004510603"></p><p>更多可以自行探索。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 原理 </tag>
            
            <tag> Windows </tag>
            
            <tag> Win32 </tag>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单使用gdb</title>
      <link href="2022/09/05/jian-dan-shi-yong-gdb/"/>
      <url>2022/09/05/jian-dan-shi-yong-gdb/</url>
      
        <content type="html"><![CDATA[<h1 id="GDB一般用法"><a href="#GDB一般用法" class="headerlink" title="GDB一般用法"></a>GDB一般用法</h1><p>之所以要记录一下GDB，是因为GDB对于程序的调试太重要了。</p><p>一般的用法直接掌握就行。</p><h2 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h2><ul><li><p><code>gdb</code>调试</p><p><code>gdb yourappp</code></p></li><li><p>打断点</p><p><code>b 函数名或者 *指定地址</code></p></li><li><p>执行</p><p><code>r</code> 代表程序运行</p><p><code>n</code>代表 单步步过</p><p><code>s</code>代表 单步步入</p></li><li><p>查看地址内容</p><p><code>x/&lt;n/f/u&gt;  &lt;addr&gt;</code> </p><ul><li><p><code>&lt;n&gt;</code>为正整数，表示需要显示内存单元的个数，即是从当前地址向后显示n个内存单元的内容</p></li><li><p>一个内存单元的大小由第三个参数u定义</p></li><li><p><code>&lt;f&gt;</code> 代表<code>addr</code>指向内存内容的输出格式，s对应字符串，但需要注意整型数据的格式</p><p><code>x</code> 按十六进制格式显示变量. </p><p><code>d</code> 按十进制格式显示变量。 </p><p><code>u</code> 按十进制格式显示无符号整型。 </p><p><code>o</code> 按八进制格式显示变量。 </p><p><code>t</code> 按二进制格式显示变量。 </p><p><code>a</code> 按十六进制格式显示变量。 </p><p><code>c</code> 按字符格式显示变量。 </p><p><code>f</code> 按浮点数格式显示变量。 </p><p><code>&lt;u&gt;</code>:就是指以多少个字节作为一个内存单元-unit,默认为4。u还可以用被一些字符表示: </p><p>如b=1 byte, h=2 bytes,w=4 bytes,g=8 bytes. </p><p><code>&lt;addr&gt;</code>:表示内存地址。 </p></li></ul></li></ul><h2 id="例如"><a href="#例如" class="headerlink" title="例如"></a>例如</h2><p>调试一个加密函数</p><p><img src="image-20211210133534799.png" alt="image-20211210133534799"></p><p>由于数据在程序执行过程中已经计算好了，就可以进行调试读取就行了</p><ol><li><p>输入<code>gdb app</code></p><p><img src="image-20211210134148918.png" alt="image-20211210134148918"></p></li><li><p>打断点</p><p><code>b decrypt</code></p></li><li><p>执行</p><p><code>r</code></p><p><code>n</code></p></li><li><p>查看地址内容(数据在<code>eax</code>)</p><p>查看数据 <code>x/200wd $eax</code></p><p>字符串查看 <code>x/sw $eax</code></p></li></ol><p><img src="image-20211210135250056.png" alt="image-20211210135250056"></p>]]></content>
      
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> C </tag>
            
            <tag> 原理 </tag>
            
            <tag> 开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win32笔记-进阶</title>
      <link href="2022/08/09/win32-bi-ji-jin-jie/"/>
      <url>2022/08/09/win32-bi-ji-jin-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="win32笔记-进程"><a href="#win32笔记-进程" class="headerlink" title="win32笔记-进程"></a>win32笔记-进程</h1><h2 id="了解进程"><a href="#了解进程" class="headerlink" title="了解进程"></a>了解进程</h2><p>在win32中，要想把exe程序运行起来，就必须将程序加载到内存中，当程序被双击运行起来以后，这时才能被叫做进程。现在的计算机是多线程操作系统，可以在计算机的任务管理器看到当前的所有进程。</p><ul><li>进程,可以为当前程序提供所需的资源，如：数据、代码等等</li></ul><p>每一个进程都有自己的4GB的虚拟地址空间</p><h2 id="进程内存空间地址的划分"><a href="#进程内存空间地址的划分" class="headerlink" title="进程内存空间地址的划分"></a>进程内存空间地址的划分</h2><table><thead><tr><th align="center">分区</th><th align="center">x86 32位windows</th></tr></thead><tbody><tr><td align="center">空指针赋值区</td><td align="center">0x00000000 - 0x0000FFFF</td></tr><tr><td align="center">用户模式区</td><td align="center">0x00010000 - 0x7FFEFFFF</td></tr><tr><td align="center">64KB禁用区</td><td align="center">0x7FFF0000 - 0x7FFFFFFF</td></tr><tr><td align="center">内核</td><td align="center">0x80000000 - 0xFFFFFFFF</td></tr></tbody></table><ul><li>在空指针赋值区和64KB禁用区，可以简单的理解为从来没有被使用的区域，包括操作系统和应用软件都不会使用它。</li></ul><h2 id="进程的创建"><a href="#进程的创建" class="headerlink" title="进程的创建"></a>进程的创建</h2><p>任何进程都是别的进程创建的，而第一个进程起源于操作系统，比如双击运行一个exe文件，进程explorer.exe通过调用CreateProcess()创建了一个新的进程</p><p>进程创建过程</p><ul><li>映射EXE文件</li><li>创建内核对象EPROCESS</li><li>映射系统DLL(ntdll.dll)</li><li>创建线程内核对象ETHREAD</li><li>系统启动线程（映射DLL(ntdll.LdrlnitializeThunk),线程开始执行）</li></ul><p><img src="image-20220403151422129.png" alt="image-20220403151422129"></p><p>一个有趣的事情就是如果运行程序A.exe，但是等他在系统启动线程时，用B程序里面的数据和代码在进程里面替换A程序的数据和代码，然后你会惊奇的发现，B程序成功的跑起来了，但是在任务管理器界面只能看到A程序的进程，而看不到B程序的进程，实际上，A程序的进程就是替换后的B程序的进程，这非常好玩。试想一下，如果将B程序换成病毒，A程序伪装成系统程序（如service.exe），那么就无法手动结束A程序,因为其受到系统的保护，实际运行的是病毒程序，并且可能还判断不出A程序就是病毒换了的程序。这就是狸猫换太子。</p><p>另一个就是游戏外挂的运行原理，就是系统启动线程之前，注入自己的外挂dll,但是游戏肯定会不有一个xx.dll用来检测，防止dll注入，事实上，只要在这个xx.dll检测文件映射之前，先行注入外挂dll，就可以达到防止检测注入的目的，归根到底，xx.dll用来检测注入，其实其本身也是代码和数据。</p><h1 id="win32笔记-创建进程"><a href="#win32笔记-创建进程" class="headerlink" title="win32笔记-创建进程"></a>win32笔记-创建进程</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前已经学习过什么是进程，知道一个进程是别的程序创建出来的，那么我们自己如何创建一个进程呢？下面就用代码来详细演示。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createp</span><span class="params">(LPCWSTR appname,LPWSTR pram)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建结构体</span></span><br><span class="line">STARTUPINFO si;</span><br><span class="line">PROCESS_INFORMATION pi;</span><br><span class="line"><span class="comment">//初始化，这里就是置零</span></span><br><span class="line">ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));</span><br><span class="line">ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">si.cb = <span class="keyword">sizeof</span>(si);<span class="comment">//对si结构体的大小赋值</span></span><br><span class="line"><span class="keyword">if</span> (!CreateProcess(</span><br><span class="line">appname, <span class="comment">//对象名称</span></span><br><span class="line">pram, <span class="comment">//传入参数</span></span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">FALSE,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">&amp;si, <span class="comment">//传入类型</span></span><br><span class="line">&amp;pi <span class="comment">//传出线程和进程信息</span></span><br><span class="line">))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;fail：%d&quot;</span>,GetLastError());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,pram);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">wchar_t</span> sr[<span class="number">64</span>] = <span class="string">L&quot;a http://kuangtant.gitee.io&quot;</span>;</span><br><span class="line">createp(<span class="string">L&quot;C:\\Users\\admin\\AppData\\Local\\Google\\Chrome\\Application\\chrome.exe&quot;</span>, (LPWSTR)<span class="string">L&quot;a http://kuangtant.gitee.io&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>实例代码演示创建了一个chrome.exe的进程，浏览器一般传入参数是网站网址。</p><h1 id="win32笔记-句柄"><a href="#win32笔记-句柄" class="headerlink" title="win32笔记-句柄"></a>win32笔记-句柄</h1><h2 id="什么是内核对象"><a href="#什么是内核对象" class="headerlink" title="什么是内核对象"></a>什么是内核对象</h2><p>像进程、线程、文件、互斥体、事件等在内核都有一个相对应的结构体，这些结构体由内核负责管理。我们管这样的对象叫做内核对象。</p><p><img src="image-20220404182630799.png" alt="image-20220404182630799"></p><p>比如，当应用层创建创建进程时，相应在内核层会有一个EPROCESS的结构体与之对应，线程、文件、互斥体、事件等也是同理。</p><h2 id="如何管理内核对象"><a href="#如何管理内核对象" class="headerlink" title="如何管理内核对象"></a>如何管理内核对象</h2><p>如果，现在有一个进程，在内核层一定有一个与之对应的E-PROCESS结构体内核对象。现在，分别依次调用createProcess,CreateThread,createEvent,createFile等函数，在内核里面肯定会有与之相对应的结构体</p><p><img src="image-20220404184459269.png" alt="image-20220404184459269"></p><p>为了保证内核结构和系统的安全性，系统不会直接提供内核结构的地址给用户层直接操作。但是，为了操作，系统会提供一张表，使得内核结构和一个唯一的编号对应。每一个进程都有一个句柄表。</p><p><img src="image-20220404185521963.png" alt="image-20220404185521963"></p><p>这个编号，也就是句柄，通过对句柄的操作间接对内核结构操作。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">createp</span><span class="params">(LPCWSTR appname,LPWSTR pram)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//创建结构体</span></span><br><span class="line">STARTUPINFO si;</span><br><span class="line">PROCESS_INFORMATION pi;</span><br><span class="line"><span class="comment">//初始化，这里就是置零</span></span><br><span class="line">ZeroMemory(&amp;pi, <span class="keyword">sizeof</span>(pi));</span><br><span class="line">ZeroMemory(&amp;si, <span class="keyword">sizeof</span>(si));</span><br><span class="line">si.cb = <span class="keyword">sizeof</span>(si);<span class="comment">//对si的大小赋值</span></span><br><span class="line"><span class="keyword">if</span> (!CreateProcess(</span><br><span class="line">appname, <span class="comment">//对象名称</span></span><br><span class="line">pram, <span class="comment">//传入参数</span></span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">FALSE,</span><br><span class="line"><span class="number">0</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line"><span class="literal">NULL</span>,</span><br><span class="line">&amp;si, <span class="comment">//传入类型</span></span><br><span class="line">&amp;pi <span class="comment">//传出线程和进程信息</span></span><br><span class="line">))</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;fail：%d&quot;</span>,GetLastError());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;success&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取进程信息</span></span><br><span class="line">SuspendThread(pi.hThread);</span><br><span class="line">ResumeThread(pi.hThread);</span><br><span class="line"><span class="comment">//释放句柄</span></span><br><span class="line">CloseHandle(pi.hProcess);</span><br><span class="line">CloseHandle(pi.hThread);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多进程共享一个内核对象"><a href="#多进程共享一个内核对象" class="headerlink" title="多进程共享一个内核对象"></a>多进程共享一个内核对象</h2><p>前面，知道了CreateProcess可以创建一个进程，如果这个行为在A进程里面发生的，也就是说，在A进程里面调用了CreateProcess创建了一个A的子进程，那么，这个子进程能否被另一个进程B共享呢？答案是肯定的。</p><p><img src="image-20220405152243603.png" alt="image-20220405152243603"></p><p>如果，在B进程里面也CreateProcess，也会创建一个进程，当然，与A的子进程没有一点关系，因为这是它自己创建的进程；要想有关系，就必须通过OpenProcess，这样，就有了关系。但需要注意的是，这时，A、B进程都有一个句柄表，都有一个句柄同时指向A创建的子进程A，不过，这两个编号不同，这两个句柄并不相同，只是指向结果一样，能够同时操作同一个内核对象。</p><p>其次，这个子进程的内核对象自己有一个计数器，这个计数器是用来记录当前一共有多少进程对其进行掌控，操作。如上图，当A进程CreateProcess创建了一个进程的内核对象，这个计数器会记录1，当B进程OpenProcess，这个计数器会变成2，依次类推。这样做的意义，就得当A进程CloseHandle，计数器会减1，但是这个进程不会死亡，当B进程也CloseHandle，计数器变为0，没有进程把控对应它，这时，才会死亡。所有内核对象都一样，但是有一个内核对象除外，就是线程。</p><p>每一个进程都有一个线程，进程是靠线程支持的，如果仅仅释放进程句柄，释放线程句柄，计时器为0了，但达不到使得进程死亡的目的，因为线程还没有被终止。</p><h2 id="句柄是否可以被继承"><a href="#句柄是否可以被继承" class="headerlink" title="句柄是否可以被继承"></a>句柄是否可以被继承</h2><p>简单来说，是可以的。前提是，父进程调用createProcess,CreateThread,createEvent,createFile等函数必须将将其是否可以被继承关系描述为允许继承，那么，当父进程创建一个子进程时，这个子进程，就会继承得到父进程允许继承的句柄。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 原理 </tag>
            
            <tag> Windows </tag>
            
            <tag> Win32 </tag>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win32笔记-基础</title>
      <link href="2022/06/09/win32-bi-ji-ji-chu/"/>
      <url>2022/06/09/win32-bi-ji-ji-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="win32-编码"><a href="#win32-编码" class="headerlink" title="win32-编码"></a>win32-编码</h1><h2 id="0x1原始的ascii编码"><a href="#0x1原始的ascii编码" class="headerlink" title="0x1原始的ascii编码"></a>0x1原始的ascii编码</h2><p>在计算机中，计算机只能识别由0或1构成的东西，其它的字符一律不认识，西方人为了将计算机与生活联系起来，使用了ascii的编码，就是将一些生活中常用的符合字母用0、1来表示,16进制范围是0-7F，更多的是比如大写手的A这个字母，在计算机中表示就是1000001</p><table><thead><tr><th align="center">字符</th><th align="center">二进制</th><th align="center">十进制</th><th align="center">16进制</th></tr></thead><tbody><tr><td align="center">A</td><td align="center">1000001</td><td align="center">65</td><td align="center">41</td></tr><tr><td align="center">B</td><td align="center">1000010</td><td align="center">66</td><td align="center">42</td></tr><tr><td align="center">C</td><td align="center">1000011</td><td align="center">67</td><td align="center">43</td></tr></tbody></table><blockquote><p>有关asscii的文本进制转换可以在在线工具 <a href="https://kuangtant.gitee.io/tools/asscii/">https://kuangtant.gitee.io/tools/asscii/</a> 转换</p><p><img src="Win32%E7%AC%94%E8%AE%B0-%E5%9F%BA%E7%A1%80/image-20220115182108121.png" alt="image-20220115182108121"></p></blockquote><p>但是，原始的asscii编码有一个很大的缺点，就是只有西文的字母符号，一般说它是标准的asscii编码，没有其它国家的任何语言字符，比如中文，后面就有了asscii的拓展</p><h2 id="0x2-asscii的拓展"><a href="#0x2-asscii的拓展" class="headerlink" title="0x2 asscii的拓展"></a>0x2 asscii的拓展</h2><p>标准的asscii的编码的范围是0-127，拓展的范围就是128-255，这个拓展是将西文中一些不常用的符号表示出来</p><p>对于中文，就采用两张asscii的拓展表，联合在一起，表示一个中文汉字，也就是说，一个中文汉字的表示要占用16位，也就是2个字节，标准的表示就是GBK编码或GB2312编码</p><table><thead><tr><th align="center">字符</th><th align="center">16进制</th></tr></thead><tbody><tr><td align="center">中</td><td align="center">D6D0</td></tr><tr><td align="center">国</td><td align="center">B9FA</td></tr><tr><td align="center">好</td><td align="center">BAC3</td></tr></tbody></table><blockquote><p>标准的asscii/gb2312编码在线查询及转换：<a href="https://kuangtant.gitee.io/tools/gb2312/">https://kuangtant.gitee.io/tools/gb2312/</a></p><p><img src="image-20220115184258311.png" alt="image-20220115184258311"></p></blockquote><h2 id="0x3-Unicode编码"><a href="#0x3-Unicode编码" class="headerlink" title="0x3 Unicode编码"></a>0x3 Unicode编码</h2><p>前面两种编码都存在一些问题，就是在不同的国家，编码显示的文字可能不一样，因为编码的读取方式不同</p><p>后面出现了一张包含世界所有文字的一个编码表，只要这个世界上存在的文字符号，统统给与一个唯一的编码，Unicode编码</p><p>Unicode编码的范围是0-0x10FFFF,就是说，它可以容纳100多万个符号。</p><p>但是，它也有一个问题，它只规定了符号的二进制代码，没有规定这个二进制代码该怎样储存</p><h2 id="0x4-Unicode-UTF-16-UTF-8"><a href="#0x4-Unicode-UTF-16-UTF-8" class="headerlink" title="0x4 Unicode:UTF-16/UTF-8"></a>0x4 Unicode:UTF-16/UTF-8</h2><ul><li><p>UTF-16编码以16位无符号整数为单位，即是16位为一个单位，不表示一个字符只有16位。这个要看字符的unicode编码处于什么范围而定，有可能是2个字节，也有可能是4个字节，现在计算机上的unicode编码一般指的是UTF-16</p></li><li><p>UTF-8:</p><table><thead><tr><th align="left">Unicode编码（16进制）</th><th>UTF-8字节流(二进制)</th></tr></thead><tbody><tr><td align="left"><code>000000</code>-<code>00007F</code></td><td><code>0xxxxxxx</code></td></tr><tr><td align="left"><code>000080</code>-<code>0007FF</code></td><td><code>110xxxxx</code> <code>10xxxxxx</code></td></tr><tr><td align="left"><code>000800</code>-<code>00FFFF</code></td><td><code>1110xxxx</code> <code>10xxxxxx</code> <code>10xxxxxx</code></td></tr><tr><td align="left"><code>010000</code>-<code>10FFFF</code></td><td><code>11110xxx</code> <code>10xxxxxx</code> <code>10xxxxxx</code> <code>10xxxxxx</code></td></tr></tbody></table></li></ul><h1 id="win32-c语言中的宽字符"><a href="#win32-c语言中的宽字符" class="headerlink" title="win32-c语言中的宽字符"></a>win32-c语言中的宽字符</h1><h2 id="0x01-字符和字符串在内存中的值"><a href="#0x01-字符和字符串在内存中的值" class="headerlink" title="0x01 字符和字符串在内存中的值"></a>0x01 字符和字符串在内存中的值</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chr str0[] = <span class="string">&quot;中国&quot;</span></span><br><span class="line"><span class="keyword">wchar_t</span> wstr[] = <span class="string">L&quot;中国&quot;</span></span><br></pre></td></tr></table></figure><p>在没有特殊说明的情况下，str0是asscii的默认编码，中国在内存中会是<code>D6 D0 B9 FA 00</code>，5个字节。</p><p>但是，wstr是Unicode的编码的中国，<code>2D 4E FD 56 00 00</code>为其编码，占用6个字节，又叫宽字符。</p><h2 id="0x02-常用函数"><a href="#0x02-常用函数" class="headerlink" title="0x02 常用函数"></a>0x02 常用函数</h2><table><thead><tr><th>一般asscii</th><th>unicode</th><th>描述</th></tr></thead><tbody><tr><td>char</td><td>wchar_t</td><td>多字节字符类型,宽字符类型</td></tr><tr><td>printf</td><td>wprintf</td><td>打印控制台函数</td></tr><tr><td>strlen</td><td>wcslen</td><td>获取长度</td></tr><tr><td>strcpy</td><td>wcscpy</td><td>字符串复制</td></tr><tr><td>strcat</td><td>wcscat</td><td>字符串拼接</td></tr><tr><td>strcmp</td><td>wcscmp</td><td>字符串比较</td></tr><tr><td>strstr</td><td>wcsstr</td><td>字符串查找</td></tr></tbody></table><h2 id="0x03-简单用法"><a href="#0x03-简单用法" class="headerlink" title="0x03 简单用法"></a>0x03 简单用法</h2><p>打印宽字符，就代码如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdafx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;locale.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    setlocale(LC_ALL,<span class="string">&quot;&quot;</span>);<span class="comment">//使用控制台默认编码</span></span><br><span class="line">    <span class="keyword">wchar_t</span> wstr[]=<span class="string">L&quot;中国&quot;</span>;</span><br><span class="line">    wprintf(<span class="string">L&quot;%s\n&quot;</span>,wstr);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>获取长度</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdafx.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;locale.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    setlocale(LC_ALL,<span class="string">&quot;&quot;</span>);<span class="comment">//使用控制台默认编码</span></span><br><span class="line">    <span class="keyword">wchar_t</span> wstr[]=<span class="string">L&quot;中国&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> len=wcslen(wstr); <span class="comment">//不包括00 00 </span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="win32-什么是win32-api"><a href="#win32-什么是win32-api" class="headerlink" title="win32-什么是win32 api"></a>win32-什么是win32 api</h1><p>主要是存放在c:\WINDOWS\system32下的所有dll</p><p>几个比较重要的dll</p><ul><li>Kernel32.dll:最核心的功能模块，比如内存管理、进程和线程相关函数等。</li><li>User32.dll:是windows用户界面相关应用程序的接口，如创建窗口和发送信息等。</li><li>GDI32.dll:全称是图形设备接口</li></ul><p>要使用win32 api，在cpp文件的开头需要引用windows.h，就可以尽情使用其api了</p><h2 id="常用数据类型"><a href="#常用数据类型" class="headerlink" title="常用数据类型"></a>常用数据类型</h2><p>汇编：</p><table><thead><tr><th>byte</th><th>BYTE</th><th>PBYTE</th></tr></thead><tbody><tr><td>word</td><td>WORD</td><td>PWORD</td></tr><tr><td>dword</td><td>DWORD</td><td>PDWORD</td></tr></tbody></table><p>C语言：</p><table><thead><tr><th>char</th><th>CHAR</th><th>PCHAR</th></tr></thead><tbody><tr><td>unsigned char</td><td>UCHAR</td><td>PUCHAR</td></tr><tr><td>short</td><td>SHORT</td><td>PSHORT</td></tr><tr><td>unsigned short</td><td>USHORT</td><td>PUSHORT</td></tr><tr><td>int</td><td>INT</td><td>PINT</td></tr><tr><td>unsigned int</td><td>UINT</td><td>PUINT</td></tr></tbody></table><p>在win32中，虽然一些数据类型不常见，其实这些数据类型就是将c语言中的一些数据类型封装了一下</p><h2 id="在win32中使用字符串"><a href="#在win32中使用字符串" class="headerlink" title="在win32中使用字符串"></a>在win32中使用字符串</h2><p>字符类型：</p><ul><li>CHAR 声明asscii编码的字符串</li><li>WCHAR 声明unicode编码的字符串</li><li>TCHAR根据当前开发环境，自动转换为符合当前环境的上面编码方式之一</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">CHAR szstr[] = <span class="string">&quot;good1&quot;</span>;<span class="comment">//asscii</span></span><br><span class="line">WCHAR swstr[] = <span class="string">L&quot;good2&quot;</span>;<span class="comment">//unicode</span></span><br><span class="line">TCHAR str[] = TEXT(<span class="string">&quot;goods3&quot;</span>);<span class="comment">//根据系统自动转换</span></span><br></pre></td></tr></table></figure><p>字符串指针：</p><p>与上面的字符类型相一致，有以下的指针类型</p><ul><li>PSTR是asscii编码字符串对应的指针</li><li>PWSTR是unicode编码字符串对应的指针</li><li>PTSTR根据TCHAR对应的指针</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PSTR szstr = <span class="string">&quot;good1&quot;</span>;<span class="comment">//asscii</span></span><br><span class="line">PWSTR swstr = <span class="string">L&quot;good2&quot;</span>;<span class="comment">//unicode</span></span><br><span class="line">PTSTR str = TEXT(<span class="string">&quot;goods3&quot;</span>);<span class="comment">//根据系统自动转换</span></span><br></pre></td></tr></table></figure><h2 id="第一个窗口"><a href="#第一个窗口" class="headerlink" title="第一个窗口"></a>第一个窗口</h2><p>由于win32采用的是api编程，所以窗口也有一个自己的api函数接口，这个接口是MessageBox()函数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">CHAR szstr[] = <span class="string">&quot;good1&quot;</span>;<span class="comment">//asscii</span></span><br><span class="line">WCHAR swstr[] = <span class="string">L&quot;good2&quot;</span>;<span class="comment">//unicode</span></span><br><span class="line">TCHAR str[] = TEXT(<span class="string">&quot;goods3&quot;</span>);<span class="comment">//根据系统自动转换</span></span><br><span class="line"></span><br><span class="line">WCHAR title[] = <span class="string">L&quot;标题&quot;</span>;</span><br><span class="line">WCHAR content[] = <span class="string">L&quot;dd&quot;</span>;</span><br><span class="line">MessageBox(<span class="number">0</span>,content,str,MB_OK);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上代码演示了第一个win32窗口,由于测试时默认采用的是unicode编码，所以在MessageBox传入参数时，如果title或content采用CHAR类型的字符串类型时，可能会报错”不能将char*的类型分配到LPCWSTR类型的实体”,解决方案：</p><ul><li><p>在工程处右键，属性-常规-字符集，将Unicode字符集改为为多字节字符集，应用并确认即可。</p></li><li><p>在常量报错时使用”_T”宏（若出现未定义标识符，则需增加头文件#include &lt;tchar.h&gt;）格式：_T( )，或者使用关键字“L”，格式：L””，或者使用TEXT，格式TEXT( )</p></li></ul><p><img src="image-20220402220319921.png" alt="image-20220402220319921"></p><p><img src="image-20220402220353298.png" alt="image-20220402220353298"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 原理 </tag>
            
            <tag> Windows </tag>
            
            <tag> Win32 </tag>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RC4的加密与解密实现</title>
      <link href="2022/03/27/rc4-de-jia-mi-yu-jie-mi-shi-xian/"/>
      <url>2022/03/27/rc4-de-jia-mi-yu-jie-mi-shi-xian/</url>
      
        <content type="html"><![CDATA[<h1 id="RC4的加密与解密实现"><a href="#RC4的加密与解密实现" class="headerlink" title="RC4的加密与解密实现"></a>RC4的加密与解密实现</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p> RC4算法的特点是算法简单，运行速度快，而且密钥长度是可变的，可变范围为1-256字节(8-2048比特)，在如今技术支持的前提下，当密钥长度为128比特时，用暴力法搜索密钥已经不太可行，所以可以预见RC4的密钥范围任然可以在今后相当长的时间里抵御暴力搜索密钥的攻击。实际上，如今也没有找到对于128bit密钥长度的RC4加密算法的有效攻击方法。</p><h2 id="C语言"><a href="#C语言" class="headerlink" title="C语言"></a>C语言</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//程序开始</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> longULONG;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*初始化函数*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc4_init</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>* s, <span class="keyword">unsigned</span> <span class="keyword">char</span>* key, <span class="keyword">unsigned</span> <span class="keyword">long</span> Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> k[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[i] = i;<span class="comment">//注意这里是否被更换</span></span><br><span class="line">        k[i] = key[i % Len];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        j = (j + s[i] + k[i]) % <span class="number">256</span>;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        s[i] = s[j];<span class="comment">//交换s[i]和s[j]</span></span><br><span class="line">        s[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*加解密*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">rc4_crypt</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>* s, <span class="keyword">unsigned</span> <span class="keyword">char</span>* Data, <span class="keyword">unsigned</span> <span class="keyword">long</span> Len)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> tmp;</span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; Len; k++)</span><br><span class="line">    &#123;</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">        j = (j + s[i]) % <span class="number">256</span>;</span><br><span class="line">        tmp = s[i];</span><br><span class="line">        s[i] = s[j];<span class="comment">//交换s[x]和s[y]</span></span><br><span class="line">        s[j] = tmp;</span><br><span class="line">        t = (s[i] + s[j]) % <span class="number">256</span>;</span><br><span class="line">        Data[k] ^= s[t];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> s[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;, s2[<span class="number">256</span>] = &#123; <span class="number">0</span> &#125;;<span class="comment">//S-box</span></span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">256</span>] = &#123; <span class="string">&quot;justfortest&quot;</span> &#125;;</span><br><span class="line">    <span class="keyword">char</span> pData[<span class="number">512</span>] = <span class="string">&quot;这是一个用来加密的数据Data&quot;</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> len = <span class="built_in">strlen</span>(pData);</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pData=%s\n&quot;</span>, pData);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;key=%s,length=%d\n\n&quot;</span>, key, <span class="built_in">strlen</span>(key));</span><br><span class="line">    rc4_init(s, (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)key, <span class="built_in">strlen</span>(key));<span class="comment">//已经完成了初始化</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;完成对S[i]的初始化，如下：\n\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%02X&quot;</span>, s[i]);</span><br><span class="line">        <span class="keyword">if</span> (i &amp;&amp; (i + <span class="number">1</span>) % <span class="number">16</span> == <span class="number">0</span>)<span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++)<span class="comment">//用s2[i]暂时保留经过初始化的s[i]，很重要的！！！</span></span><br><span class="line">    &#123;</span><br><span class="line">        s2[i] = s[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已经初始化，现在加密:\n\n&quot;</span>);</span><br><span class="line">    rc4_crypt(s, (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)pData, len);<span class="comment">//加密</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pData=%s\n\n&quot;</span>, pData);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;已经加密，现在解密:\n\n&quot;</span>);</span><br><span class="line">    <span class="comment">//rc4_init(s,(unsignedchar*)key,strlen(key));//初始化密钥</span></span><br><span class="line">    rc4_crypt(s2, (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)pData, len);<span class="comment">//解密</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;pData=%s\n\n&quot;</span>, pData);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译好程序，放进IDA的效果如图</p><p><img src="image-20220327211942702.png" alt="image-20220327211942702"></p><h2 id="JAVA"><a href="#JAVA" class="headerlink" title="JAVA"></a>JAVA</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">rc4</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decry_RC4</span><span class="params">(<span class="keyword">byte</span>[] data, String key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (data == <span class="keyword">null</span> || key == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> asString(RC4Base(data, key));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">decry_RC4</span><span class="params">(String data, String key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (data == <span class="keyword">null</span> || key == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> String(RC4Base(HexString2Bytes(data), key));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] encry_RC4_byte(String data, String key) &#123;</span><br><span class="line"><span class="keyword">if</span> (data == <span class="keyword">null</span> || key == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">byte</span> b_data[] = data.getBytes();</span><br><span class="line"><span class="keyword">return</span> RC4Base(b_data, key);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">encry_RC4_string</span><span class="params">(String data, String key)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (data == <span class="keyword">null</span> || key == <span class="keyword">null</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> toHexString(asString(encry_RC4_byte(data, key)));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">asString</span><span class="params">(<span class="keyword">byte</span>[] buf)</span> </span>&#123;</span><br><span class="line">StringBuffer strbuf = <span class="keyword">new</span> StringBuffer(buf.length);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; buf.length; i++) &#123;</span><br><span class="line">strbuf.append((<span class="keyword">char</span>) buf[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> strbuf.toString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] initKey(String aKey) &#123;</span><br><span class="line"><span class="keyword">byte</span>[] b_key = aKey.getBytes();</span><br><span class="line"><span class="keyword">byte</span> state[] = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">256</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) &#123;</span><br><span class="line">state[i] = (<span class="keyword">byte</span>) i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> index1 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> index2 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (b_key == <span class="keyword">null</span> || b_key.length == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) &#123;</span><br><span class="line">index2 = ((b_key[index1] &amp; <span class="number">0xff</span>) + (state[i] &amp; <span class="number">0xff</span>) + index2) &amp; <span class="number">0xff</span>;</span><br><span class="line"><span class="keyword">byte</span> tmp = state[i];</span><br><span class="line">state[i] = state[index2];</span><br><span class="line">state[index2] = tmp;</span><br><span class="line">index1 = (index1 + <span class="number">1</span>) % b_key.length;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> state;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">toHexString</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">String str = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line"><span class="keyword">int</span> ch = (<span class="keyword">int</span>) s.charAt(i);</span><br><span class="line">String s4 = Integer.toHexString(ch &amp; <span class="number">0xFF</span>);</span><br><span class="line"><span class="keyword">if</span> (s4.length() == <span class="number">1</span>) &#123;</span><br><span class="line">s4 = <span class="string">&#x27;0&#x27;</span> + s4;</span><br><span class="line">&#125;</span><br><span class="line">str = str + s4;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str;<span class="comment">// 0x表示十六进制</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] HexString2Bytes(String src) &#123;</span><br><span class="line"><span class="keyword">int</span> size = src.length();</span><br><span class="line"><span class="keyword">byte</span>[] ret = <span class="keyword">new</span> <span class="keyword">byte</span>[size / <span class="number">2</span>];</span><br><span class="line"><span class="keyword">byte</span>[] tmp = src.getBytes();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size / <span class="number">2</span>; i++) &#123;</span><br><span class="line">ret[i] = uniteBytes(tmp[i * <span class="number">2</span>], tmp[i * <span class="number">2</span> + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span> <span class="title">uniteBytes</span><span class="params">(<span class="keyword">byte</span> src0, <span class="keyword">byte</span> src1)</span> </span>&#123;</span><br><span class="line"><span class="keyword">char</span> _b0 = (<span class="keyword">char</span>) Byte.decode(<span class="string">&quot;0x&quot;</span> + <span class="keyword">new</span> String(<span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; src0 &#125;)).byteValue();</span><br><span class="line">_b0 = (<span class="keyword">char</span>) (_b0 &lt;&lt; <span class="number">4</span>);</span><br><span class="line"><span class="keyword">char</span> _b1 = (<span class="keyword">char</span>) Byte.decode(<span class="string">&quot;0x&quot;</span> + <span class="keyword">new</span> String(<span class="keyword">new</span> <span class="keyword">byte</span>[] &#123; src1 &#125;)).byteValue();</span><br><span class="line"><span class="keyword">byte</span> ret = (<span class="keyword">byte</span>) (_b0 ^ _b1);</span><br><span class="line"><span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] RC4Base(<span class="keyword">byte</span>[] input, String mKkey) &#123;</span><br><span class="line"><span class="keyword">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">byte</span> key[] = initKey(mKkey);</span><br><span class="line"><span class="keyword">int</span> xorIndex;</span><br><span class="line"><span class="keyword">byte</span>[] result = <span class="keyword">new</span> <span class="keyword">byte</span>[input.length];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; input.length; i++) &#123;</span><br><span class="line">x = (x + <span class="number">1</span>) &amp; <span class="number">0xff</span>;</span><br><span class="line">y = ((key[x] &amp; <span class="number">0xff</span>) + y) &amp; <span class="number">0xff</span>;</span><br><span class="line"><span class="keyword">byte</span> tmp = key[x];</span><br><span class="line">key[x] = key[y];</span><br><span class="line">key[y] = tmp;</span><br><span class="line">xorIndex = ((key[x] &amp; <span class="number">0xff</span>) + (key[y] &amp; <span class="number">0xff</span>)) &amp; <span class="number">0xff</span>;</span><br><span class="line">result[i] = (<span class="keyword">byte</span>) (input[i] ^ key[xorIndex]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">String inputStr = <span class="string">&quot;goods&quot;</span>;</span><br><span class="line">String str = encry_RC4_string(inputStr, <span class="string">&quot;justfortest&quot;</span>);</span><br><span class="line">System.out.println(str);</span><br><span class="line">System.out.println(decry_RC4(str, <span class="string">&quot;justfortest&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">rc4</span>(<span class="params">data, key</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> seq = <span class="built_in">Array</span>(<span class="number">256</span>);<span class="comment">//int</span></span><br><span class="line">          <span class="keyword">var</span> das = <span class="built_in">Array</span>(data.length);<span class="comment">//code of data</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">256</span>; i++) &#123;</span><br><span class="line">            seq[i] = i;</span><br><span class="line">            <span class="keyword">var</span> j = (j + seq[i] + key.charCodeAt(i % key.length)) % <span class="number">256</span>;</span><br><span class="line">            <span class="keyword">var</span> temp = seq[i];</span><br><span class="line">            seq[i] = seq[j];</span><br><span class="line">            seq[j] = temp;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; data.length; i++) &#123;</span><br><span class="line">            das[i] = data.charCodeAt(i);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">var</span> x = <span class="number">0</span>; x &lt; das.length; x++) &#123;</span><br><span class="line">            <span class="keyword">var</span> i = (i + <span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">            <span class="keyword">var</span> j = (j + seq[i]) % <span class="number">256</span>;</span><br><span class="line">            <span class="keyword">var</span> temp = seq[i];</span><br><span class="line">            seq[i] = seq[j];</span><br><span class="line">            seq[j] = temp;</span><br><span class="line">            <span class="keyword">var</span> k = (seq[i] + (seq[j] % <span class="number">256</span>)) % <span class="number">256</span>;</span><br><span class="line">            das[x] = <span class="built_in">String</span>.fromCharCode(das[x] ^ seq[k]);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">return</span> das.join(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line"><span class="comment">//var data = &quot;I am data&quot;;</span></span><br><span class="line"><span class="comment">//var key = &quot;justfortest&quot;;</span></span><br><span class="line"><span class="comment">//var a1 = rc4(data, key);</span></span><br><span class="line"><span class="comment">//var data1 = rc4(a1, key);</span></span><br></pre></td></tr></table></figure><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>基于以上内容实现的在线RC4加密解密工具 <a href="https://kuangtant.gitee.io/tools/rc4/">https://kuangtant.gitee.io/tools/rc4/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 算法 </tag>
            
            <tag> 原理 </tag>
            
            <tag> Java </tag>
            
            <tag> 密钥 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初始花指令</title>
      <link href="2022/03/25/chu-shi-hua-zhi-ling/"/>
      <url>2022/03/25/chu-shi-hua-zhi-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="初始花指令"><a href="#初始花指令" class="headerlink" title="初始花指令"></a>初始花指令</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在一般的逆向工程中，一般使用IDA进行逆向，比如，逆向一个exe文件，IDA会将exe的二进制字节码转换为汇编指令，如果想要汇编指令更易于理解，可以<code>F5</code>将汇编指令转换为c语言伪代码，但是有些程序开发者为了保护代码，不被逆向，所以采用花指令骗过IDA，使其不能正常还原为伪代码</p><p>花指令是对抗反汇编的有效手段之一，正常代码添加了花指令之后，可以破坏静态反汇编的过程，使反汇编的结果出现错误。错误的反汇编结果会造成破解者的分析工作大量增加，进而使之不能理解程序的结构和算法，也就很难破解程序，从而达到病毒或软件保护的目的。</p><h2 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h2><h3 id="可执行花指令"><a href="#可执行花指令" class="headerlink" title="可执行花指令"></a>可执行花指令</h3><p>可执行式花指令指的是能够正常运行的但又不改变原始程序逻辑性的一组无用指令。这类花指令有如下特点：</p><ul><li><p>①可以正常运行；</p></li><li><p>②不改变任何寄存器的值；</p></li><li><p>③反汇编器可以正确反汇编该指令。</p></li></ul><p>例如这样几组花指令就属于该类别：<code>PUSH EAX</code>＆<code>POP EAX</code>；<code>NOP</code>,<code>INC EAX</code>&amp;<code>DEC EAX</code>等等。这种类别的花指令组合形式很多，常常用在病毒代码的变形引擎中，病毒在传播时通过变形引擎随机产生一组该类别花指令并插入到病毒正常代码中，可以改变病毒的特征码，从而起到变形的作用。</p><h3 id="不可执行花指令（垃圾指令）"><a href="#不可执行花指令（垃圾指令）" class="headerlink" title="不可执行花指令（垃圾指令）"></a>不可执行花指令（垃圾指令）</h3><p>   不可执行花指令，是指被插入到原始代码中但又不改变原始程序逻辑性的一组无用字节。这类花指令有如下特点：</p><ul><li><p>①不可以正常运行；</p></li><li><p>②不改变任何寄存器的值；</p></li><li><p>③反汇编器可能会错误反汇编这些字节。</p><p>根据反汇编的工作原理，只有当花指令同正常指令的开始几个字节被反汇编器识别成一条指令时，才能有效破坏反汇编的结果。因此，插入的花指令应当是一些不完整的指令，被插入的不完整指令可以是随机选择的。正因为不可执行花指令有这些特点，该类花指令才能应用到软件保护中。</p><p>Cullen等人指出为了能够有效“迷惑”静态反汇编工具，同时保证代码的正确运行，花指令必须满足两个基本特征，即：</p><ul><li>1)垃圾数据必须是某个合法指令的一部分：</li><li>2)程序运行时，花指令必须位于实际不可执行的代码路径</li></ul></li></ul><h2 id="不可执行花指令的成功来自反汇编算法的缺陷"><a href="#不可执行花指令的成功来自反汇编算法的缺陷" class="headerlink" title="不可执行花指令的成功来自反汇编算法的缺陷"></a>不可执行花指令的成功来自反汇编算法的缺陷</h2><p>  当前静态分析中采用的反汇编算法主要可以分为2类：线性扫描算法与行进递归算法。</p><h3 id="线性扫描反汇编算法"><a href="#线性扫描反汇编算法" class="headerlink" title="线性扫描反汇编算法"></a>线性扫描反汇编算法</h3><p>  线性扫描算法p1从程序的入口点开始反汇编，然后对整个代码段进行扫描，反汇编扫描过程中所遇到的每条指令。线性扫描算法的缺点在于在冯诺依曼体系结构下，无法区分数据与代码，从而导致将代码段中嵌入的数据误解释为指令的操作码，以致最后得到错误的反汇编结果。</p><h3 id="行进递归反拒绾算法"><a href="#行进递归反拒绾算法" class="headerlink" title="行进递归反拒绾算法"></a>行进递归反拒绾算法</h3><p>  相比线性扫描算法，行进递归算法通过程序的控制流来确定反汇编的下一条指令，遇到非控制转移指令时顺序进行反汇编，而遇到控制转移指令时则从转移地址处开始进行反汇编。行进递归算法的缺点在于准确确定间接转移目的地址的难度较大。</p><h2 id="典型花指令"><a href="#典型花指令" class="headerlink" title="典型花指令"></a>典型花指令</h2><p>一般花指令有很多种，下面给出一个典型</p><h3 id="花指令程序"><a href="#花指令程序" class="headerlink" title="花指令程序"></a>花指令程序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example1</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example2</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example3</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example4</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example5</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example6</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example7</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">example7_0</span><span class="params">(<span class="keyword">int</span> a)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> __declspec(naked)<span class="function">__cdecl <span class="title">cnuF</span><span class="params">(<span class="keyword">int</span>* a)</span><span class="comment">//裸函数，开辟和释放堆栈由我们自己写。</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="comment">//55 8b ec 83</span></span><br><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line">push ebp</span><br><span class="line">mov ebp, esp</span><br><span class="line">sub esp, <span class="number">0x40</span></span><br><span class="line">push ebx</span><br><span class="line">push esi</span><br><span class="line">push edi</span><br><span class="line">mov eax, <span class="number">0xCCCCCCCC</span></span><br><span class="line">mov ecx, <span class="number">0x10</span></span><br><span class="line">lea edi, dword ptr ds : [ebp - <span class="number">0x40</span>]</span><br><span class="line">rep stos dword ptr es : [edi]</span><br><span class="line">&#125;</span><br><span class="line">*a = <span class="number">1</span>;</span><br><span class="line">_asm</span><br><span class="line">&#123;</span><br><span class="line"> call LABEL9;</span><br><span class="line"> _emit <span class="number">0xE8</span>;</span><br><span class="line"> _emit <span class="number">0x01</span>;</span><br><span class="line"> _emit <span class="number">0x00</span>;</span><br><span class="line"> _emit <span class="number">0x00</span>;</span><br><span class="line"> _emit <span class="number">0x00</span>;</span><br><span class="line"></span><br><span class="line"> LABEL9:</span><br><span class="line"> push eax;</span><br><span class="line"> push ebx;</span><br><span class="line"> lea  eax, dword ptr ds : [ebp - <span class="number">0x0</span>]</span><br><span class="line"> add dword ptr ss : [eax<span class="number">-0x50</span>] , <span class="number">26</span>;</span><br><span class="line"> </span><br><span class="line"> pop eax;</span><br><span class="line"> pop ebx;</span><br><span class="line"> pop eax;</span><br><span class="line"> jmp eax;</span><br><span class="line"> __emit <span class="number">0xE8</span>;</span><br><span class="line"> _emit <span class="number">0x03</span>;</span><br><span class="line"> _emit <span class="number">0x00</span>;</span><br><span class="line"> _emit <span class="number">0x00</span>;</span><br><span class="line"> _emit <span class="number">0x00</span>;</span><br><span class="line"> mov eax,dword ptr ss:[esp<span class="number">-8</span>];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">__asm</span><br><span class="line">&#123;</span><br><span class="line">pop edi</span><br><span class="line">pop esi</span><br><span class="line">pop ebx</span><br><span class="line">mov esp, ebp</span><br><span class="line">pop ebp</span><br><span class="line">ret</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">::MessageBox(<span class="literal">NULL</span>,<span class="string">&quot;花指令&quot;</span>,<span class="string">&quot;main&quot;</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">example1();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;example1 : a = %d\n&quot;</span>,a);</span><br><span class="line">example2();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;example2 : a = %d\n&quot;</span>,a);</span><br><span class="line">example3();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;example3 : a = %d\n&quot;</span>,a);</span><br><span class="line">example4();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;example4 : a = %d\n&quot;</span>,a);</span><br><span class="line">example5();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;example5 : a = %d\n&quot;</span>,a);</span><br><span class="line">cnuF(&amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;cnuF : a = %d\n&quot;</span>,a);</span><br><span class="line">example6();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;example6 : a = %d\n&quot;</span>,a);</span><br><span class="line">example7();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;example7 : a = %d\n&quot;</span>,a);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">__asm &#123;</span><br><span class="line">    <span class="keyword">xor</span> eax,eax</span><br><span class="line">    test eax,eax </span><br><span class="line">    je LABEL1 </span><br><span class="line">    jne LABEL2</span><br><span class="line">LABEL2:   </span><br><span class="line">_emit <span class="number">0x5e</span></span><br><span class="line"><span class="keyword">and</span> eax,ebx</span><br><span class="line">_emit <span class="number">0x50</span></span><br><span class="line"><span class="keyword">xor</span> eax,ebx</span><br><span class="line">_emit <span class="number">0x74</span></span><br><span class="line">add eax,edx</span><br><span class="line"></span><br><span class="line">LABEL1:</span><br><span class="line">&#125;</span><br><span class="line">a=<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">__asm &#123;</span><br><span class="line">push eax;</span><br><span class="line"><span class="keyword">xor</span> eax, eax;</span><br><span class="line">test eax, eax;</span><br><span class="line">jnz  LABEL1;</span><br><span class="line">jz LABEL2;</span><br><span class="line">LABEL1:</span><br><span class="line">_emit <span class="number">0xE8</span>;</span><br><span class="line">LABEL2:</span><br><span class="line">mov byte ptr[a], <span class="number">0</span>;</span><br><span class="line">call LABEL3;</span><br><span class="line">_emit <span class="number">0xFF</span>;</span><br><span class="line">LABEL3:</span><br><span class="line">add dword ptr ss : [esp] , <span class="number">8</span>;</span><br><span class="line">ret;</span><br><span class="line">__emit <span class="number">0x11</span>;</span><br><span class="line">mov byte ptr[a], <span class="number">2</span>;</span><br><span class="line">pop eax;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">__asm &#123;</span><br><span class="line">push ebx;</span><br><span class="line"><span class="keyword">xor</span> ebx, ebx;</span><br><span class="line">test ebx, ebx;</span><br><span class="line">jnz LABEL5;</span><br><span class="line">jzLABEL6;</span><br><span class="line">LABEL5:</span><br><span class="line">_emit <span class="number">0x21</span>;</span><br><span class="line">LABEL6:</span><br><span class="line">pop ebx;</span><br><span class="line">&#125;</span><br><span class="line">a=<span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"> __asm &#123;</span><br><span class="line"> push ebx;</span><br><span class="line"> <span class="keyword">xor</span> ebx, ebx;</span><br><span class="line"> test ebx, ebx;</span><br><span class="line"> jnz LABEL7;</span><br><span class="line"> jzLABEL8;</span><br><span class="line"> LABEL7:</span><br><span class="line"> _emit <span class="number">0xC7</span>;</span><br><span class="line"> LABEL8:</span><br><span class="line"> pop ebx;</span><br><span class="line"> &#125;</span><br><span class="line"> a=<span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"> __asm &#123;</span><br><span class="line"> call LABEL9;</span><br><span class="line"> _emit <span class="number">0x83</span>;</span><br><span class="line"> LABEL9:</span><br><span class="line"> add dword ptr ss : [esp] , <span class="number">8</span>;</span><br><span class="line"> ret;</span><br><span class="line"> __emit <span class="number">0xF3</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> a=<span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">::LoadLibrary(<span class="string">&quot;./hhhh&quot;</span>);<span class="comment">//函数返回值存储于eax中</span></span><br><span class="line">_asm&#123;</span><br><span class="line">cmp eax,<span class="number">0</span>;</span><br><span class="line">jc LABEL6_1;</span><br><span class="line">jnc LABEL6_2;</span><br><span class="line">LABEL6_1:</span><br><span class="line">_emit <span class="number">0xE8</span>;</span><br><span class="line">LABEL6_2:</span><br><span class="line">&#125;</span><br><span class="line">a = <span class="number">6</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">example7</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">example7_0( <span class="number">0</span> );</span><br><span class="line">_asm&#123;</span><br><span class="line">cmp eax,<span class="number">0</span>;</span><br><span class="line">jc LABEL7_1;</span><br><span class="line">jz LABEL7_2;</span><br><span class="line">LABEL7_1:</span><br><span class="line">_emit <span class="number">0xE8</span>;</span><br><span class="line">LABEL7_2:</span><br><span class="line">&#125;</span><br><span class="line">a = <span class="number">7</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">example7_0</span><span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;<span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上给了7个常见的花指令的源码，虽然花指令的原理差不多，但是能够让机器不能正常识别就行，好像有这样一句话，就是不影响程序运行，添加无效垃圾指令</p><h3 id="去花"><a href="#去花" class="headerlink" title="去花"></a>去花</h3><p>在IDA打开这个程序，可以正常的生成没有添加花指令的main函数，但是在各大函数里面就别有洞天了</p><p><img src="image-20220325160410277-16482037423101.png" alt="image-20220325160410277"></p><h3 id="example1"><a href="#example1" class="headerlink" title="example1"></a>example1</h3><p>跟进<code>sub_40100F()</code>函数,直接出现了<code>JUMPOUT(0x401230)</code>的提示，显然就是因为花指令，IDA不能正常给出伪代码</p><ul><li><p><code>TAP</code>键，切换为汇编代码<img src="image-20220325161342607-16482037423112.png" alt="image-20220325161342607"></p></li><li><p>点击<code>00401258</code>,选中地址，<code>U</code>或<code>D</code>键将其转换为数据<img src="image-20220325162109853-16482037423114.png" alt="image-20220325162109853"></p></li><li><p>将<code>C2</code>改成<code>90</code>,<code>90</code>就是nop的字节码，可以Edit–patch program–change byte<img src="image-20220325163026149-16482037423113.png" alt="image-20220325163026149"></p></li><li><p>选中<code>00401258</code>，<code>C</code>键转换为指令，选中<code>040125A</code>,<code>C</code>键，将其还原为指令<img src="image-20220325163758514-16482037423115.png" alt="image-20220325163758514"></p></li></ul><p>发现其依旧不能转换为伪代码</p><ul><li><p>原因在loc_401250里面也有问题，简单点，就是将其全部nop,改为90<img src="image-20220325164414637-16482037423116.png" alt="image-20220325164414637"></p></li><li><p>下面再<code>00401230</code>处<code>P</code>键，最后<code>F5</code>将其转换为伪代码<img src="image-20220325164947122-16482037423118.png" alt="image-20220325164947122"></p></li><li><p>最后<code>F5</code>的结果如下<img src="image-20220325165616433-16482037423117.png" alt="image-20220325165616433"></p></li></ul><h3 id="example2"><a href="#example2" class="headerlink" title="example2"></a>example2</h3><p>跟进<code>sub_401014()</code>函数，也可以看到一个<code>JUMPOUT(0x401290);</code>的红色提示，那就需要分析汇编指令了</p><ul><li><p><code>Tab</code>键，查看汇编<img src="image-20220325170257391-164820374231110.png" alt="image-20220325170257391"></p></li><li><p>在<code>004012B1</code>处，<code>U</code>键，转换为数据<img src="image-20220325170837985-16482037423119.png" alt="image-20220325170837985"></p></li><li><p>在<code>004012B2</code>处<code>C</code>键，将<code>004012B2</code>处的内容识别为代码，而前一行<code>004012B1</code>就是垃圾数据，所以将<code>004012B1</code>和跳转这里的<code>jnz short near ptr unk_4012B1</code>的内容给nop掉，可仍然有问题<img src="image-20220325172152663-164820374231212.png" alt="image-20220325172152663"></p></li><li><p>将<code>004012B9</code>到<code>004012C4</code>的内容nop掉，发现还是有问题，结果是，在上一个retn指令后面有一个垃圾数据，<code>0x11</code>，所以将其nop掉，即可得结果<img src="image-20220325173616971-164820374231211.png" alt="image-20220325173616971"></p></li><li><p>然后在<code>00401290</code>处，先<code>U</code>键后<code>P</code>键，最后<code>F5</code>生成伪代码<img src="image-20220325173844628-164820374231213.png" alt="image-20220325173844628"></p></li></ul><h3 id="example3"><a href="#example3" class="headerlink" title="example3"></a>example3</h3><p>跟进<code>sub_40102D()</code>函数，同样给了个<code>JUMPOUT(0x401300);</code>就没显示其它了，跟进汇编</p><ul><li><p><code>Tab</code>键，查看汇编<img src="image-20220325174512134-164820374231715.png" alt="image-20220325174512134"></p></li><li><p>在<code>00401321</code>处，<code>D</code>键，转换为数据<img src="image-20220325174900121-164820374231714.png" alt="image-20220325174900121"></p></li><li><p>然后将<code>0040131D</code>和<code>00401321</code>处的内容nop掉，并将<code>00401322</code>的内容<code>C</code>键识别为代码<img src="image-20220325175440429-164820374231716.png" alt="image-20220325175440429"></p></li><li><p>最后在<code>00401300</code>处，依次按<code>U</code>,<code>P</code>,<code>F5</code>键，最后得到伪代码<img src="image-20220325175659505-164820374231717.png" alt="image-20220325175659505"></p></li></ul><h3 id="example4"><a href="#example4" class="headerlink" title="example4+"></a>example4+</h3><p>example4,5,6,7的花指令都大同小异，可以参照前面的方法自行去除</p><h2 id="程序链接"><a href="#程序链接" class="headerlink" title="程序链接"></a>程序链接</h2><p>百度云链接：<a href="https://pan.baidu.com/s/1xs0lSZJWWcemTNdb1dcFjg">https://pan.baidu.com/s/1xs0lSZJWWcemTNdb1dcFjg</a> 提取码：kata</p><p>阿里云链接：<a href="https://www.aliyundrive.com/s/kawsoPvtHrJ">https://www.aliyundrive.com/s/kawsoPvtHrJ</a></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>花指令入门：<a href="https://blog.csdn.net/zixiaomuwu/article/details/52895488">https://blog.csdn.net/zixiaomuwu/article/details/52895488</a></p><p>逆向之花：<a href="https://the_itach1.gitee.io/2020/12/18/%E8%8A%B1%E6%8C%87%E4%BB%A4/">https://the_itach1.gitee.io/2020/12/18/%E8%8A%B1%E6%8C%87%E4%BB%A4/</a></p><p>反调试入门-花指令：<a href="http://www.360doc.com/content/20/1208/20/71939662_950241977.shtml">http://www.360doc.com/content/20/1208/20/71939662_950241977.shtml</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> tools </tag>
            
            <tag> C </tag>
            
            <tag> 算法 </tag>
            
            <tag> 原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微信小程序的理解</title>
      <link href="2022/02/26/wei-xin-xiao-cheng-xu-de-li-jie/"/>
      <url>2022/02/26/wei-xin-xiao-cheng-xu-de-li-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="微信小程序的理解"><a href="#微信小程序的理解" class="headerlink" title="微信小程序的理解"></a>微信小程序的理解</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我已经很久没有更新过文章了，其中有很大大一部分都和微信小程序有关，通过寒假，对微信小程序有了一些理解和看法，并且组队参加了一个有关微信小程序的互联网+的创新比赛，为了做足工作，把之前已经接近一年半多时间没有用过的<code>html</code>,<code>vue</code>等知识捡了回来。其次，为了更好更快的理解开发微信小程序，特别将 <a href="https://kuangtant.gitee.io/">https://kuangtant.gitee.io</a> ，也就是本文官网，开发改造了一下，未来不久，将会上线<code>Kuangtant for Wechat Mini Program</code>小程序，目前仍然还在测试阶段，可能很快就会上线和大家见面。（之所以这么慢，另一个原因是，互联网<code>＋</code>的小程序与之同步开发），下面讲讲一些关于这两款小程序开发，我的理解，和一些坑。</p><h2 id="上手"><a href="#上手" class="headerlink" title="上手"></a>上手</h2><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p>学习新的知识，一般来说，必不可少的就是有关的文档了，初识小程序，一定离不开的是 微信小程序开发文档 <a href="https://developers.weixin.qq.com/miniprogram/dev/framework/">微信开放文档 </a>，有了文档，就可以在微信小程序领域畅通无阻，其次，为了提高开发时的效率，肯定离不开的是微信小程序前端开源UI框架还有它的文档，常见的就是 <code>WeUi</code>,<code>vant app</code>,<code>colorUI</code>等，并且阅读他们的文档，可以轻松绘制UI界面</p><h3 id="上手-1"><a href="#上手-1" class="headerlink" title="上手"></a>上手</h3><p>微信小程序的无非是从了解结构开始，一个微信小程序简单来说，无非就是包括<code>app.json</code>,<code>app.js</code>,<code>app.wxss</code>还有在page文件夹下的每一页面的<code>js</code>,<code>json</code>,<code>wxml</code>,<code>wxss</code>文件，其它的比较常用的就是项目配置文件，比如<code>project.config.json</code>等</p><p>微信小程序和前端浏览器网页也开发差不多，主要的区别在微信小程序重写了<code>vue</code>的运行方法，<code>wxml</code>不支持很多的<code>html</code>标签，仅支持一些比如<code>text</code>,<code>view</code>等标签</p><p>在微信小程序里面是，流程大概是先启动<code>app.js</code>里面的<code>App()</code>方法，每一页的<code>app.js</code>里面就是<code>Page()</code>方法，自然从里面的<code>onLoad</code>方法开始，然后依次调用各种方法，但是由于微信小程序没有提供<code>dom</code>进行操作，每次更新页面内容就必须使用<code>setData</code>方法，更改数据。页面开始之前，和vue一样，先得初始一些<code>data:&#123;key:&quot;vlule&quot;&#125;</code></p><p>微信小程序为了更好的显示内容，微信小程序提供了<code>wx:for</code> , <code>wx:if</code> , <code>wx:key</code>等节点，来显示数据 </p><h3 id="上手一般的问题"><a href="#上手一般的问题" class="headerlink" title="上手一般的问题"></a>上手一般的问题</h3><h4 id="点击事件"><a href="#点击事件" class="headerlink" title="点击事件"></a>点击事件</h4><p>微信原生的提供的是<code>bindtap</code>,比如，我开发过程中的一个例子</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">van-button</span> <span class="attr">size</span>=<span class="string">&quot;mini&quot;</span> <span class="attr">data-selectedId</span>=<span class="string">&quot;&#123;&#123;item&#125;&#125;&quot;</span> <span class="attr">bindtap</span>=<span class="string">&quot;correctInfo&quot;</span> <span class="attr">round</span> <span class="attr">type</span>=<span class="string">&quot;info&quot;</span>&gt;</span>修改信息<span class="tag">&lt;/<span class="name">van-button</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">correctInfo</span>(<span class="params">e</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> d = e.currentTarget.dataset.selectedid;</span><br><span class="line">    <span class="built_in">this</span>.setData(&#123;</span><br><span class="line">      goodsname: d.commodityName,</span><br><span class="line">      goodsdesc: d.commodityDetail,</span><br><span class="line">      goodsnum: d.commodityQuantity,</span><br><span class="line">      goodsprice: d.commodityPrice,</span><br><span class="line">      choicheId:d.id,</span><br><span class="line">      fileList: [],</span><br><span class="line">      upgoods: <span class="literal">true</span></span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">this</span>.iWillSell(&#123;</span><br><span class="line">      upgoods: <span class="literal">true</span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h4 id="最快解析html的方法"><a href="#最快解析html的方法" class="headerlink" title="最快解析html的方法"></a>最快解析html的方法</h4><p>在微信小程序解析html标签不是一件容易的事，一般可以参照xml的解析方法，解析dom,但是最后发现，解析读取html标签的方式，在微信小程序里最好的方法是正则表达式，有关复习正则的时候那叫一个痛苦，就不多说，具体就按照，下面代码改编</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">regx</span>(<span class="params">res, my_reg</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> data = [];</span><br><span class="line">    my_reg.lastIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">var</span> tmp_reg;</span><br><span class="line">    <span class="keyword">while</span> ((tmp_reg = my_reg.exec(res)) != <span class="literal">null</span>) &#123;</span><br><span class="line">      data.push(tmp_reg[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//调用的时候按照一般数组格式，返回正则匹配到的数组</span></span><br><span class="line"><span class="built_in">this</span>.regx(res,<span class="regexp">/A([\s\S]*?)B/gmi</span>);</span><br></pre></td></tr></table></figure><p>返回的是A-B的所有内容</p><h4 id="展示html的内容"><a href="#展示html的内容" class="headerlink" title="展示html的内容"></a>展示html的内容</h4><p>现在解析html再显示在页面就必须使用一些插件，比如wxPrase.js但是，对于代码高亮等需求就必须自己拓展，改变代码，不太好实现，并且不支持插件拓展，还有一个问题，该插件的开发作者已经对该项目停止维护了，为了更好地解决用户需求，建议使用mp-html.js来实现，它的好处就不言而喻，在此提供以下两个项目的位置</p><blockquote><p>mp-html: 小程序富文本组件，支持渲染和编辑 html，支持在微信、QQ、百度、支付宝、头条和 uni-app 平台使用<a href="https://gitee.com/jin-yufeng/mp-html/">https://gitee.com/jin-yufeng/mp-html/ </a></p><p>wxParse:<a href="https://github.com/icindy/wxParse">https://github.com/icindy/wxParse</a></p></blockquote><h4 id="有关前端与后端token验证"><a href="#有关前端与后端token验证" class="headerlink" title="有关前端与后端token验证"></a>有关前端与后端token验证</h4><p>设置了token的一般应该是放在header里面，由于第一次，姿势不对，我和后端多次交涉，最后有很大一部分的问题，实际写法应该如下</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">header: &#123;</span><br><span class="line">        Authorization: &quot;Bearer &quot; + app.globalData.token</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure><p>如此一来，后端的解析完美通过</p><h4 id="有关微信登录"><a href="#有关微信登录" class="headerlink" title="有关微信登录"></a>有关微信登录</h4><p>说到这，就必须说说，登录流程，必须先调用<code>wx.login</code>获得code上传到服务器，让服务器与微信服务端互交，然后使用获取<code>sessionId</code>,用于后面的业务，<code>wx.getUserProfile</code>弹出用户授权窗口，用于登录信息，唯一我踩得最深的坑，我就是将<code>wx.getUserProfile</code>写入了<code>wx.login</code>的<code>success</code>方法里面，一直请求不成功，过了很久，最后发现，<code>wx.getUserProfile</code>只能写在按钮点击事件里面进行交互，不然就会像我一样，一直调试，一直<code>fail</code></p><p>所以，最有效的登录逻辑，就是，在打开用户登录页面，首先调用<code>wx.login</code>，最后在页面上写一个引导用户登录的按钮，用来调用<code>wx.getUserProfile</code></p><h4 id="文件按序上传"><a href="#文件按序上传" class="headerlink" title="文件按序上传"></a>文件按序上传</h4><p>对于微信小程序的文件上传，最让人吐槽的是文件上传，调用 <code>wx.uploadFile</code>,每一次只能上传一个文件，多文件上传就必须多次调用该接口方法，依次文件上传就最好使用递归上传法，比如</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">upfile</span>(<span class="params">file, count</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="built_in">this</span>;</span><br><span class="line">    wx.uploadFile(&#123;</span><br><span class="line">      filePath: file[count],</span><br><span class="line">      name: <span class="string">&#x27;file&#x27;</span>,</span><br><span class="line">      url: <span class="built_in">this</span>.data.host + <span class="string">&quot;/commodity/insert/upload&quot;</span>,</span><br><span class="line">      header: &#123;</span><br><span class="line">        Authorization: <span class="string">&quot;Bearer &quot;</span> + app.globalData.token</span><br><span class="line">      &#125;,</span><br><span class="line">      method: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">      success: <span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> res = <span class="built_in">JSON</span>.parse(res.data);</span><br><span class="line">        <span class="keyword">if</span> (res.succeed) &#123;</span><br><span class="line">          that.setData(&#123;</span><br><span class="line">            upedfile: [...that.data.upedfile, res.data]</span><br><span class="line">          &#125;);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          Toast(res.message + res.code);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      fail: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        Toast(<span class="string">&quot;图片上传失败&quot;</span>);</span><br><span class="line">      &#125;,</span><br><span class="line">      complete: <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (count == file.length - <span class="number">1</span>) &#123;</span><br><span class="line">          that.upData();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          that.upfile(file, count + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//以上只是参考，具体按照自己的需求实现</span></span><br><span class="line">upfile(fileList,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h4 id="请求链接参数后端没收到，不齐全"><a href="#请求链接参数后端没收到，不齐全" class="headerlink" title="请求链接参数后端没收到，不齐全"></a>请求链接参数后端没收到，不齐全</h4><p>有这个问题，可能使用了get方法，出现这样的情况</p><p>在其他http测试接口没问题，在微信小程序测试就有如上问题，就不妨将后端的get方法改为post请求，原因是url长度在微信小程序的长度有限制，不适合请求过长的url</p>]]></content>
      
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> 小程序 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>打造Android最简单优雅的Linux面板</title>
      <link href="2022/01/14/da-zao-android-zui-jian-dan-you-ya-de-linux-mian-ban/"/>
      <url>2022/01/14/da-zao-android-zui-jian-dan-you-ya-de-linux-mian-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="打造Android最简单优雅的Linux面板"><a href="#打造Android最简单优雅的Linux面板" class="headerlink" title="打造Android最简单优雅的Linux面板"></a>打造Android最简单优雅的Linux面板</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>都知道，Android是基于Linux，但在Android平台上，想要运行Linux的应用也不是那么容易，也没有什么方便的终端，想要使用手机办公，不容易，本文就来讲讲基于强大的Termux终端是如何实现Linux的，并且运行一些软件的，如VS Code,WPS,QQ….,话不多说，教程开始</p><h2 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h2><p>要开始工作肯定需要一个强大的工具，那么，Termux便出现了，它是Android平台的一款超级终端APP,在国内，有很多应用市场都提供它的下载，比如，酷安app等，但是要想在国内安装并正常使用，必须下载F-droid下载源的</p><blockquote><p>Termux下载 <a href="https://f-droid.org/en/packages/com.termux/">https://f-droid.org/en/packages/com.termux/</a></p></blockquote><p><img src="image-20220110170312649.png" alt="image-20220110170312649"></p><p>打开下载链接，下拉到下面，找到<code>Download APK</code>点击下载就好</p><p>下载好了，正常安装即可</p><h2 id="起始"><a href="#起始" class="headerlink" title="起始"></a>起始</h2><p>打开Termux，它会自动的进行一些操作，等待完成就好了，下面开始高级操作，安装Linux只需要一行最简单的命令（没有之一）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/mo2/linux/raw/2/2)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>它的原理就是，开源项目 <a href="https://gitee.com/mo2/linux">Tmoe-linux</a></p><blockquote><p><a href="https://gitee.com/mo2/linux:%E5%9C%A8%F0%9F%93%B1Android">https://gitee.com/mo2/linux:在📱Android</a> termux和💻WSL上跨CPU架构运行GNU/Linux容器和桌面环境，便捷配置vnc,xserver和xrdp等远程桌面服务以及音频服务🎵。</p></blockquote><h2 id="系列操作"><a href="#系列操作" class="headerlink" title="系列操作"></a>系列操作</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>运行起始的代码，可能会得到这样的提示<img src="image-20220114153935919.png" alt="image-20220114153935919"></p><p>正常的话，回车就ok,</p><p>第一次使用的话会让你选择语言，可以通过上下的移动选择选择项，回车就是确定，也可以手触</p><p><img src="image-20220114154226050.png" alt="image-20220114154226050"></p><p>这里，我选择中文简体，然后就可以点OK，就来到了下一步，选择运行的方式的菜单</p><p><img src="image-20220114154441941.png" alt="image-20220114154441941"></p><p>由于大多数的android都是没有root过的，所以直接选择第一项<code>proot容器</code>，第一次使用会克隆这个项目到本地，才能继续使用，并且过程中可能会提醒更换下载源，按照默认的即可</p><p><img src="image-20220114154957994.png" alt="image-20220114154957994"></p><p>后面可能会选择一些选项，回车按照默认的就行</p><p><img src="image-20220114155234790.png" alt="image-20220114155234790"></p><p>修改完成的截图如图</p><p><img src="image-20220114155354979.png" alt="换源完成"></p><p>最后系统自动下载一些依赖就OK了</p><p><img src="image-20220114155615806.png" alt="image-20220114155615806"></p><p>以上的操作就是第一步，安装依赖</p><h3 id="基本设置"><a href="#基本设置" class="headerlink" title="基本设置"></a>基本设置</h3><p>下面我们需要重新执行一下，起始的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://gitee.com/mo2/linux/raw/2/2)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>回到了选择容器的地方</p><p><img src="image-20220114154441941.png" alt="image-20220114154441941"></p><p>这次依然选择proot容器</p><p>会提示选择终端配色，如图，按照个人的喜好选择就可以了（我这里选择neon）</p><p><img src="image-20220114160444986.png" alt="image-20220114160444986"></p><p>下面是选择终端的字体，同样，按照自己的喜好选择，不建议跳过（我这里选择<code>Inconsolata-go(粗)</code>）</p><p><img src="image-20220114160724229.png" alt="image-20220114160724229"></p><p>后面会提示是否修改Termux下面默认的小键盘，可以按照自己的喜好，默认是现在看到的这样</p><p><img src="image-20220114161102924.png" alt="image-20220114161102924"></p><p>修改后是这样</p><p><img src="image-20220114161318814.png" alt="image-20220114161318814"></p><p>看喜好吧，我这里就不改了</p><p>接下来就是选择DNS,其实都可以，我这里选择第6个Tuna吧</p><p><img src="image-20220114161622155.png" alt="image-20220114161622155"></p><p>选择是否启用一言（凭喜好，我这里就开启吧）</p><p><img src="image-20220114161734940.png" alt="image-20220114161734940"></p><p>设置时区，在中国，北京时间，时区是东八区，所以确定就可以了</p><p><img src="image-20220114161948804.png" alt="image-20220114161948804"></p><p>下面大体上设置完成，就可以阅读一下用户协议，回车同意就可以继续使用了</p><p><img src="image-20220114162210840.png" alt="image-20220114162210840"></p><h3 id="新增proot容器"><a href="#新增proot容器" class="headerlink" title="新增proot容器"></a>新增proot容器</h3><p>这时，可能由于你操作系统的架构而出现两种选择，其中一种是amd64的，android手机一般是arm64</p><p>由于我为了方便演示，使用了WSA(windows subsystem for android),所以界面会是amd64下图所示</p><p><img src="image-20220114163129947.png" alt="amd"></p><p>如果是android手机，可能会是arm64这样</p><p><img src="image-20220114163549466.png" alt="arm64"></p><p>这里可以选择一种容器进行运行，建议选择与自己系统架构相同的运行，也可以跨架构运行，不过效率有点偏低</p><p>所以就直接选择第一个，默认的发行版列表，下一步就可以选择构建一个自己熟悉的容器（以第一个为例）</p><p><img src="image-20220114164040876.png" alt="image-20220114164040876"></p><p>下面就可以选择自己喜欢的界面（我这里就默认第一个）</p><p><img src="image-20220114164313668.png" alt="image-20220114164313668"></p><p>下面就继续安装一个distribution,按照喜好选择，我这里选择<code>kali-rolling</code></p><p><img src="image-20220114164603005.png" alt="kali-rolling"></p><p>就这样，容器就构建好了，下面就可以启动我们新建的kali-xfce-amd64的容器</p><p><img src="image-20220114164824328.png" alt="image-20220114164824328"></p><p>第一次启动，会选择网络节点（我选第一个Tmoe默认）</p><p><img src="image-20220114165011423.png" alt="image-20220114165011423"></p><p>选择节点，下载你选择的容器镜像（回车一下）</p><p><img src="image-20220114165146084.png" alt="image-20220114165146084"></p><p>下面就是漫长的等待下载,下载过程中会出现一些错误，不用管，系统会自己处理</p><p><img src="image-20220114165502319.png" alt="image-20220114165502319"></p><p>等待下载完成以后，会有系统自动安装一些依赖，优化，最后完成后，会提示是否新建一个sudo的用户，是在这个虚拟的容器里面的sodo用户，并不是termux的</p><p><img src="image-20220114170731727.png" alt="image-20220114170731727"></p><p>演示就新建一个sudo的user吧</p><p><img src="image-20220114170758976.png" alt="image-20220114170758976"></p><p>然后是sudo的密码</p><p><img src="image-20220114170917949.png" alt="image-20220114170917949"></p><p>第一次设置，会询问是否将新建的sudo用户设置为默认用户（权凭自己，我这里否）</p><p><img src="image-20220114171100213.png" alt="image-20220114171100213"></p><p>后面会询问是否删除<code>~/zsh.sh &amp; ~zsh-i.sh</code>的提示，这里我选择删除</p><p><img src="image-20220114171311521.png" alt="image-20220114171311521"></p><p>下面会询问是否安装tmoe tools的工具，方便安装软件和管理，这里就选择安装吧</p><p><img src="image-20220114171453767.png" alt="image-20220114171453767"></p><p>后面是一个头像，arm64是使用的QQ头像，amd64就是默认的头像（这里就yes了）</p><p><img src="image-20220114171634715.png" alt="image-20220114171634715"></p><p>下面就可以设置VNC的访问密码了</p><p><img src="image-20220114171816175.png" alt="image-20220114171816175"></p><p>选择端口（5902或5903都可以）</p><p>下面就是一些开启VNC远程服务的命令</p><p><img src="image-20220114171939743.png" alt="image-20220114171939743"></p><p>执行完成以后一般会来到我们的tmoe-tools的主面板<img src="image-20220114172331006.png" alt="image-20220114172331006"></p><p>这里可以安装一些感兴趣的软件，浏览器等等，到这里，就算Linux安装完成了，我们先安装一个GUI的图形界面，方便后面vnc启动</p><p><img src="image-20220114181055161.png" alt="image-20220114181055161"></p><p>在Termux里面，没有root只能选择第一个proot_DE,下面选择一个我们喜欢的GUI安装，就安装第一个吧xfce</p><p><img src="image-20220114181221657.png" alt="image-20220114181221657"></p><p>下面就是一路回车，安装想要的东西。</p><p>安装好了就可以退出，就退出了tmoe-tools的面板，来到了我们希望的地方</p><p><img src="image-20220114172830546.png" alt="image-20220114172830546"></p><p>退出这里，可以使用exit</p><h3 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h3><p>如果想进入termux启动安装的linux有两种方法，一般使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmoe m</span><br></pre></td></tr></table></figure><p>启动tmoe-tools，</p><p><img src="image-20220114154441941.png" alt="tmoe-manager"></p><p>进入proot容器，选择第二个已经安装的容器列表</p><p><img src="image-20220114163129947.png" alt="amd"></p><p>就可以看到已经安装的linux的列表</p><p><img src="image-20220114173701496.png" alt="image-20220114173701496"></p><p>可以进入，启动容器</p><blockquote><p>如果无法启动，或者有异常，可以在tome-tools的页面，选择<code>FAQ常见问题</code>，里面解决<img src="image-20220114174526307.png" alt="image-20220114174526307"></p></blockquote><h3 id="VNC界面"><a href="#VNC界面" class="headerlink" title="VNC界面"></a>VNC界面</h3><p>在Linux界面，输入<code>startvnc</code>,就可以看到VNC的地址</p><p><img src="image-20220114230340635.png" alt="image-20220114230340635"></p><p>在手机或电脑上下载VNC Viewer，输入刚才的局域网地址，就可以浏览GUI的图形化界面了</p><p><img src="image-20220114231055086.png" alt="image-20220114231055086"></p><p>可以通过tmoe m的工具安装一些实用的软件，比如（QQ,WPS,Android studio)<img src="image-20220114231731111.png" alt="image-20220114231731111"></p><p>选择第二个，Software center,就可以为所欲为，安装一系列的软件了</p><p><img src="image-20220114232003938.png" alt="image-20220114232003938"></p><p>只要你敢想，在手机上运行Linux的程序不是问题，就是需要注意点linux的软件架构，下载对应的软件</p><p><img src="image-20220114232557547.png" alt="image-20220114232557547"></p><p>最后，<code>stopvnc</code>就退出了</p>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Termux </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>android 嵌入python 互交</title>
      <link href="2021/12/25/android-qian-ru-python-hu-jiao/"/>
      <url>2021/12/25/android-qian-ru-python-hu-jiao/</url>
      
        <content type="html"><![CDATA[<h1 id="android-嵌入python-互交"><a href="#android-嵌入python-互交" class="headerlink" title="android 嵌入python 互交"></a>android 嵌入python 互交</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>都知道，之所以python十分强大，是因为其包含许多的库，通过这些库的拓展，实现许多需要的功能，由此想到了如果这些功能能够被移植到android平台的app上，应用一定十分广泛。</p><p>Google开发的android studio就能够直接使用Python开发app，实现java与Python互交。</p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>既然要实现在android平台，python与Java互交，就必须想到一个工具，<code>Chaquopy</code>，<code>Chaquopy</code>的作用就是在Android Studio添加Python环境，java与Python互调，打包安装后安卓apk文件能够正常运行。</p><ul><li>前提在Windows设备上已经安装了Android Studio和Python环境</li><li>Android Studio的Gradle的版本需要在3.1.0以上</li><li>Android SDK的版本在16以上</li></ul><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>新建一个Android工程，在项目的目录下的build.gradle文件中，添加下面内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        ...</span><br><span class="line">        maven &#123; url &quot;https://chaquo.com/maven&quot; &#125;  #add code</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        ...</span><br><span class="line">        classpath &quot;com.chaquo.python:gradle:8.0.0&quot;  #add code</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20211223212151622.png" alt="image-20211223212151622"></p><p>在app/build.gradle文件里面需要使用插件<code>com.chaquo.python</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">&#x27;com.chaquo.python&#x27;</span></span><br></pre></td></tr></table></figure><p>可以指定一下abi,如果需要在模拟器下运行，可以增加<code>x86</code>，但是一般指定<code>armeabi-v7a</code>即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ndk &#123;</span><br><span class="line">            <span class="comment">// 指定abi，如需在模拟器调试，增加&quot;x86&quot;，否则指定&quot;armeabi-v7a&quot;即可</span></span><br><span class="line">            abiFilters &quot;armeabi-v7a&quot;, &quot;x86&quot; #add code</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>在此，还得指明python的路径，<code>C:/Users/admin/AppData/Local/Programs/Python/Python39/python.exe</code>是我python3.9的默认安装目录，这里必须替换成自己的python路径。</p><p>项目需要安装运行的python库可以通过pip安装，比如，安装<code>numpy</code>库</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">python &#123;</span><br><span class="line">           <span class="comment">// 指定python路径</span></span><br><span class="line">     buildPython <span class="string">&quot;C:/Users/admin/AppData/Local/Programs/Python/Python39/python.exe&quot;</span></span><br><span class="line">           <span class="comment">// 安装python库</span></span><br><span class="line">      pip &#123;</span><br><span class="line">               install <span class="string">&quot;numpy&quot;</span></span><br><span class="line">               install <span class="string">&quot;scipy&quot;</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure><p><img src="image-20211223213026353.png" alt="image-20211223213026353"></p><p>配置完成后，可以通过右上角的”Sync Now”检查一下，如果没有报错，就代表配置成功了。build框中会提示<code>synced successfully</code></p><p>为了在Android Studio直接编写python文件，可以安装一下编辑的插件</p><p>点击<strong>File</strong> -&gt; <strong>setting</strong> 到设置界面，点击<strong>plugin</strong>，搜索<strong>python</strong>，在搜索结果中选择并安装<strong>Python Community Edition</strong>，安装成功之后，按钮会变为<strong>Restart IDE</strong>，重启Android Studio即可；</p><p><em>在python</em>文件夹上点击右键，如果在“<strong>new</strong>”中可以看到“<strong>Python File</strong>”，则表示配置文件<strong>成功！！！</strong></p><p>重启后右击前文提及的<em>src/main</em>目录下名为“<em>python</em>”的文件夹，如果在“<strong>new</strong>”中有“<strong>Python File</strong>”，则表示配置文件成功！！！</p><p><img src="image-20211223222743731.png" alt="image-20211223222743731"></p><h3 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h3><p>首先新建一个python文件夹，在<code>app/src/main/</code>文件夹下鼠标右键，在<code>new</code>里面的<code>python package</code>新建一个Python文件夹，里面会默认生成一个<code>__init__.py</code>的python的python文件。</p><p><img src="image-20211225143534656.png" alt="image-20211225143534656"></p><h2 id="Java调用python"><a href="#Java调用python" class="headerlink" title="Java调用python"></a>Java调用python</h2><p>用于实例，就在python这个文件夹下新建一个<code>mypython.py</code>文件，可以在里面写入以下内容用于测试。</p><p><code>app/src/main/python/mypython.py</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getString</span>():</span></span><br><span class="line">    <span class="built_in">str</span>=<span class="string">&quot;hi python&quot;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">str</span></span><br></pre></td></tr></table></figure><p>就是用python定义了一个函数，<code>getString()</code>,用来返回字符串“hi python”</p><p><img src="image-20211225144721421.png" alt="image-20211225144721421"></p><p>下面，在<code>MainActivity</code>里面初始化一下python,可以使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 初始化python</span></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initPython</span><span class="params">()</span></span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (! Python.isStarted()) &#123;</span><br><span class="line">         Python.start(<span class="keyword">new</span> AndroidPlatform(<span class="keyword">this</span>));</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>并把<code>initPython()</code>放在<code>onCreate()</code>方法里面调用。</p><p>为了显示Java调用python 的效果，可以使用一个<code>TextView</code>来显示调用python传过来的值</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">TextView tv=(TextView)findViewById(R.id.my_id);</span><br></pre></td></tr></table></figure><p>下面就开始调用，把调用代码就放在<code>startpython()</code>私有方法里面吧，可以随意</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startpython</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Python py = Python.getInstance();</span><br><span class="line">        PyObject pyo= Python py = Python.getInstance();</span><br><span class="line">        tv.setText(pyo.toJava(String.class));</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>第二行<code>Python py = Python.getInstance();</code>是用来创建一个python的接口</li><li>第三行<code>py.getModule(&quot;mypython&quot;).callAttr(&quot;getString&quot;);</code>的意思是调用mypython文件里面的getStrintg函数，得到一个<code>PyObject</code>的对象</li><li><code>pyo.toJava(String.class)</code>就是将<code>PyObject</code>转换为java的数据类型</li></ul><p>pyo表示调用函数之后的返回值，因为Python中的数据类型和Java中有些不一样，所以一般不能直接使用，需要进行转换，比如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.如果Python函数return(以上述obj1为例)为int类型，需要使用一下语句进行转换：  </span></span><br><span class="line">Integer result = obj1.toJava(Integer.class);  </span><br><span class="line"></span><br><span class="line"><span class="comment">//2.如果Python函数return为一维int的list类型，使用以下语句进行转换：  </span></span><br><span class="line"><span class="keyword">int</span>[] result = obj1.toJava(<span class="keyword">int</span>[].class);</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.如果Python函数return为二维int的list类型，使用以下语句进行转换：  </span></span><br><span class="line"><span class="keyword">int</span>[][] result = obj1.toJava(<span class="keyword">int</span>[][].class);</span><br></pre></td></tr></table></figure><p>然后，java调用python的完整代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    Python py;</span><br><span class="line">    TextView tv;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        tv=(TextView)findViewById(R.id.my_id);</span><br><span class="line">        initPython();</span><br><span class="line">        startpython();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 初始化python</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initPython</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (! Python.isStarted()) &#123;</span><br><span class="line">            Python.start(<span class="keyword">new</span> AndroidPlatform(<span class="keyword">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startpython</span><span class="params">()</span></span>&#123;</span><br><span class="line">        py = Python.getInstance();</span><br><span class="line">        PyObject pyo= py.getModule(<span class="string">&quot;mypython&quot;</span>).callAttr(<span class="string">&quot;getString&quot;</span>);</span><br><span class="line">        tv.setText(pyo.toJava(String.class));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20211225151155554.png" alt="image-20211225151155554"></p><p>通过编译在真机中的显示如下</p><p><img src="image-20211225151732442.png" alt="image-20211225151732442"></p><p>显然，java调用python成功，并返回了python中字符串的值</p><h2 id="python调用java"><a href="#python调用java" class="headerlink" title="python调用java"></a>python调用java</h2><p>首先，为了演示例子，新建一个java的储存类<code>pythonclass</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">pythonclass</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String val;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">pythonclass</span><span class="params">(String val)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.val=val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getAll</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;name:&quot;</span>+name+<span class="string">&quot;-age:&quot;</span>+age+<span class="string">&quot;-val:&quot;</span>+val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20211225152449996.png" alt="image-20211225152449996"></p><p>然后新建一个python的文件来调用java代码</p><p><code>app/src/main/python/pythonUsejava.py</code>:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> java <span class="keyword">import</span> jclass</span><br><span class="line"><span class="comment"># python调用Java类</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_java_test</span>():</span></span><br><span class="line">    pythonclass = jclass(<span class="string">&quot;com.qqq.pytest.pythonclass&quot;</span>)<span class="comment">#用自己的包名</span></span><br><span class="line">    javaobj = pythonclass(<span class="string">&quot;good success&quot;</span>)</span><br><span class="line">    javaobj.setName(<span class="string">&quot;python-java&quot;</span>)</span><br><span class="line">    javaobj.setAge(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> javaobj</span><br></pre></td></tr></table></figure><p>在python代码里面，可以引入一些python库的文件，必须在<code>app/build.gradle</code>里面安装，安装后编写python代码可能报错未找到这些pyyhon库,可以无视，编译后安装的app可以运行的</p><p>为了调用这个python文件，还是得先使用java调用python，然后python调用java,实现代码之间的互交。</p><p>在<code>Python py = Python.getInstance();</code>执行之后，使用java调用一下pythonUsejava.py里面的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pythontojava</span><span class="params">()</span></span>&#123;</span><br><span class="line">        PyObject pyo=py.getModule(<span class="string">&quot;pythonUsejava&quot;</span>).callAttr(<span class="string">&quot;get_java_test&quot;</span>);</span><br><span class="line">        pythonclass pc= pyo.toJava(pythonclass.class);</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>,pc.getAll(),Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>之后使用Toast显示调用后返回修改的内容</p><p>为了方便，就在TextView添加点击事件，调用“pythontojava()”函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tv.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                pythontojava();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>最后，全文完整的MainActivity的代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    Python py;</span><br><span class="line">    TextView tv;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        tv=(TextView)findViewById(R.id.my_id);</span><br><span class="line">        initPython();</span><br><span class="line">        startpython();</span><br><span class="line">        tv.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                pythontojava();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 初始化python</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initPython</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (! Python.isStarted()) &#123;</span><br><span class="line">            Python.start(<span class="keyword">new</span> AndroidPlatform(<span class="keyword">this</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">startpython</span><span class="params">()</span></span>&#123;</span><br><span class="line">        py = Python.getInstance();</span><br><span class="line">        PyObject pyo= py.getModule(<span class="string">&quot;mypython&quot;</span>).callAttr(<span class="string">&quot;getString&quot;</span>);</span><br><span class="line">        tv.setText(pyo.toJava(String.class));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">pythontojava</span><span class="params">()</span></span>&#123;</span><br><span class="line">        PyObject pyo=py.getModule(<span class="string">&quot;pythonUsejava&quot;</span>).callAttr(<span class="string">&quot;get_java_test&quot;</span>);</span><br><span class="line">        pythonclass pc= pyo.toJava(pythonclass.class);</span><br><span class="line">        Toast.makeText(<span class="keyword">this</span>,pc.getAll(),Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20211225154516548.png" alt="image-20211225154516548"></p><p>运行并点击TextView 的效果如下</p><p><img src="image-20211225154822233.png" alt="image-20211225154822233"></p><p>运行成功</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>Chaquopy（Python SDK for Android）官方链接：<br><a href="https://chaquo.com/chaquopy/">https://chaquo.com/chaquopy/</a></p><p>Android-Python混合开发 1 （java和python互相调用）：</p><p><a href="https://www.jianshu.com/p/a875b0f37a88">https://www.jianshu.com/p/a875b0f37a88</a></p><p>Android studio中编写Python代码-1：</p><p><a href="https://www.jianshu.com/p/73bd89712ddb">https://www.jianshu.com/p/73bd89712ddb</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对 栈 的理解</title>
      <link href="2021/12/18/dui-zhan-de-li-jie/"/>
      <url>2021/12/18/dui-zhan-de-li-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="对-栈-的理解"><a href="#对-栈-的理解" class="headerlink" title="对 栈 的理解"></a>对 栈 的理解</h1><h2 id="一，初始"><a href="#一，初始" class="headerlink" title="一，初始"></a>一，初始</h2><p>栈是一种具有特殊访问方式的储存空间。它的特殊性就在于，最后进入这个空间的数据，最先出去。</p><ul><li>可以用一个盒子和3本书描述<img src="810k6-c3lav.gif" alt="img"></li></ul><p>可以想象一下，如果这三本书是一行行代码，那么，它的解释入栈和出栈原理就是和图中所示的大概一样。</p><h2 id="二、栈的操作"><a href="#二、栈的操作" class="headerlink" title="二、栈的操作"></a>二、栈的操作</h2><ul><li>入栈：将一个新的元素放到栈顶</li><li>出栈：从栈顶取出一个元素</li></ul><blockquote><p>栈顶的元素总是最后入栈，需要出栈时，又总是最先被从栈中取出</p><p>这种操作规则：LIFO（Last in First out,后进先出）</p></blockquote><p>一般来说，在汇编中，入栈和出栈的指令是最基本的，push(入栈)，pop(出栈)</p><p>如：</p><p><code>push ax</code>将寄存器ax中的数据送入栈中</p><p><code>pop ax</code>从栈顶取出数据放到ax寄存器中</p><blockquote><p><code>8086CPU</code>的入栈和出栈方式都是以字(16位)为单位进行的</p></blockquote><h2 id="三、举例理解"><a href="#三、举例理解" class="headerlink" title="三、举例理解"></a>三、举例理解</h2><p>如果将<code>10000H~1000FH</code>这段内存当做栈来使用，理解以下指令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mov ax,0123H</span><br><span class="line">push ax</span><br><span class="line">mov bx,2266H</span><br><span class="line">push bx</span><br><span class="line">mov cx,1122H</span><br><span class="line">push cx</span><br><span class="line">pop ax</span><br><span class="line">pop bx</span><br><span class="line">pop cx</span><br></pre></td></tr></table></figure><p>分解指令理解</p><ul><li><p>初始栈的模型</p><p><img src="image-20211218142551845.png" alt="image-20211218142551845"></p></li><li><p><code>mov ax,0123H</code>和<code>push ax</code> </p><p>将<code>0123H</code>放入ax中，然后将ax中的数据push 进栈</p><p><img src="image-20211218142851085.png" alt="image-20211218142851085"></p></li><li><p>同理，<code> mov bx,2266H</code>和<code>push bx</code></p><p>将<code>2266H</code>放入bx寄存器中，再将bx中的数据push进栈</p><p><img src="image-20211218143350528.png" alt="image-20211218143350528"></p></li><li><p>同理，<code>mov cx,1122H</code>和<code>push cx</code></p><p><img src="image-20211218143631913.png" alt="image-20211218143631913"></p></li><li><p><code>pop ax</code></p><p><code>pop</code>指令是将栈顶的元素取出，放入ax中,由于这时栈顶的元素数据是<code>1122H</code>，所以将其取出</p><p><img src="image-20211218144052750.png" alt="image-20211218144052750"></p></li><li><p><code>pop bx</code></p><p>同理，这时pop取出栈顶的元素<code>2266H</code>,并放入bx中</p><p><img src="image-20211218144721558.png" alt="image-20211218144721558"></p></li><li><p><code>pop cx</code></p><p>这时取出<code>0123H</code>，将其放入cx中</p><p><img src="image-20211218145729752.png" alt="image-20211218145729752"></p></li></ul><p>由此，一个程序执行完毕，栈就恢复了原始状态</p><blockquote><p>注意：字形数据用两个单元存放，高地址放高8位，低地址放低8位</p></blockquote><h2 id="四、CPU如何知道指令位置"><a href="#四、CPU如何知道指令位置" class="headerlink" title="四、CPU如何知道指令位置"></a>四、CPU如何知道指令位置</h2><p>通过了一个例子的执行，可能有个问题，CPU是如何知道要执行指令的位置</p><p>答案是，寄存器<code>CS</code>和<code>IP</code>中存放着当前指令的段地址和偏移地址，并且，在任意时刻，<code>SS:SP</code>都指向栈顶的元素。</p><ul><li><p>段寄存器SS: 存放栈顶的段地址</p></li><li><p>寄存器SP：存放栈顶的偏移地址</p><h3 id="push深刻理解"><a href="#push深刻理解" class="headerlink" title="push深刻理解"></a>push深刻理解</h3></li></ul><p><code>push ax</code>事实上执行了两步操作，</p><ol><li><p><code>SP=SP-2</code></p></li><li><p>将ax中的内容送入<code>SS:SP</code>指向的内存单元处，<code>SS:SP</code>指向新的栈顶</p></li></ol><p><img src="image-20211218151824132.png" alt="image-20211218151824132"></p><h3 id="pop深刻理解"><a href="#pop深刻理解" class="headerlink" title="pop深刻理解"></a>pop深刻理解</h3><p>pop与push是逆运算，<code>pop ax</code>同样也需要执行两步操作</p><ol><li>将<code>SS:SP</code>指向的单元中的数据取出，放到ax中</li><li><code>SP=SP+2</code>，这时<code>SS:SP</code>指向了新的单元</li></ol><p><img src="image-20211218153457919.png" alt="image-20211218153457919"></p><p>由上面两步可以看出，所谓 ’取出‘ 数据，其实，并只取出了数据，并没有删除内存中的数据，而是将<code>SS:IP</code>的指向改变了，原来存入的数据还在，若想要删除，只能用新的数据覆盖</p><h2 id="五、栈的大小"><a href="#五、栈的大小" class="headerlink" title="五、栈的大小"></a>五、栈的大小</h2><p>因为<code>SS:SP</code>只记录了栈顶的地址，依靠SS和SP可以保证入栈和出栈时找到栈顶，如何保证在入栈和出栈时，栈顶不会超出栈空间？</p><p>即是</p><ul><li>当栈满的时候再使用push指令入栈</li><li>当栈空的时候再使用pop指令出栈</li></ul><p>这就会导致栈顶超界问题，非常危险</p><ol><li><p>栈顶超界</p><p><img src="g6bmg-yh3ty.gif" alt="img"></p></li><li><p>栈底超界</p><p><img src="srnvk-bun1d.gif" alt="img"></p></li></ol><p>以上演示图片说明，栈顶超界是危险的</p><p>因为我们既然将一段空间安排为栈，那么在栈空间之外的空间里很可能存放了具有其它用途的数据、代码，可能是我们自己程序中的，也可能是别的程序中的，毕竟在计算机中并不是只有我们自己的程序在运行。</p><p>这就是所谓的<code>栈溢出</code>,从黑客角度，就是<code>溢出攻击</code></p><h2 id="六、设置栈"><a href="#六、设置栈" class="headerlink" title="六、设置栈"></a>六、设置栈</h2><p>如果将<code>10000H~1000FH</code>这段空间当做栈，初始状态是空的，如何将<code>AX</code>,<code>BX</code>,<code>DS</code>中的数据入栈？</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mov ax,1000H</span><br><span class="line">mov ss,ax ;设置栈的段地址，SS&#x3D;1000H,不能直接向SS送入数据，用AX中转</span><br><span class="line">mov sp,0010H ;设置栈顶的偏移地址，因为栈为空，所以SP&#x3D;0010H</span><br><span class="line">push ax</span><br><span class="line">push bx</span><br><span class="line">push ds</span><br></pre></td></tr></table></figure><p>  栈的意义就在于暂时储存以后需要恢复的寄存器内容</p><h2 id="七、参考链接"><a href="#七、参考链接" class="headerlink" title="七、参考链接"></a>七、参考链接</h2><p>小甲鱼汇编入门：</p><p><a href="https://www.bilibili.com/video/BV1zW411n79C">https://www.bilibili.com/video/BV1zW411n79C</a></p><p>阮一峰-汇编入门教程：</p><p><a href="https://www.ruanyifeng.com/blog/2018/01/assembly-language-primer.html">https://www.ruanyifeng.com/blog/2018/01/assembly-language-primer.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 原理 </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Base64 的算法原理</title>
      <link href="2021/12/13/base64-de-suan-fa-yuan-li/"/>
      <url>2021/12/13/base64-de-suan-fa-yuan-li/</url>
      
        <content type="html"><![CDATA[<h1 id="Base64-的算法原理"><a href="#Base64-的算法原理" class="headerlink" title="Base64 的算法原理"></a>Base64 的算法原理</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Base64算法是我们日常生活中必不可少的加密编码方式之一，它常用64个可打印字符表示任意字符，通常用来储存、传输一些二进制数据；在一些加密方式，可以通过了解原理后进行更深入的加密运算操作。</p><h2 id="标准表"><a href="#标准表" class="headerlink" title="标准表"></a>标准表</h2><p>由于它是使用64个可打印字符表示的数据，则一定有一种特殊的对应关系。由于2的6次方等于64，所以可以用每6个位元为一个单元，对应某个可打印字符。我们知道三个字节有24个位元，就可以刚好对应于4个Base64单元，即3个字节需要用4个Base64的可打印字符来表示。在Base64中的可打印字符包括字母A-Z、a-z、数字0-9 ，这样共有62个字符，此外两个可打印符号在不同的系统中一般有所不同。但是，我们经常所说的Base64另外2个字符是：“+/”。这64个字符，所对应表如下</p><table border="1" rules="all" cellspacing="0" align="center"><tbody><tr><th scope="col">编号</th><th scope="col">字符</th><th rowspan="18">&nbsp;</th><th scope="col">编号</th><th scope="col">字符</th><th rowspan="18">&nbsp;</th><th scope="col">编号</th><th scope="col">字符</th><th rowspan="18">&nbsp;</th><th scope="col">编号</th><th scope="col">字符</th></tr><tr><td>0</td><td>A</td><td>16</td><td>Q</td><td>32</td><td>g</td><td>48</td><td>w</td></tr><tr><td>1</td><td>B</td><td>17</td><td>R</td><td>33</td><td>h</td><td>49</td><td>x</td></tr><tr><td>2</td><td>C</td><td>18</td><td>S</td><td>34</td><td>i</td><td>50</td><td>y</td></tr><tr><td>3</td><td>D</td><td>19</td><td>T</td><td>35</td><td>j</td><td>51</td><td>z</td></tr><tr><td>4</td><td>E</td><td>20</td><td>U</td><td>36</td><td>k</td><td>52</td><td>0</td></tr><tr><td>5</td><td>F</td><td>21</td><td>V</td><td>37</td><td>l</td><td>53</td><td>1</td></tr><tr><td>6</td><td>G</td><td>22</td><td>W</td><td>38</td><td>m</td><td>54</td><td>2</td></tr><tr><td>7</td><td>H</td><td>23</td><td>X</td><td>39</td><td>n</td><td>55</td><td>3</td></tr><tr><td>8</td><td>I</td><td>24</td><td>Y</td><td>40</td><td>o</td><td>56</td><td>4</td></tr><tr><td>9</td><td>J</td><td>25</td><td>Z</td><td>41</td><td>p</td><td>57</td><td>5</td></tr><tr><td>10</td><td>K</td><td>26</td><td>a</td><td>42</td><td>q</td><td>58</td><td>6</td></tr><tr><td>11</td><td>L</td><td>27</td><td>b</td><td>43</td><td>r</td><td>59</td><td>7</td></tr><tr><td>12</td><td>M</td><td>28</td><td>c</td><td>44</td><td>s</td><td>60</td><td>8</td></tr><tr><td>13</td><td>N</td><td>29</td><td>d</td><td>45</td><td>t</td><td>61</td><td>9</td></tr><tr><td>14</td><td>O</td><td>30</td><td>e</td><td>46</td><td>u</td><td>62</td><td>+</td></tr><tr><td>15</td><td>P</td><td>31</td><td>f</td><td>47</td><td>v</td><td>63</td><td>/</td></tr></tbody></table>有的加密就是通过魔改base64标准表，进而达到加密效果<h2 id="转换"><a href="#转换" class="headerlink" title="转换"></a>转换</h2><p> 对于任意字符串，将三个byte的数据，先后放入一个24bit的缓冲区中，先来的byte占高位。数据不足3byte的话，于缓冲区中剩下的bit用0补足。然后，每次取出6个bit，按照其值选择<code>ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/</code>中的字符作为编码后的输出。不断进行，直到全部输入数据转换完成。</p><p>  如果最后剩下两个输入数据，在编码结果后加1个“=”；如果最后剩下一个输入数据，编码结果后加2个“=”；如果没有剩下任何数据，就什么都不要加，这样才可以保证资料还原的正确性。</p><p>  编码后的数据比原始数据略长，为原来的4/3。无论什么样的字符都会全部被编码。</p><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><table border="1" rules="all" cellspacing="0" align="center"><tbody><tr><th scope="row">文本</th><td colspan="8" align="center"><strong>M</strong></td><td colspan="8" align="center"><strong>a</strong></td><td colspan="8" align="center"><strong>n</strong></td></tr><tr><th scope="row">ASCII编码</th><td colspan="8" align="center">77</td><td colspan="8" align="center">97</td><td colspan="8" align="center">110</td></tr><tr><th scope="row">二进制位</th><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>1</td><td>1</td><td>0</td><td>1</td><td>1</td><td>1</td><td>0</td></tr><tr><th scope="row">索引</th><td colspan="6" align="center">19</td><td colspan="6" align="center">22</td><td colspan="6" align="center">5</td><td colspan="6" align="center">46</td></tr><tr><th scope="row">Base64编码</th><td colspan="6" align="center"><strong>T</strong></td><td colspan="6" align="center"><strong>W</strong></td><td colspan="6" align="center"><strong>F</strong></td><td colspan="6" align="center"><strong>u</strong></td></tr></tbody></table><table  border="1" rules="all" cellspacing="0" align="center"><tbody><tr><th scope="row">文本（1 Byte）</th><td colspan="8" align="center"><strong>A</strong></td><td colspan="8" align="center">&nbsp;</td><td colspan="8" align="center">&nbsp;</td></tr><tr><th scope="row">二进制位</th><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><th scope="row">二进制位（补0）</th><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td><strong>0</strong></td><td><strong>0</strong></td><td><strong>0</strong></td><td><strong>0</strong></td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td><td>&nbsp;</td></tr><tr><th scope="row">Base64编码</th><td colspan="6" align="center"><strong>Q</strong></td><td colspan="6" align="center"><strong>Q</strong></td><td colspan="6" align="center"><strong>=</strong></td><td colspan="6" align="center"><strong>=</strong></td></tr><tr><th scope="row">文本（2 Byte）</th><td colspan="8" align="center"><strong>B</strong></td><td colspan="8" align="center"><strong>C</strong></td><td colspan="8" align="center">&nbsp;</td></tr><tr><th scope="row">二进制位</th><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td>&nbsp;</td><td>&nbsp;</td><td>x</td><td>x</td><td>x</td><td>x</td><td>x</td><td>x</td></tr><tr><th scope="row">二进制位（补0）</th><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>1</td><td>0</td><td>0</td><td>0</td><td>0</td><td>1</td><td>1</td><td><strong>0</strong></td><td><strong>0</strong></td><td>x</td><td>x</td><td>x</td><td>x</td><td>x</td><td>x</td></tr><tr><th scope="row">Base64编码</th><td colspan="6" align="center"><strong>Q</strong></td><td colspan="6" align="center"><strong>k</strong></td><td colspan="6" align="center"><strong>M</strong></td><td colspan="6" align="center">&nbsp;<strong>=</strong></td></tr></tbody></table><h2 id="链接引用"><a href="#链接引用" class="headerlink" title="链接引用"></a>链接引用</h2><p>Base64 算法原理，以及编码、解码【加密、解密】 介绍：</p><p><a href="http://blog.chacuo.net/719.html">http://blog.chacuo.net/719.html</a></p><p>用js实现的Base64加解密工具：</p><p><a href="https://kuangtant.gitee.io/tools/base64/">https://kuangtant.gitee.io/tools/base64/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android studio生成so文件</title>
      <link href="2021/12/12/android-studio-sheng-cheng-so-wen-jian/"/>
      <url>2021/12/12/android-studio-sheng-cheng-so-wen-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Android-studio生成so文件"><a href="#Android-studio生成so文件" class="headerlink" title="Android studio生成so文件"></a>Android studio生成so文件</h1><h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>现在，大部分安卓app的开发几乎都是使用java完成，但是，Java在速度和一些功能上可能不如c/c++程序，并且一些好的开源项目是使用c/c++开发完成的，为了使用这一功能，android拓展了jni,提供这一服务。</p><h2 id="二、-NDK"><a href="#二、-NDK" class="headerlink" title="二、 NDK"></a>二、 NDK</h2><h3 id="2-1-理解ndk"><a href="#2-1-理解ndk" class="headerlink" title="2.1 理解ndk"></a>2.1 理解ndk</h3><p>在Android OS上开发应用程序，Google提供了两种开发包：SDK和NDK,Android 平台从一开就已经支持了C/C++了。我们知道Android的SDK主要是基于Java的，所以导致了在用Android SDK进行开发的工程师们都必须使用Java语言。不过，Google从一开始就说明Android也支持JNI编程方式，也就是第三方应用完成可以通过JNI调用自己的C动态度。于是NDK就应运而生了。</p><h3 id="2-2-为何ndk"><a href="#2-2-为何ndk" class="headerlink" title="2.2  为何ndk"></a>2.2  为何ndk</h3><ul><li><p>1、在平台之间移植其应用</p></li><li><p>2、重复使用现在库，或者提供其自己的库重复使用</p></li><li><p>3、在某些情况下提性能，特别是像游戏这种计算密集型应用</p></li><li><p>4、使用第三方库，现在许多第三方库都是由C/C++库编写的，比如Ffmpeg这样库。</p></li><li><p>5、不依赖于Dalvik Java虚拟机的设计</p></li><li><p>6、代码的保护。由于APK的Java层代码很容易被反编译，而C/C++库反编译难度大</p></li></ul><h3 id="2-3-从NDK到so"><a href="#2-3-从NDK到so" class="headerlink" title="2.3 从NDK到so"></a>2.3 从NDK到so</h3><p><img src="1.webp" alt="img"></p><p>从上图这个Android系统框架来看，我们上层通过JNI来调用NDK层的，使用这个工具可以很方便的编写和调试JNI的代码。因为C语言的不跨平台，在Mac系统的下使用NDK编译在Linux下能执行的函数库——so文件。其本质就是一堆C、C++的头文件和实现文件打包成一个库。目前Android系统支持以下七种不用的CPU架构，每一种对应着各自的应用程序二进制接口ABI：(Application Binary Interface)定义了二进制文件(尤其是.so文件)如何运行在相应的系统平台上，从使用的指令集，内存对齐到可用的系统函数库。对应关系如下：</p><blockquote><ul><li>ARMv5——armeabi</li><li>ARMv7 ——armeabi-v7a</li><li>ARMv8——arm64- v8a</li><li>x86——x86</li><li>MIPS ——mips</li><li>MIPS64——mips64</li><li>x86_64——x86_64</li></ul></blockquote><h2 id="三、JNI"><a href="#三、JNI" class="headerlink" title="三、JNI"></a>三、JNI</h2><h3 id="3-1-解释jni"><a href="#3-1-解释jni" class="headerlink" title="3.1 解释jni"></a>3.1 解释jni</h3><p>JNI，全称为Java Native Interface，即Java本地接口，JNI是Java调用Native 语言的一种特性。通过JNI可以使得Java与C/C++机型交互。即可以在Java代码中调用C/C++等语言的代码或者在C/C++代码中调用Java代码。由于JNI是JVM规范的一部分，因此可以将我们写的JNI的程序在任何实现了JNI规范的Java虚拟机中运行。同时，这个特性使我们可以复用以前用C/C++写的大量代码JNI是一种在Java虚拟机机制下的执行代码的标准机制。代码被编写成汇编程序或者C/C++程序，并组装为动态库。也就允许非静态绑定用法。这提供了一个在Java平台上调用C/C++的一种途径，反之亦然。</p><p>PS：<br> 开发JNI程序会受到系统环境限制，因为用C/C++ 语言写出来的代码或模块，编译过程当中要依赖当前操作系统环境所提供的一些库函数，并和本地库链接在一起。而且编译后生成的二进制代码只能在本地操作系统环境下运行，因为不同的操作系统环境，有自己的本地库和CPU指令集，而且各个平台对标准C/C++的规范和标准库函数实现方式也有所区别。这就造成了各个平台使用JNI接口的Java程序，不再像以前那样自由的跨平台。如果要实现跨平台， 就必须将本地代码在不同的操作系统平台下编译出相应的动态库。</p><h3 id="3-2-为何jni"><a href="#3-2-为何jni" class="headerlink" title="3.2 为何jni"></a>3.2 为何jni</h3><p>可以使用Java代码和C/C++进行交互，与其它类似接口Microsoft的原始本地接口等相比，JNI的主要竞争优势在于：它在设计之初就确保了二进制的兼容性，JNI编写的应用程序兼容性以及其再某些具体平台上的Java虚拟机兼容性(当谈及JNI时，这里并不特比针对Davik虚拟机，JNI适用于所有JVM虚拟机)。这就是为什么C/C++编译后的代码无论在任何平台上都能执行。不过，一些早期版本并不支持二进制兼容。二进制兼容性是一种程序兼容性类型，允许一个程序在不改变其可执行文件的条件下在不同的编译环境中工作。</p><h3 id="3-3-工作原理"><a href="#3-3-工作原理" class="headerlink" title="3.3 工作原理"></a>3.3 工作原理</h3><p><img src="2.webp" alt="img"></p><p><img src="3.webp" alt="img"></p><p>JNI是作为一个桥梁的作用，链接java和c/c++</p><h3 id="3-4-命名"><a href="#3-4-命名" class="headerlink" title="3.4 命名"></a>3.4 命名</h3><p>例子</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">JNIExport jstring JNICALL <span class="title">Java_com_example_hellojni_MainActivity_stringFromJNI</span><span class="params">( JNIEnv* env,jobject thiz )</span> </span></span><br></pre></td></tr></table></figure><p><strong><code>jstring</code></strong> 是<strong>返回值类型</strong><br> <strong><code>Java_com_example_hellojni</code></strong> 是<strong>包名</strong><br> <strong><code>MainActivity</code></strong> 是<strong>类名</strong><br> <strong><code>stringFromJNI</code></strong> 是<strong>方法名</strong></p><p>其中**<code>JNIExport</code><strong>和</strong><code>JNICALL</code>**是不固定保留的关键字不要修改</p><h3 id="3-5-JNI开发流程"><a href="#3-5-JNI开发流程" class="headerlink" title="3.5 JNI开发流程"></a>3.5 JNI开发流程</h3><blockquote><ul><li>第1步：在Java中先声明一个native方法</li><li>第2步：编译Java源文件javac得到.class文件</li><li>第3步：通过javah -jni命令导出JNI的.h头文件</li><li>第4步：使用Java需要交互的本地代码，实现在Java中声明的Native方法（如果Java需要与C++交互，那么就用C++实现Java的Native方法。）</li><li>第5步：将本地代码编译成动态库(Windows系统下是.dll文件，如果是Linux系统下是.so文件，如果是Mac系统下是.jnilib)</li><li>第6步：通过Java命令执行Java程序，最终实现Java调用本地代码。</li></ul></blockquote><p>PS：javah 是JDK自带的一个命令，-jni参数表示将class 中用到native 声明的函数生成JNI 规则的函数</p><p><img src="webp.webp" alt="img"></p><h2 id="四、实现一个JNI例子"><a href="#四、实现一个JNI例子" class="headerlink" title="四、实现一个JNI例子"></a>四、实现一个JNI例子</h2><h3 id="4-1-创建app"><a href="#4-1-创建app" class="headerlink" title="4.1 创建app"></a>4.1 创建app</h3><p>打开android studio,新建一个project, Create Android Project</p><p><img src="image-20211212162000770.png" alt="image-20211212162000770"></p><p>这里可以勾选Include C++ support, Android studio会给出一个使用JNI的例子。</p><h3 id="4-2-创建-测试类"><a href="#4-2-创建-测试类" class="headerlink" title="4.2 创建 测试类"></a>4.2 创建 测试类</h3><p>新建一个testso的java类，在里面声明一个native方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.qqq.sotest.sotest;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by admin on 2021/12/12.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">testso</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">&quot;so-lib&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> String <span class="title">getJniTestString</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="4.png" alt="image-20211212162936951"></p><p>注意，loadLibrary的是在CMakeLists.txt设置的library的名字，而不是c文件名</p><h3 id="4-3-创建c文件"><a href="#4-3-创建c文件" class="headerlink" title="4.3 创建c文件"></a>4.3 创建c文件</h3><p>在app/src/main/cpp/目录下新建一个so-test.c的文件，实现c语言方法，如</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line">JNIEXPORT jstring JNICALL Java_com_qqq_sotest_sotest_testso_getJniTestString</span><br><span class="line">        (JNIEnv * env, jclass object)&#123;</span><br><span class="line">    <span class="keyword">return</span> (*env)-&gt;NewStringUTF(env,<span class="string">&quot;测试 jni&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="image-20211212164349767.png" alt="image-20211212164349767"></p><p>创建c文件里面的<code>JNICALL Java_xxxx_xxxx_xxxx</code>必须遵循命名规则。</p><h3 id="4-4-添加到CMakeLists-txt"><a href="#4-4-添加到CMakeLists-txt" class="headerlink" title="4.4 添加到CMakeLists.txt"></a>4.4 添加到CMakeLists.txt</h3><p>需要把so-test.c文件告诉Android Studio，通过CMake修改</p><p>在app/src/main/CMakeLists.txt添加如下内容</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">add_library( # Sets the name of the library.</span><br><span class="line">             so-lib</span><br><span class="line"></span><br><span class="line">             # Sets the library as a shared library.</span><br><span class="line">             SHARED</span><br><span class="line"></span><br><span class="line">             # Provides a relative path to your source file(s).</span><br><span class="line">             src/main/cpp/so-test.c )</span><br></pre></td></tr></table></figure><p><code>so-lib</code>设置library的名字,在java代码里引用</p><p><code>SHARED</code>将其设为共享的library</p><p><code>src/main/cpp/so-test.c</code> c文件的路径</p><p><img src="image-20211212165436159.png" alt="image-20211212165436159"></p><h3 id="4-5-构建"><a href="#4-5-构建" class="headerlink" title="4.5 构建"></a>4.5 构建</h3><p>点击<code>Build</code>-&gt;<code>Make Project</code>构建，或者<code>ctrl</code>+<code>F9</code>构建， 再运行</p><p>这样，c/cpp文件就被打包成so文件了。</p><p><img src="image-20211212171338595.png" alt="image-20211212171338595"></p><p>打包完成后so文件会放在apk的lib/文件夹里</p><p><img src="enbd8-nseor.gif" alt="enbd8-nseor"></p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><ul><li><p>Android JNI(一)——NDK与JNI基础：</p><p><a href="https://www.jianshu.com/p/87ce6f565d37">https://www.jianshu.com/p/87ce6f565d37</a></p></li><li><p>Android Studio生成so文件的几种方式：</p><p><a href="https://www.jianshu.com/p/faa3eebbd401">https://www.jianshu.com/p/faa3eebbd401</a></p></li><li><p>Android studio 编译NDK Android studio 生成.so文件：</p><p><a href="https://www.jianshu.com/p/4c7d9a10933b">https://www.jianshu.com/p/4c7d9a10933b</a></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ASCII 转换工具</title>
      <link href="2021/12/03/ascii-zhuan-huan-gong-ju/"/>
      <url>2021/12/03/ascii-zhuan-huan-gong-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在日常学习过程中，难免有些进制转换的问题，比如ASCII转2,10，16进制等，就可以使用如下工具</p><iframe style="width:100%; height:260;border:none;text-align:center" allowtransparency="yes" frameborder="0" width="100%" height="1000" src="https://kuangtant.gitee.io/tools/asscii/"></iframe>]]></content>
      
      
      
        <tags>
            
            <tag> tools </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python自动android操作</title>
      <link href="2021/11/18/python-zi-dong-android-cao-zuo/"/>
      <url>2021/11/18/python-zi-dong-android-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="python-自动安卓操作"><a href="#python-自动安卓操作" class="headerlink" title="python 自动安卓操作"></a>python 自动安卓操作</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近，由于某些原因，不得不在安卓上自动操作一些东西，就开始了本教程。目的就是为了用python写脚本，进而控制android手机操作一些内容，其实挺简单的，仅需要一点python基础就可以了</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>由于需要操控android,一些准备是必不可少的</p><h3 id="ADB"><a href="#ADB" class="headerlink" title="ADB"></a>ADB</h3><p><code>adb</code>是安卓调试桥，必须在PC上安装</p><p><code>adb</code>下载地址:<a href="https://developer.android.google.cn/studio/releases/platform-tools">https://developer.android.google.cn/studio/releases/platform-tools</a> </p><p><img src="image-20211118180508372.png" alt="image-20211118180508372"></p><p>选择你的操作端对应的<code>SDK</code>，然后解压复制全部文件到你希望的目录，并手动把<code>adb.exe</code> 所在目录添加到环境变量。</p><p>或者在<code>cmd</code>窗口中执行(如果目录是D:\xxxx\adb.exe)</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> <span class="built_in">PATH</span>=<span class="variable">%PATH%</span>;D:\xxxx</span><br></pre></td></tr></table></figure><p>然后可以链接手机，通过</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb devices</span><br></pre></td></tr></table></figure><p>来验证安装结果。</p><p><img src="webp.webp" alt="img"></p><h3 id="uiautomator2"><a href="#uiautomator2" class="headerlink" title="uiautomator2"></a>uiautomator2</h3><p>安装这个包就比较简单，直接使用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install --pre -U uiautomator2</span><br></pre></td></tr></table></figure><p>等待安装完成就是，其次需要注意的是，建议将pip的下载源换到国内镜像，这样下载才比较流畅</p><h3 id="android-手机环境"><a href="#android-手机环境" class="headerlink" title="android 手机环境"></a>android 手机环境</h3><p>手机链接PC后，手机上打开开发者模式，如果没有，就在系统设置中，连点4次版本号，打开开发者模式</p><p>然后开启允许USB调试，</p><p>输入adb命令<code>adb devices</code>发现设备后，表示设备链接成功。</p><p>后面在PC输入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m uiautomator2 init</span><br></pre></td></tr></table></figure><p>手机上就会安装好<code>atx-agent</code></p><h2 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h2><h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><p>因为是用python写脚本，就必须导入<code>uiautomator2</code>,</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uiautomator2 <span class="keyword">as</span> u2  <span class="comment">#依赖包</span></span><br></pre></td></tr></table></figure><p>连接方式有两种</p><ul><li><p>wifi</p><p>先获取到手机的IP，并且确保电脑可以ping通电脑</p><p>IP可以在ATX这个软件上查看，也可以在wifi设置里查看</p><p>如果手机的IP是12.222.42.001，就应该这样连接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uiautomator2 <span class="keyword">as</span> u2  </span><br><span class="line">d = u2.connect(<span class="string">&#x27;12.222.42.001&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>USB</p><p>使用usb连接就比较方便，可以通过<code>adb device</code>获取到，比如连接号是abcdefg,就该</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uiautomator2 <span class="keyword">as</span> u2</span><br><span class="line">d = u2.connect_usb(<span class="string">&#x27;abcdefg&#x27;</span>)</span><br></pre></td></tr></table></figure><p>当然了，如果pc只连接了一台手机，就可以通过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> uiautomator2 <span class="keyword">as</span> u2</span><br><span class="line">d = u2.connect()</span><br></pre></td></tr></table></figure><p>直接连接了。</p></li></ul><h3 id="简单用法"><a href="#简单用法" class="headerlink" title="简单用法"></a>简单用法</h3><ul><li><p>点击click</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d(text=<span class="string">&quot;点我&quot;</span>).click()</span><br></pre></td></tr></table></figure></li><li><p>长按long click</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d(text=<span class="string">&#x27;长按我&#x27;</span>).long_click()</span><br></pre></td></tr></table></figure></li><li><p>输入文字set text</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d(text=<span class="string">&#x27;input&#x27;</span>).set_text(<span class="string">&#x27;okk&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>检查并维持设备端守护进程处于运行状态</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.healthcheck()</span><br></pre></td></tr></table></figure></li><li><p>打开调试开关</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d.debug = <span class="literal">True</span></span><br><span class="line">d.info</span><br></pre></td></tr></table></figure></li><li><p>安装应用，只能从URL安装</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.app_install(<span class="string">&#x27;http://some-domain.com/some.txt&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>启动应用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.app_start(<span class="string">&#x27;com.eg.android.AlipayGphone&#x27;</span>) <span class="comment">#引号内为包名称，这里为支付宝</span></span><br></pre></td></tr></table></figure></li><li><p>停止应用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#相当于&#x27;am force-stop&#x27;强制停止应用</span></span><br><span class="line">d.app_stop(<span class="string">&#x27;com.eg.android.AlipayGphone&#x27;</span>) </span><br><span class="line"></span><br><span class="line"><span class="comment">#相当于&#x27;pm clear&#x27; 清空App数据</span></span><br><span class="line">d.app_clear(<span class="string">&#x27;com.eg.android.AlipayGphone&#x27;</span>)</span><br></pre></td></tr></table></figure></li><li><p>停止所有正在运行的应用程序</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 停止所有</span></span><br><span class="line">d.app_stop_all()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止所有应用程序，除了com.examples.demo</span></span><br><span class="line">d.app_stop_all(excludes=[<span class="string">&#x27;com.examples.demo&#x27;</span>])</span><br></pre></td></tr></table></figure></li><li><p>跳过弹窗，禁止弹窗</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d.disable_popups() <span class="comment"># 自动跳过弹出窗口 </span></span><br><span class="line">d.disable_popups(<span class="literal">False</span>) <span class="comment"># 禁用自动跳过弹出窗</span></span><br></pre></td></tr></table></figure></li><li><p>获取设备信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取基本信息</span></span><br><span class="line">d.info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取窗口大小</span></span><br><span class="line">print(d.window_size())</span><br><span class="line"><span class="comment"># 设备垂直输出示例: (1080, 1920)</span></span><br><span class="line"><span class="comment"># 设备水平输出示例: (1920, 1080)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取当前应用程序信息。对于某些android设备，输出可以为空</span></span><br><span class="line">print(d.current_app())</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取设备序列号</span></span><br><span class="line">print(d.serial)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取WIFI IP</span></span><br><span class="line">print(d.wlan_ip)</span><br><span class="line"></span><br><span class="line"><span class="comment">#获取详细的设备信息</span></span><br><span class="line">print(d.device_info)</span><br></pre></td></tr></table></figure></li><li><p>获取应用信息</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">d.app_info(<span class="string">&quot;com.eg.android.AlipayGphone&quot;</span>)</span><br><span class="line"><span class="comment"># 会输出</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#123;</span></span><br><span class="line"><span class="string"> &quot;packageName&quot;: &quot;com.eg.android.AlipayGphone&quot;, </span></span><br><span class="line"><span class="string"> &quot;mainActivity&quot;: &quot;com.eg.android.AlipayGphone.AlipayLogin&quot;, </span></span><br><span class="line"><span class="string"> &quot;label&quot;: &quot;支付寶&quot;, </span></span><br><span class="line"><span class="string"> &quot;versionName&quot;: &quot;10.2.13.9020&quot;, </span></span><br><span class="line"><span class="string"> &quot;versionCode&quot;: 360, </span></span><br><span class="line"><span class="string"> &quot;size&quot;: 108306104</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="comment"># 保存应用程序图标</span></span><br><span class="line">img = d.app_icon(<span class="string">&quot;com.eg.android.AlipayGphone&quot;</span>)</span><br><span class="line">img.save(<span class="string">&quot;icon.png&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>推送文件到设备</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># push文件夹</span></span><br><span class="line">d.push(<span class="string">&quot;foo.txt&quot;</span>, <span class="string">&quot;/sdcard/&quot;</span>)</span><br><span class="line"><span class="comment"># push和重命名</span></span><br><span class="line">d.push(<span class="string">&quot;foo.txt&quot;</span>, <span class="string">&quot;/sdcard/bar.txt&quot;</span>)</span><br><span class="line"><span class="comment"># push fileobj</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;foo.txt&quot;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line"> d.push(f, <span class="string">&quot;/sdcard/&quot;</span>)</span><br><span class="line"><span class="comment"># 推动和更改文件访问模式</span></span><br><span class="line">d.push(<span class="string">&quot;foo.sh&quot;</span>, <span class="string">&quot;/data/local/tmp/&quot;</span>, mode=<span class="number">0o755</span>)</span><br></pre></td></tr></table></figure></li><li><p>从设备拉取一个文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d.pull(<span class="string">&quot;/sdcard/tmp.txt&quot;</span>, <span class="string">&quot;tmp.txt&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果在设备上找不到文件，FileNotFoundError将引发</span></span><br><span class="line">d.pull(<span class="string">&quot;/sdcard/some-file-not-exists.txt&quot;</span>, <span class="string">&quot;tmp.txt&quot;</span>)</span><br></pre></td></tr></table></figure></li><li><p>打开\关闭屏幕</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">d.screen_on()＃打开屏幕 </span><br><span class="line">d.screen_off() ＃关闭屏幕</span><br></pre></td></tr></table></figure></li><li><p>获取当前屏幕状态</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">d.info.get(<span class="string">&#x27;screenOn&#x27;</span>) <span class="comment"># 需要 Android&gt; = 4.4</span></span><br></pre></td></tr></table></figure></li><li><p>硬键盘和软键盘操作</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">d.press(<span class="string">&quot;home&quot;</span>) <span class="comment"># 点击home键</span></span><br><span class="line">d.press(<span class="string">&quot;back&quot;</span>) <span class="comment"># 点击back键</span></span><br><span class="line">d.press(<span class="string">&quot;left&quot;</span>) <span class="comment"># 点击左键</span></span><br><span class="line">d.press(<span class="string">&quot;right&quot;</span>) <span class="comment"># 点击右键</span></span><br><span class="line">d.press(<span class="string">&quot;up&quot;</span>) <span class="comment"># 点击上键</span></span><br><span class="line">d.press(<span class="string">&quot;down&quot;</span>) <span class="comment"># 点击下键</span></span><br><span class="line">d.press(<span class="string">&quot;center&quot;</span>) <span class="comment"># 点击选中</span></span><br><span class="line">d.press(<span class="string">&quot;menu&quot;</span>) <span class="comment"># 点击menu按键</span></span><br><span class="line">d.press(<span class="string">&quot;search&quot;</span>) <span class="comment"># 点击搜索按键</span></span><br><span class="line">d.press(<span class="string">&quot;enter&quot;</span>) <span class="comment"># 点击enter键</span></span><br><span class="line">d.press(<span class="string">&quot;delete&quot;</span>) <span class="comment"># 点击删除按键</span></span><br><span class="line">d.press(<span class="string">&quot;recent&quot;</span>) <span class="comment"># 点击近期活动按键</span></span><br><span class="line">d.press(<span class="string">&quot;volume_up&quot;</span>) <span class="comment"># 音量+</span></span><br><span class="line">d.press(<span class="string">&quot;volume_down&quot;</span>) <span class="comment"># 音量-</span></span><br><span class="line">d.press(<span class="string">&quot;volume_mute&quot;</span>) <span class="comment"># 静音</span></span><br><span class="line">d.press(<span class="string">&quot;camera&quot;</span>) <span class="comment"># 相机</span></span><br><span class="line">d.press(<span class="string">&quot;power&quot;</span>) <span class="comment">#电源键</span></span><br></pre></td></tr></table></figure></li><li><p>解锁屏幕</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d.unlock()</span><br><span class="line"><span class="comment"># 相当于</span></span><br><span class="line"><span class="comment"># 1. 发射活动:com.github.uiautomator.ACTION_IDENTIFY</span></span><br><span class="line"><span class="comment"># 2. 按home键</span></span><br></pre></td></tr></table></figure></li><li><p>手势与设备的交互</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单击屏幕</span></span><br><span class="line">d.click(x,y) <span class="comment"># x,y为点击坐标</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 双击屏幕</span></span><br><span class="line">d.double_click(x,y)</span><br><span class="line">d.double_click(x,y,<span class="number">0.1</span>) <span class="comment"># 默认两个单击之间间隔时间为0.1秒</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 长按</span></span><br><span class="line">d.long_click(x,y)</span><br><span class="line">d.long_click(x,y,<span class="number">0.5</span>) <span class="comment"># 长按0.5秒（默认）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 滑动</span></span><br><span class="line">d.swipe(sx, sy, ex, ey)</span><br><span class="line">d.swipe(sx, sy, ex, ey, <span class="number">0.5</span>) <span class="comment">#滑动0.5s(default)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#拖动</span></span><br><span class="line">d.drag(sx, sy, ex, ey)</span><br><span class="line">d.drag(sx, sy, ex, ey, <span class="number">0.5</span>)<span class="comment">#拖动0.5s(default)</span></span><br><span class="line"><span class="comment"># 滑动点 多用于九宫格解锁，提前获取到每个点的相对坐标（这里支持百分比）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从点(x0, y0)滑到点(x1, y1)再滑到点(x2, y2)</span></span><br><span class="line"><span class="comment"># 两点之间的滑动速度是0.2秒</span></span><br><span class="line">d.swipe((x0, y0), (x1, y1), (x2, y2), <span class="number">0.2</span>)</span><br><span class="line"><span class="comment"># 注意：单击，滑动，拖动操作支持百分比位置值。例：</span></span><br><span class="line">d.long_click(<span class="number">0.5</span>, <span class="number">0.5</span>) 表示长按屏幕中心</span><br></pre></td></tr></table></figure></li><li><p>XPath</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 检索方向</span></span><br><span class="line">d.orientation</span><br><span class="line"><span class="comment"># 检索方向。输出可以是 &quot;natural&quot; or &quot;left&quot; or &quot;right&quot; or &quot;upsidedown&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置方向</span></span><br><span class="line">d.set_orientation(<span class="string">&quot;l&quot;</span>) <span class="comment"># or &quot;left&quot;</span></span><br><span class="line">d.set_orientation(<span class="string">&quot;r&quot;</span>) <span class="comment"># or &quot;right&quot;</span></span><br><span class="line">d.set_orientation(<span class="string">&quot;n&quot;</span>) <span class="comment"># or &quot;natural&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#冻结/ 开启旋转</span></span><br><span class="line">d.freeze_rotation() <span class="comment"># 冻结旋转</span></span><br><span class="line">d.freeze_rotation(<span class="literal">False</span>) <span class="comment"># 开启旋转</span></span><br><span class="line"></span><br><span class="line"><span class="comment">########## 截图 ############</span></span><br><span class="line"><span class="comment"># 截图并保存到电脑上的一个文件中，需要Android&gt;=4.2。</span></span><br><span class="line">d.screenshot(<span class="string">&quot;home.jpg&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 得到PIL.Image格式的图像. 但你必须先安装pillow</span></span><br><span class="line">image = d.screenshot() <span class="comment"># default format=&quot;pillow&quot;</span></span><br><span class="line">image.save(<span class="string">&quot;home.jpg&quot;</span>) <span class="comment"># 或&#x27;home.png&#x27;，目前只支持png 和 jpg格式的图像</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 得到OpenCV的格式图像。当然，你需要numpy和cv2安装第一个</span></span><br><span class="line"><span class="keyword">import</span> cv2</span><br><span class="line">image = d.screenshot(<span class="built_in">format</span>=<span class="string">&#x27;opencv&#x27;</span>)</span><br><span class="line">cv2.imwrite(<span class="string">&#x27;home.jpg&#x27;</span>, image)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 获取原始JPEG数据</span></span><br><span class="line">imagebin = d.screenshot(<span class="built_in">format</span>=<span class="string">&#x27;raw&#x27;</span>)</span><br><span class="line"><span class="built_in">open</span>(<span class="string">&quot;some.jpg&quot;</span>, <span class="string">&quot;wb&quot;</span>).write(imagebin)</span><br><span class="line"></span><br><span class="line"><span class="comment">#############################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 转储UI层次结构</span></span><br><span class="line"><span class="comment"># get the UI hierarchy dump content (unicoded).（获取UI层次结构转储内容）</span></span><br><span class="line">d.dump_hierarchy()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打开通知或快速设置</span></span><br><span class="line">d.open_notification() <span class="comment">#下拉打开通知栏</span></span><br><span class="line">d.open_quick_settings() <span class="comment">#下拉打开快速设置栏</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查特定的UI对象是否存在</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).exists <span class="comment"># 返回布尔值，如果存在则为True，否则为False</span></span><br><span class="line">d.exists(text=<span class="string">&quot;Settings&quot;</span>) <span class="comment"># 另一种写法</span></span><br><span class="line"><span class="comment"># 高级用法</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).exists(timeout=<span class="number">3</span>) <span class="comment"># 等待&#x27;Settings&#x27;在3秒钟出现</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取特定UI对象的信息</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).info</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取/设置/清除可编辑字段的文本(例如EditText小部件)</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).get_text() <span class="comment">#得到文本小部件</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).set_text(<span class="string">&quot;My text...&quot;</span>) <span class="comment">#设置文本</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).clear_text() <span class="comment">#清除文本</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取Widget中心点</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).center()</span><br><span class="line"><span class="comment">#d(text=&quot;Settings&quot;).center(offset=(0, 0)) # 基准位置左前</span></span><br></pre></td></tr></table></figure></li><li><p>UI对象</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># text、resourceId、description、className、xpath、坐标</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行单击UI对象</span></span><br><span class="line"><span class="comment">#text定位单击</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).click()</span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>, className=<span class="string">&quot;android.widget.TextView&quot;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment">#resourceId定位单击</span></span><br><span class="line">d(resourceId=<span class="string">&quot;com.ruguoapp.jike:id/tv_title&quot;</span>, className=<span class="string">&quot;android.widget.TextView&quot;</span>).click() </span><br><span class="line"></span><br><span class="line"><span class="comment">#description定位单击</span></span><br><span class="line">d(description=<span class="string">&quot;设置&quot;</span>).click()</span><br><span class="line">d(description=<span class="string">&quot;设置&quot;</span>, className=<span class="string">&quot;android.widget.TextView&quot;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment">#className定位单击</span></span><br><span class="line">d(className=<span class="string">&quot;android.widget.TextView&quot;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment">#xpath定位单击</span></span><br><span class="line">d.xpath(<span class="string">&quot;//android.widget.FrameLayout[@index=&#x27;0&#x27;]/android.widget.LinearLayout[@index=&#x27;0&#x27;]&quot;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment">#坐标单击</span></span><br><span class="line">d.click(<span class="number">182</span>, <span class="number">1264</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待元素出现(最多10秒），出现后单击 </span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).click(timeout=<span class="number">10</span>)</span><br><span class="line"><span class="comment"># 在10秒时点击，默认的超时0</span></span><br><span class="line">d(text=<span class="string">&#x27;Skip&#x27;</span>).click_exists(timeout=<span class="number">10.0</span>)</span><br><span class="line"><span class="comment"># 单击直到元素消失，返回布尔</span></span><br><span class="line">d(text=<span class="string">&quot;Skip&quot;</span>).click_gone(maxretry=<span class="number">10</span>, interval=<span class="number">1.0</span>) <span class="comment"># maxretry默认值10,interval默认值1.0</span></span><br><span class="line"><span class="comment"># 点击基准位置偏移</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).click(offset=(<span class="number">0.5</span>, <span class="number">0.5</span>)) <span class="comment"># 点击中心位置，同d(text=&quot;Settings&quot;).click()</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).click(offset=(<span class="number">0</span>, <span class="number">0</span>)) <span class="comment"># 点击左前位置</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).click(offset=(<span class="number">1</span>, <span class="number">1</span>)) <span class="comment"># 点击右下</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行双击UI对象</span></span><br><span class="line">d(text=<span class="string">&quot;设置&quot;</span>).double_click() <span class="comment"># 双击特定ui对象的中心</span></span><br><span class="line">d.double_click(x, y, <span class="number">0.1</span>) <span class="comment"># 两次单击之间的默认持续时间为0.1秒</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#执行长按UI对象</span></span><br><span class="line"><span class="comment"># 长按特定UI对象的中心</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).long_click()</span><br><span class="line">d.long_click(x, y, <span class="number">0.5</span>) <span class="comment"># 长按坐标位置0.5s默认</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 将UI对象拖向另一个点或另一个UI对象</span></span><br><span class="line"><span class="comment"># Android&lt;4.3不能使用drag.</span></span><br><span class="line"><span class="comment"># 在0.5秒内将UI对象拖到屏幕点(x, y)</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).drag_to(x, y, duration=<span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将UI对象拖到另一个UI对象的中心位置，时间为0.25秒</span></span><br><span class="line">d(text=<span class="string">&quot;Settings&quot;</span>).drag_to(text=<span class="string">&quot;Clock&quot;</span>, duration=<span class="number">0.25</span>)</span><br></pre></td></tr></table></figure></li><li><p>example</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 等待10s</span></span><br><span class="line">d.xpath(<span class="string">&quot;//android.widget.TextView&quot;</span>).wait(<span class="number">10.0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 找到并单击</span></span><br><span class="line">d.xpath(<span class="string">&quot;//*[@content-desc=&#x27;分享&#x27;]&quot;</span>).click()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查是否存在</span></span><br><span class="line"><span class="keyword">if</span> d.xpath(<span class="string">&quot;//android.widget.TextView[contains(@text, &#x27;Se&#x27;)]&quot;</span>).exists:</span><br><span class="line"> print(<span class="string">&quot;exists&quot;</span>)</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 获取所有文本视图文本、属性和中心点</span></span><br><span class="line"><span class="keyword">for</span> elem <span class="keyword">in</span> d.xpath(<span class="string">&quot;//android.widget.TextView&quot;</span>).<span class="built_in">all</span>():</span><br><span class="line"> print(<span class="string">&quot;Text:&quot;</span>, elem.text)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#获取视图文本</span></span><br><span class="line"><span class="keyword">for</span> elem <span class="keyword">in</span> d.xpath(<span class="string">&quot;//android.widget.TextView&quot;</span>).<span class="built_in">all</span>():</span><br><span class="line"> print(<span class="string">&quot;Attrib:&quot;</span>, elem.attrib)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#获取属性和中心点</span></span><br><span class="line"><span class="comment">#返回: (100, 200)</span></span><br><span class="line"><span class="keyword">for</span> elem <span class="keyword">in</span> d.xpath(<span class="string">&quot;//android.widget.TextView&quot;</span>).<span class="built_in">all</span>():</span><br><span class="line"> print(<span class="string">&quot;Position:&quot;</span>, elem.center())</span><br><span class="line"></span><br><span class="line"><span class="comment"># xpath常见用法：</span></span><br><span class="line"><span class="comment"># 所有元素</span></span><br><span class="line">//*</span><br><span class="line"></span><br><span class="line"><span class="comment"># resource-id包含login字符</span></span><br><span class="line">//*[contains(@resource-<span class="built_in">id</span>, <span class="string">&#x27;login&#x27;</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 按钮包含账号或帐号</span></span><br><span class="line">//android.widget.Button[contains(@text, <span class="string">&#x27;账号&#x27;</span>) <span class="keyword">or</span> contains(@text, <span class="string">&#x27;帐号&#x27;</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有ImageView中的第二个</span></span><br><span class="line">(//android.widget.ImageView)[<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 所有ImageView中的最后一个</span></span><br><span class="line">(//android.widget.ImageView)[last()]</span><br><span class="line"></span><br><span class="line"><span class="comment"># className包含ImageView</span></span><br><span class="line">//*[contains(name(), <span class="string">&quot;ImageView&quot;</span>)]</span><br></pre></td></tr></table></figure></li><li><p>其它</p><p>更多用法 <a href="https://github.com/openatx/uiautomator2">https://github.com/openatx/uiautomator2</a></p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>简单理解栈溢出</title>
      <link href="2021/10/27/jian-dan-li-jie-zhan-yi-chu/"/>
      <url>2021/10/27/jian-dan-li-jie-zhan-yi-chu/</url>
      
        <content type="html"><![CDATA[<h1 id="简单理解栈溢出"><a href="#简单理解栈溢出" class="headerlink" title="简单理解栈溢出"></a>简单理解栈溢出</h1><p>今天，发现了一个简单的程序（其实也不简单哈），首先，拿到了这个程序，是<code>exe</code>的，能在win运行，这点应该没问题，都是对未知的探索，然后，就点开了它，它的效果如下：</p><p><img src="helloworld.png" alt="helloworld"></p><p>这，？？？？，怎么全是“Hello Word”,盲猜，这个程序的作者写了一个无限的循环语句，当然，先关闭这个程序。</p><h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>把它拖到IDA中，反编译，查看一下它的伪代码，很快，就找到了Hello World的输出地方</p><p><img src="for.png" alt="for"></p><p>的确啊，很快可以看出，Hello Word是从<code>for循环</code>的<code>puts</code>函数输出的，可是，为啥它会无限输出，不应该当i的数值通过<code>i++</code>到7就结束了吗？为何不会是预期效果。</p><p>首先，理解一下程序，了解一下这个程序的目的，从根源上找到这个问题的原因。</p><ul><li>第一行声明了一个int类型的数组arr，声明里面有6个元素</li><li>第二行就是简单的声明了一个int类型的<code>i</code>,整型</li><li>第六至十一行代码的作用是逐个对数组arr的下标为0-5的元素，分别赋值为0,1,2,3,4,5</li><li>第12到17行，就是一个for循环的代码块，并且第12行对for的循环做出了条件限制，<ol><li>设置<code>i</code>的数值为<code>0</code></li><li>条件是<code>i</code>的大小 小于等于<code>7</code>的时候就执行循环语句</li><li>每一次循环以后对i的数值加一</li></ol></li><li>在for的代码块里，每一次循环，将数组的下标为i的元素的值改为0，并且输出Hello World</li></ul><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>了解了这个函数的代码，可它到底有啥问题呢？</p><p>其实也很简单：</p><ul><li>它声明了一个数组，但是只设置了6个元素的容纳空间</li><li>在<code>for循环</code>里，i的数值能够通过<code>++i</code>到<code>6</code>,<code>7</code>，然后再对<code>arr</code>的第6，7的元素赋值为<code>0</code></li><li>问题就是<code>arr</code>数组的空间只有<code>6</code>个，对下标元素为1至6赋值为0没有问题，可是对第7个元素赋值呢</li><li>简单点来说，就是对一个不存在的元素赋值，并且设置为0，代码赋值成功了</li></ul><p>对于这个不存在的7号元素赋值，事实上是不存在的，赋值到哪里去了呢？</p><p>这也不难，答案是赋值给了i,就是说，用</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arr[<span class="number">7</span>]=<span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>然而，结果却是</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">i=<span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>要知道，这个<code>i</code>在第7次循环中，它的数值是<code>7</code>，在执行了<code>arr[i]=0</code>后，i就等于0了，然后i在下一次的for循环的判断<code>i&lt;=7</code>就满足条件，进而开启了下一次，再下一次的循环，输出无限的Hello World</p><h2 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h2><p>解释一下原因</p><p>声明函数里面的变量，都是从高地址到低地址建立的，</p><p><img src="c.jpg" alt="c"></p><p>由此先后入栈，而题目的<code>arr</code>，<code>i</code>，也是遵循这个原理,不过数组声明了它的长度，也就是6个，可是for循环超出了6，用<code>arr[7]=0</code>向arr写入数据，但是写到了与arr相邻的i上面，从而表现出了数据从arr的高地址，溢出到了与arr相邻的低地址i，所以数据溢出后，i就变成了0，而不是arr的第7个元素变成了0。内存中没有第7个元素存在，与第6个元素相邻的就是它的下一个变量i对应的地址。</p><p><img src="adress.png" alt="adress"></p><p>图中的arr与i的地址是相邻的，所以数据超出了arr的6的范围，就溢出到了i</p><p>然后就是开始图示的无限的Hello World 的循环。</p><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>本文如有问题，请指正。</p><p>程序来源：道格安全</p><p>本文by：<a href="mailto:&#x71;&#x69;&#117;&#107;&#101;&#115;&#64;&#56;&#x38;&#x2e;&#x63;&#x6f;&#109;">&#x71;&#x69;&#117;&#107;&#101;&#115;&#64;&#56;&#x38;&#x2e;&#x63;&#x6f;&#109;</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一招解决Android上Z3的安装问题</title>
      <link href="2021/10/26/yi-zhao-jie-jue-android-shang-z3-de-an-zhuang-wen-ti/"/>
      <url>2021/10/26/yi-zhao-jie-jue-android-shang-z3-de-an-zhuang-wen-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>最近，我发现了一个神器，它能够解决很多的数学问题，简直是数学学生的福音，当然了，它的功能也十分强大，它可以解很多具有约束条件的方程，不仅支持简单的四则混合，同时也支持位域的运算求解方程。下面就讲讲其在Android上的安装方式。</p><h1 id="误区"><a href="#误区" class="headerlink" title="误区"></a>误区</h1><p>首先，在Android上，要想使用Z3，还真是不简单，肯定需要准备工具，termux,一般认为就是简单的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install z3-solver</span><br></pre></td></tr></table></figure><p>可能也可以，不过失败率高。</p><h1 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h1><p>首先用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;angr&#x2F;z3.git</span><br></pre></td></tr></table></figure><p>下载到本地，手动下载也可以。<br>然后，cd进入z3目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd z3</span><br></pre></td></tr></table></figure><p>接下来执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python scripts&#x2F;mk_make.py</span><br></pre></td></tr></table></figure><p>然后，经过漫长的等待</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd build; make</span><br></pre></td></tr></table></figure><p>又是等待，接下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo make install</span><br></pre></td></tr></table></figure><p>手机没有root,就用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">proot make install</span><br></pre></td></tr></table></figure><blockquote><p>没root，需要下载 proot</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install proot</span><br></pre></td></tr></table></figure><p>安装完成后，就可以输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python</span><br></pre></td></tr></table></figure><p>然后输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">from z3 import *</span><br></pre></td></tr></table></figure><p>如果不报错，你就成功了<br>本教程Linux也适用。</p><p>z3项目地址：<a href="https://github.com/Z3Prover/z3">https://github.com/Z3Prover/z3</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>极客大挑战geek2021-Wp</title>
      <link href="2021/10/16/ji-ke-da-tiao-zhan-geek2021-wp/"/>
      <url>2021/10/16/ji-ke-da-tiao-zhan-geek2021-wp/</url>
      
        <content type="html"><![CDATA[<h1 id="Geek2021前言"><a href="#Geek2021前言" class="headerlink" title="Geek2021前言"></a>Geek2021前言</h1><p>参加了极客大挑战2021年的比赛，以下是我能做出来的一些题目，最终获得极客大挑战2021第六名，还不错，优胜奖。记录一下解题方法。</p><h1 id="Geek2021-web"><a href="#Geek2021-web" class="headerlink" title="Geek2021-web"></a>Geek2021-web</h1><h2 id="babyphp"><a href="#babyphp" class="headerlink" title="babyphp"></a>babyphp</h2><p><img src="image-20211114152825128.png" alt="image-20211114152825128"></p><ul><li><p>查看源码<img src="image-20211114152934200.png" alt="image-20211114152934200"></p></li><li><p>查看robots.txt</p><p><img src="image-20211114153136345.png" alt="image-20211114153136345"></p></li><li><p>查看noobcurl.php</p><p><img src="image-20211114153410785.png" alt="image-20211114153410785"></p></li><li><p>根目录便是 noobcurl.php?url=file:///flag</p><p><img src="image-20211114153554104.png" alt="image-20211114153554104"></p></li></ul><h2 id="babyPy"><a href="#babyPy" class="headerlink" title="babyPy"></a>babyPy</h2><p><img src="image-20211114153816781.png" alt="image-20211114153816781"></p><ul><li><p>打开链接</p><p><img src="image-20211114154047620.png" alt="image-20211114154047620"></p></li><li><p>构造<code>&#123;&#123;request.__init__.__globals__[ '__builtins__'].open( '/flag'). read()&#125;&#125;</code></p><p><img src="image-20211114160619460.png" alt="image-20211114160619460"></p></li><li><p>可以得到</p><p><img src="image-20211114160655866.png" alt="image-20211114160655866"></p></li></ul><h2 id="蜜雪冰城甜蜜蜜"><a href="#蜜雪冰城甜蜜蜜" class="headerlink" title="蜜雪冰城甜蜜蜜"></a>蜜雪冰城甜蜜蜜</h2><p><img src="image-20211114154913884.png" alt="image-20211114154913884"></p><p>这个题也很简单，后面的js脚本使用的是id（看得懂jq就行）</p><p><img src="image-20211114155347029.png" alt="image-20211114155347029"></p><p>任意改一下id就行，改为9再点击。（当然用jq的<code>$(&quot;[href]=&#39;#&#39;&quot;).attr(&quot;id&quot;,&quot;9&quot;) </code>把id全部改为9也行，但是要油猴脚本，纯js也可以）</p><p><img src="image-20211114155056420.png" alt="image-20211114155056420"></p><p>下面就是点击了</p><p><img src="image-20211114160022434.png" alt="image-20211114160022434"></p><h2 id="babyxss"><a href="#babyxss" class="headerlink" title="babyxss"></a>babyxss</h2><p><img src="image-20211114154804065.png" alt="image-20211114154804065"></p><p>这个题很简单，js中的replace函数只能替换一个，所以直接</p><p><img src="image-20211114154534615.png" alt="image-20211114154534615"></p><p><img src="image-20211114090206226.png" alt="image-20211114090206226"></p><p><img src="image-20211114090729704.png" alt="image-20211114090729704"></p><h1 id="Geek2021-re"><a href="#Geek2021-re" class="headerlink" title="Geek2021-re"></a>Geek2021-re</h1><h2 id="RE0"><a href="#RE0" class="headerlink" title="RE0"></a>RE0</h2><p>说逆向，那就一定有一个第一个练手的程序，re0就是一个题，出题人也太好了，连学习视频也有，那就是IDA的入门。</p><p><img src="3.png" alt="3"></p><p>下载运行程序，就可以看到，不知道输入什么，就可以按照提示一步步操作<img src="re0.png" alt="re0"></p><p>用IDA打开链接里面的程序文件，就可以按键shift+F12就会有奇迹出现</p><p><img src="re0un.png" alt="re0un"></p><p>然后，肯定知道输入什么了，<img src="2F5B68B6.png" alt="img">，就这样入门一个逆向题就有了100分。</p><h2 id="刘壮桌面美化大师"><a href="#刘壮桌面美化大师" class="headerlink" title="刘壮桌面美化大师"></a>刘壮桌面美化大师</h2><p>首先，看一下题，啊这，这是一道android题，既然是入门，也是比较简单<img src="beautiful.png" alt="beautiful"></p><p>下载以后，先运行，先说一下比较简单的方法，毕竟它是一道签到题（起初，反正我没有这样做，用apktool逆向出来了，然后可以在string资源查到这个flag)，签到嘛，肯定很简单，能看懂android源码的人应该知道，它就是往桌面添加了一个小控件，所以，把它安装好后，在你的手机桌面，找一下添加桌面控件的地方，<img src="5.3.jpg" alt="5.3"></p><p>就可以看到一个神奇的控件,点击添加到桌面，它就会<img src="5.4.jpg" alt="5.4"></p><p>还有一个方法，就是使用mt管理器，里面可以看到关于apk的很多信息,没有加固，可以直接反编译的哈</p><p><img src="5.1.jpg" alt="5.1">在点击查看，手机上搜索apk里的resource.arsc文件，就可得到</p><p><img src="5.2.png" alt="5.2"></p><p>对了，mt管理器是要会员的哈，到这里就对它有了一个apk了解</p><h2 id="买activity"><a href="#买activity" class="headerlink" title="买activity"></a>买activity</h2><p>先看题，100分，也是一个简单题</p><p><img src="6.jpg" alt="6"></p><p>下载apk文件，然后安装</p><p><img src="6.1.jpg" alt="6.1"></p><p>这界面也是比较魔性了，就是一个聊天窗口，对话还是挺有意思的，不说了，直接看解题思路</p><p>这题专业点可以反编译，读一下它的源码，能够发现它的一个activity没有intent入口，就是对话中的买activity,送一个exportedActivity,这个题我也是在手机上完成的，说一下</p><ul><li>先用mt管理器查看它的送的exportedActivity路径，就是查看AndroidManifest.xml文件，知识点就是android一个activity要启动，就必须在这个文件里面注册activity,<img src="6.2.png" alt="6.2"></li></ul><p>可以看到有androidManifest.xml声明了两个activitty,一个是可以从桌面作为入口的MainActivity,另一个ExportedActivity可以看到没有配置启动入口,同时配置了exported属性，意味着就可以被别的应用打开，当然不配置这一属性，自己用intent跳转也可以，不过ta自己没有做，所以我们就直接自己启动这一个exportedActivity</p><p>可以下载一些可以强制启动窗口的软件，也可以像我一样，自己写一个intent来启动，为了方便就用了手机上的AIDE写了一个intent启动activity</p><p><img src="6.3.jpg" alt="6.3"></p><p>买activity这个软件的包名和exportedActivity的类名可以在AndroidManifest.xml清单中看到，写好代码就可以编译安装了，先打开一下 买activity软件，然后启动这个新编译安装的app,就是结果</p><p><img src="6.4.jpg" alt="6.4"></p><p>总结一下，就是这题了解Android应用的结构，还是不难啊</p><h2 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h2><p>话不过说，先看一下题<img src="7.png" alt="7"></p><p>下载了这个题，感觉应该简单，可（一言难尽），这题其实就是考对软件IDA的熟悉运用。这个文件需要在Linux上运行，就肯定不能用手机完成了，Linux就只能用虚拟机，这里用VMware安装Ubuntu运行，采用IDA的远程调试，当然如果有IDA for Linux也可以。</p><p>具体远程调试IDA就不用讲了，直接开始吧。在linux里命令启动linux_server64,</p><p><img src="7.1.png" alt="7.1"></p><p>然后打开IDA在debugger里面选择，run-&gt;remote linux debugger</p><p><img src="7.2.png" alt="7.2"></p><p>运行在linux里面的ts程序，看一下start函数，有这么多汇编指令，前面的几乎没什么用，看一下函数sub_561288F35590点进去看一下，啥都没有<img src="2FD06F16.png" alt="img">，</p><p><img src="7.3.png" alt="7.3"></p><p>然后看一下下面的sub_561288F35520函数，这里面东西可不少<img src="2FD2014E.png" alt="img">，不过F5后，也是啥都没有，没用。只能看一下sub_561288F35364函数了，通过一通乱调试过后，唯一发现有用的信息只有一个字符串</p><p><img src="7.4.png" alt="7.4"></p><p>，还有一个函数，</p><p><img src="7.5.png" alt="7.5"></p><p>初看一下，不知道，熟悉就会知道，这个函数就是对字符串进行base58解密，这题就是一个自解密的过程，抱着猜的思想，可以把字符串“797G91WhVFeM465FoGJuWpHKDro2QyCixboJV7uhVAV…..”直接复制到在线base58解密的网站，一键解密就可以获得flag，当然了，base85,64,32其它也可以试试，就是文本特征不太符合。其次，看到这串字符串，它也符合一定的base58编码后的文本特征，也可以想到，前提是要了解。</p><p><img src="7.6.png" alt="7.6"></p><p>哈哈，多看一些加密解密的函数还是有用的，即使自己不会，在线工具也会帮忙解决一些问题。</p><p>链接：<a href="http://www.metools.info/code/c74.html">在线base58解码</a></p><h2 id="珍惜生命"><a href="#珍惜生命" class="headerlink" title="珍惜生命"></a>珍惜生命</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211114131153721.png" alt="image-20211114131153721"></p><h3 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h3><p>一个easypyc.pyc文件</p><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><ul><li><p>就是一个pyc的二进制文件，把它放进在线pyc反编译工具可以得到它的python源码</p></li><li><p>然后使用z3进行解密 ，先解出<code>key</code>为“S&amp;yc@-6”,然后再使用z3解出flag，需要特别说明一下解出的key有多个值，需要验证</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">key=[BitVec(<span class="string">&#x27;vi[%d]&#x27;</span>%i, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>)]</span><br><span class="line">S=Solver()</span><br><span class="line">KEY_cmp =[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="string">&quot;Syclover&quot;</span>:</span><br><span class="line">KEY_cmp.append(<span class="built_in">ord</span>(i))</span><br><span class="line"></span><br><span class="line">S.add(KEY_cmp[<span class="number">0</span>] ==</span><br><span class="line">​        (</span><br><span class="line">​          key[<span class="number">1</span>] * key[<span class="number">2</span>] - key[<span class="number">5</span>] * <span class="number">72</span> - key[<span class="number">4</span>] * <span class="number">3</span> - key[<span class="number">3</span>]</span><br><span class="line">​          ^ key[<span class="number">1</span>] + (key[<span class="number">3</span>] &lt;&lt; <span class="number">2</span>) + key[<span class="number">2</span>] * <span class="number">6</span> - key[<span class="number">7</span>] &amp; key[<span class="number">6</span>] - <span class="number">1000</span></span><br><span class="line">​        )</span><br><span class="line">​        \- <span class="number">14</span></span><br><span class="line">​      )</span><br><span class="line">S.add(KEY_cmp[<span class="number">1</span>] ==</span><br><span class="line">​        (</span><br><span class="line">​          key[<span class="number">5</span>] * <span class="number">7</span> + key[<span class="number">3</span>] * <span class="number">3</span> + key[<span class="number">2</span>] + key[<span class="number">6</span>] - (key[<span class="number">2</span>] &gt;&gt; <span class="number">2</span>) - key[<span class="number">1</span>]</span><br><span class="line">​          ^ key[<span class="number">0</span>] + key[<span class="number">7</span>] + (key[<span class="number">4</span>] ^ key[<span class="number">1</span>]) + (key[<span class="number">4</span>] | key[<span class="number">7</span>])</span><br><span class="line">​        )</span><br><span class="line">​        \- <span class="number">801</span></span><br><span class="line">​      )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">S.add(KEY_cmp[<span class="number">2</span>] ==</span><br><span class="line">​        (</span><br><span class="line">​          (key[<span class="number">6</span>] * <span class="number">5</span> + key[<span class="number">2</span>] * <span class="number">6</span> - key[<span class="number">3</span>] * <span class="number">7</span>) + key[<span class="number">4</span>]</span><br><span class="line">​          | key[<span class="number">5</span>] + key[<span class="number">4</span>] * <span class="number">10</span> + key[<span class="number">0</span>]</span><br><span class="line">​          ^ (key[<span class="number">1</span>] * <span class="number">3</span> - key[<span class="number">7</span>]) + key[<span class="number">0</span>] + key[<span class="number">1</span>]</span><br><span class="line">​        )</span><br><span class="line">​        \- <span class="number">924</span></span><br><span class="line">​      )</span><br><span class="line"></span><br><span class="line">S.add(KEY_cmp[<span class="number">3</span>] ==</span><br><span class="line">​        (</span><br><span class="line">​          key[<span class="number">1</span>] * <span class="number">3</span></span><br><span class="line">​          \+ key[<span class="number">5</span>] * <span class="number">9</span></span><br><span class="line">​          \+ key[<span class="number">0</span>]</span><br><span class="line">​          \+ key[<span class="number">2</span>] * <span class="number">2</span></span><br><span class="line">​          \+ key[<span class="number">3</span>] * <span class="number">5</span></span><br><span class="line">​          \- key[<span class="number">4</span>] * (key[<span class="number">6</span>] ^ key[<span class="number">7</span>])</span><br><span class="line">​        )</span><br><span class="line">​        \+ <span class="number">321</span></span><br><span class="line">​        \- <span class="number">16</span></span><br><span class="line">​      )</span><br><span class="line"></span><br><span class="line">S.add(KEY_cmp[<span class="number">4</span>] ==</span><br><span class="line">​        (</span><br><span class="line">​          key[<span class="number">5</span>] * <span class="number">12</span> - key[<span class="number">0</span>]</span><br><span class="line">​          ^ (</span><br><span class="line">​            (key[<span class="number">6</span>] - key[<span class="number">3</span>] * <span class="number">23</span>)</span><br><span class="line">​            \+ key[<span class="number">4</span>] * <span class="number">3</span></span><br><span class="line">​            \+ key[<span class="number">2</span>] * <span class="number">8</span></span><br><span class="line">​            \+ key[<span class="number">1</span>]</span><br><span class="line">​            \- key[<span class="number">7</span>] * <span class="number">2</span></span><br><span class="line">​          )</span><br><span class="line">​          \+ key[<span class="number">6</span>] * <span class="number">4</span></span><br><span class="line">​          \+ <span class="number">1324</span></span><br><span class="line">​        )</span><br><span class="line">​        \+ <span class="number">1</span></span><br><span class="line">​      )</span><br><span class="line"></span><br><span class="line">S.add(KEY_cmp[<span class="number">5</span>] ==</span><br><span class="line">​        (</span><br><span class="line">​          ((key[<span class="number">3</span>] * <span class="number">54</span> - key[<span class="number">1</span>] * <span class="number">3</span>) + key[<span class="number">2</span>] * <span class="number">3</span> + key[<span class="number">4</span>] * <span class="number">11</span> - key[<span class="number">5</span>] * <span class="number">2</span>)</span><br><span class="line">​          \+ key[<span class="number">0</span>]</span><br><span class="line">​          \+ key[<span class="number">7</span>] * <span class="number">3</span></span><br><span class="line">​          \- key[<span class="number">6</span>]</span><br><span class="line">​          \- <span class="number">6298</span></span><br><span class="line">​        )</span><br><span class="line">​        \+ <span class="number">40</span></span><br><span class="line">​      )</span><br><span class="line"></span><br><span class="line">S.add(KEY_cmp[<span class="number">6</span>] ==</span><br><span class="line">​        (</span><br><span class="line">​          ((key[<span class="number">7</span>] - key[<span class="number">6</span>] * key[<span class="number">3</span>]) + key[<span class="number">2</span>] * key[<span class="number">2</span>] - key[<span class="number">4</span>] * <span class="number">32</span>)</span><br><span class="line">​          \+ key[<span class="number">5</span>] * (key[<span class="number">0</span>] &gt;&gt; <span class="number">2</span>)</span><br><span class="line">​          \- key[<span class="number">1</span>] * key[<span class="number">1</span>]</span><br><span class="line">​          \- <span class="number">6689</span></span><br><span class="line">​        )</span><br><span class="line">​        \+ <span class="number">41</span></span><br><span class="line">​      )</span><br><span class="line">S.add(KEY_cmp[<span class="number">7</span>] ==</span><br><span class="line">​        (</span><br><span class="line">​          (key[<span class="number">5</span>] - key[<span class="number">3</span>] * <span class="number">41</span>) + key[<span class="number">6</span>] * <span class="number">41</span> + key[<span class="number">5</span>]</span><br><span class="line">​          ^ ((key[<span class="number">4</span>] &amp; key[<span class="number">6</span>] | key[<span class="number">0</span>]) - (key[<span class="number">7</span>] * <span class="number">24</span> | key[<span class="number">2</span>]))</span><br><span class="line">​          \+ key[<span class="number">1</span>]</span><br><span class="line">​          \- <span class="number">589</span></span><br><span class="line">​        )</span><br><span class="line">​        \- <span class="number">36</span></span><br><span class="line">​      )</span><br><span class="line">​        </span><br><span class="line"></span><br><span class="line">o=[]</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(S.check()==sat):</span><br><span class="line">condition = []</span><br><span class="line">m = S.model()</span><br><span class="line">p=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">8</span>):</span><br><span class="line">p+=<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&quot;%s&quot;</span> % (m[key[i]])))</span><br><span class="line">condition.append(key[i]!=<span class="built_in">int</span>(<span class="string">&quot;%s&quot;</span> % (m[key[i]])))</span><br><span class="line">print(p)</span><br><span class="line">o.append(p)</span><br><span class="line">S.add(Or(condition))</span><br><span class="line"><span class="comment">#列举出所有可能</span></span><br><span class="line"></span><br><span class="line">key_cmp = <span class="string">&quot;&quot;</span>   </span><br><span class="line">Key=<span class="string">&quot;S&amp;yc@-6.&quot;</span><span class="comment">#发现这一个是对的,后面是测试代码</span></span><br><span class="line">key = []   </span><br><span class="line"><span class="keyword">if</span> <span class="number">1</span>==<span class="number">1</span>:         </span><br><span class="line">​      KEY_cmp = <span class="string">&quot;Syclover&quot;</span></span><br><span class="line">​      key_cmp = <span class="string">&quot;&quot;</span></span><br><span class="line">​      <span class="keyword">for</span> i <span class="keyword">in</span> Key:</span><br><span class="line">​        key.append(<span class="built_in">ord</span>(i))   </span><br><span class="line">​      key_cmp += <span class="built_in">chr</span>(</span><br><span class="line">​        (</span><br><span class="line">​          key[<span class="number">1</span>] * key[<span class="number">2</span>] - key[<span class="number">5</span>] * <span class="number">72</span> - key[<span class="number">4</span>] * <span class="number">3</span> - key[<span class="number">3</span>]</span><br><span class="line">​          ^ key[<span class="number">1</span>] + (key[<span class="number">3</span>] &lt;&lt; <span class="number">2</span>) + key[<span class="number">2</span>] * <span class="number">6</span> - key[<span class="number">7</span>] &amp; key[<span class="number">6</span>] - <span class="number">1000</span></span><br><span class="line">​        )</span><br><span class="line">​        \- <span class="number">14</span></span><br><span class="line">​      )</span><br><span class="line">​      key_cmp += <span class="built_in">chr</span>(</span><br><span class="line">​        (</span><br><span class="line">​          key[<span class="number">5</span>] * <span class="number">7</span> + key[<span class="number">3</span>] * <span class="number">3</span> + key[<span class="number">2</span>] + key[<span class="number">6</span>] - (key[<span class="number">2</span>] &gt;&gt; <span class="number">2</span>) - key[<span class="number">1</span>]</span><br><span class="line">​          ^ key[<span class="number">0</span>] + key[<span class="number">7</span>] + (key[<span class="number">4</span>] ^ key[<span class="number">1</span>]) + (key[<span class="number">4</span>] | key[<span class="number">7</span>])</span><br><span class="line">​        )</span><br><span class="line">​        \- <span class="number">801</span></span><br><span class="line">​      )</span><br><span class="line">​      key_cmp += <span class="built_in">chr</span>(</span><br><span class="line">​        (</span><br><span class="line">​          (key[<span class="number">6</span>] * <span class="number">5</span> + key[<span class="number">2</span>] * <span class="number">6</span> - key[<span class="number">3</span>] * <span class="number">7</span>) + key[<span class="number">4</span>]</span><br><span class="line">​          | key[<span class="number">5</span>] + key[<span class="number">4</span>] * <span class="number">10</span> + key[<span class="number">0</span>]</span><br><span class="line">​          ^ (key[<span class="number">1</span>] * <span class="number">3</span> - key[<span class="number">7</span>]) + key[<span class="number">0</span>] + key[<span class="number">1</span>]</span><br><span class="line">​        )</span><br><span class="line">​        \- <span class="number">924</span></span><br><span class="line">​      )</span><br><span class="line">​      key_cmp += <span class="built_in">chr</span>(</span><br><span class="line">​        (</span><br><span class="line">​          key[<span class="number">1</span>] * <span class="number">3</span></span><br><span class="line">​          \+ key[<span class="number">5</span>] * <span class="number">9</span></span><br><span class="line">​          \+ key[<span class="number">0</span>]</span><br><span class="line">​          \+ key[<span class="number">2</span>] * <span class="number">2</span></span><br><span class="line">​          \+ key[<span class="number">3</span>] * <span class="number">5</span></span><br><span class="line">​          \- key[<span class="number">4</span>] * (key[<span class="number">6</span>] ^ key[<span class="number">7</span>])</span><br><span class="line">​        )</span><br><span class="line">​        \+ <span class="number">321</span></span><br><span class="line">​        \- <span class="number">16</span></span><br><span class="line">​      )</span><br><span class="line">​      key_cmp += <span class="built_in">chr</span>(</span><br><span class="line">​        (</span><br><span class="line">​          key[<span class="number">5</span>] * <span class="number">12</span> - key[<span class="number">0</span>]</span><br><span class="line">​          ^ (</span><br><span class="line">​            (key[<span class="number">6</span>] - key[<span class="number">3</span>] * <span class="number">23</span>)</span><br><span class="line">​            \+ key[<span class="number">4</span>] * <span class="number">3</span></span><br><span class="line">​            \+ key[<span class="number">2</span>] * <span class="number">8</span></span><br><span class="line">​            \+ key[<span class="number">1</span>]</span><br><span class="line">​            \- key[<span class="number">7</span>] * <span class="number">2</span></span><br><span class="line">​          )</span><br><span class="line">​          \+ key[<span class="number">6</span>] * <span class="number">4</span></span><br><span class="line">​          \+ <span class="number">1324</span></span><br><span class="line">​        )</span><br><span class="line">​        \+ <span class="number">1</span></span><br><span class="line">​      )</span><br><span class="line">​      key_cmp += <span class="built_in">chr</span>(</span><br><span class="line">​        (</span><br><span class="line">​          ((key[<span class="number">3</span>] * <span class="number">54</span> - key[<span class="number">1</span>] * <span class="number">3</span>) + key[<span class="number">2</span>] * <span class="number">3</span> + key[<span class="number">4</span>] * <span class="number">11</span> - key[<span class="number">5</span>] * <span class="number">2</span>)</span><br><span class="line">​          \+ key[<span class="number">0</span>]</span><br><span class="line">​          \+ key[<span class="number">7</span>] * <span class="number">3</span></span><br><span class="line">​          \- key[<span class="number">6</span>]</span><br><span class="line">​          \- <span class="number">6298</span></span><br><span class="line">​        )</span><br><span class="line">​        \+ <span class="number">40</span></span><br><span class="line">​      )</span><br><span class="line">​      key_cmp += <span class="built_in">chr</span>(</span><br><span class="line">​        (</span><br><span class="line">​          ((key[<span class="number">7</span>] - key[<span class="number">6</span>] * key[<span class="number">3</span>]) + key[<span class="number">2</span>] * key[<span class="number">2</span>] - key[<span class="number">4</span>] * <span class="number">32</span>)</span><br><span class="line">​          \+ key[<span class="number">5</span>] * (key[<span class="number">0</span>] &gt;&gt; <span class="number">2</span>)</span><br><span class="line">​          \- key[<span class="number">1</span>] * key[<span class="number">1</span>]</span><br><span class="line">​          \- <span class="number">6689</span></span><br><span class="line">​        )</span><br><span class="line">​        \+ <span class="number">41</span></span><br><span class="line">​      )</span><br><span class="line">​      key_cmp += <span class="built_in">chr</span>(</span><br><span class="line">​        (</span><br><span class="line">​          (key[<span class="number">5</span>] - key[<span class="number">3</span>] * <span class="number">41</span>) + key[<span class="number">6</span>] * <span class="number">41</span> + key[<span class="number">5</span>]</span><br><span class="line">​          ^ ((key[<span class="number">4</span>] &amp; key[<span class="number">6</span>] | key[<span class="number">0</span>]) - (key[<span class="number">7</span>] * <span class="number">24</span> | key[<span class="number">2</span>]))</span><br><span class="line">​          \+ key[<span class="number">1</span>]</span><br><span class="line">​          \- <span class="number">589</span></span><br><span class="line">​        )</span><br><span class="line">​        \- <span class="number">36</span></span><br><span class="line">​      )</span><br><span class="line">print(key_cmp)</span><br><span class="line"></span><br><span class="line">K=Solver() <span class="comment">#解flag</span></span><br><span class="line">vo= [BitVec(<span class="string">&#x27;vo[%d]&#x27;</span>%i, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">51</span>)]</span><br><span class="line">flag = [ <span class="number">113</span>,</span><br><span class="line">​      <span class="number">74</span>,</span><br><span class="line">​      <span class="number">71</span>,</span><br><span class="line">​      <span class="number">35</span>,</span><br><span class="line">​      <span class="number">29</span>,</span><br><span class="line">​      <span class="number">91</span>,</span><br><span class="line">​      <span class="number">29</span>,</span><br><span class="line">​      <span class="number">12</span>,</span><br><span class="line">​      <span class="number">114</span>,</span><br><span class="line">​      <span class="number">73</span>,</span><br><span class="line">​      <span class="number">60</span>,</span><br><span class="line">​      <span class="number">52</span>,</span><br><span class="line">​      <span class="number">69</span>,</span><br><span class="line">​      <span class="number">5</span>,</span><br><span class="line">​      <span class="number">113</span>,</span><br><span class="line">​      <span class="number">35</span>,</span><br><span class="line">​      <span class="number">95</span>,</span><br><span class="line">​      <span class="number">38</span>,</span><br><span class="line">​      <span class="number">20</span>,</span><br><span class="line">​      <span class="number">112</span>,</span><br><span class="line">​      <span class="number">95</span>,</span><br><span class="line">​      <span class="number">7</span>,</span><br><span class="line">​      <span class="number">74</span>,</span><br><span class="line">​      <span class="number">12</span>,</span><br><span class="line">​      <span class="number">102</span>,</span><br><span class="line">​      <span class="number">23</span>,</span><br><span class="line">​      <span class="number">7</span>,</span><br><span class="line">​      <span class="number">31</span>,</span><br><span class="line">​      <span class="number">87</span>,</span><br><span class="line">​      <span class="number">5</span>,</span><br><span class="line">​      <span class="number">113</span>,</span><br><span class="line">​      <span class="number">98</span>,</span><br><span class="line">​      <span class="number">85</span>,</span><br><span class="line">​      <span class="number">38</span>,</span><br><span class="line">​      <span class="number">16</span>,</span><br><span class="line">​      <span class="number">112</span>,</span><br><span class="line">​      <span class="number">29</span>,</span><br><span class="line">​      <span class="number">6</span>,</span><br><span class="line">​      <span class="number">30</span>,</span><br><span class="line">​      <span class="number">12</span>,</span><br><span class="line">​      <span class="number">65</span>,</span><br><span class="line">​      <span class="number">73</span>,</span><br><span class="line">​      <span class="number">83</span>,</span><br><span class="line">​      <span class="number">36</span>,</span><br><span class="line">​      <span class="number">12</span>,</span><br><span class="line">​      <span class="number">23</span>,</span><br><span class="line">​    ]</span><br><span class="line">tmp = vo[<span class="number">4</span>:<span class="number">50</span>]    </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">46</span>):</span><br><span class="line">K.add(tmp[i] ^ key[(i + <span class="number">1</span>) % <span class="built_in">len</span>(key)] == flag[i])</span><br><span class="line">print(K.check())</span><br><span class="line">o=[]</span><br><span class="line"><span class="keyword">while</span>(K.check()==sat):</span><br><span class="line">condition = []</span><br><span class="line">m = K.model()</span><br><span class="line">p=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">46</span>):</span><br><span class="line">p+=<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&quot;%s&quot;</span> % (m[tmp[i]])))</span><br><span class="line">condition.append(tmp[i]!=<span class="built_in">int</span>(<span class="string">&quot;%s&quot;</span> % (m[tmp[i]])))</span><br><span class="line">print(p)</span><br><span class="line">o.append(p)</span><br><span class="line">K.add(Or(condition))</span><br><span class="line">print(<span class="built_in">len</span>(o[<span class="number">0</span>])  ) <span class="comment">#检查一下长度</span></span><br></pre></td></tr></table></figure><p>手机运行结果如下</p><p><img src="image-20211114142929091.png" alt="image-20211114142929091"></p></li></ul><h3 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{W3$c0m3_T0_th3_py_w0r1d_@nd_z3_1s_s0000_g00d!!}</p></blockquote><h2 id="new-language"><a href="#new-language" class="headerlink" title="new_language"></a>new_language</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211114140747581.png" alt="image-20211114140747581"></p><h3 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h3><p>一个new_language.exe文件</p><h3 id="解题-1"><a href="#解题-1" class="headerlink" title="解题"></a>解题</h3><ul><li><p>这个题是c#的题，需要使用.NET Refelctor打开，可以找到class geek<img src="image-20211114141442315.png" alt="image-20211114141442315"></p></li><li><p>在这里面就是代码逻辑，这里的逻辑是使用数组下标，所以直接解题脚本,最后写个字典一一替换验证就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">box= [<span class="number">0x63</span>, <span class="number">0x7c</span>, <span class="number">0x77</span>, <span class="number">0x7b</span>, <span class="number">0xf2</span>, <span class="number">0x6b</span>, <span class="number">0x6f</span>, <span class="number">0xc5</span>, <span class="number">0x30</span>, <span class="number">1</span>, <span class="number">0x67</span>, <span class="number">0x2b</span>, <span class="number">0xfe</span>, <span class="number">0xd7</span>, <span class="number">0xab</span>, <span class="number">0x76</span>,</span><br><span class="line">​      <span class="number">0xca</span>, <span class="number">130</span>, <span class="number">0xc9</span>, <span class="number">0x7d</span>, <span class="number">250</span>, <span class="number">0x59</span>, <span class="number">0x47</span>, <span class="number">240</span>, <span class="number">0xad</span>, <span class="number">0xd4</span>, <span class="number">0xa2</span>, <span class="number">0xaf</span>, <span class="number">0x9c</span>, <span class="number">0xa4</span>, <span class="number">0x72</span>, <span class="number">0xc0</span>,</span><br><span class="line">​      <span class="number">0xb7</span>, <span class="number">0xfd</span>, <span class="number">0x93</span>, <span class="number">0x26</span>, <span class="number">0x36</span>, <span class="number">0x3f</span>, <span class="number">0xf7</span>, <span class="number">0xcc</span>, <span class="number">0x34</span>, <span class="number">0xa5</span>, <span class="number">0xe5</span>, <span class="number">0xf1</span>, <span class="number">0x71</span>, <span class="number">0xd8</span>, <span class="number">0x31</span>, <span class="number">0x15</span>,</span><br><span class="line">​      <span class="number">4</span>, <span class="number">0xc7</span>, <span class="number">0x23</span>, <span class="number">0xc3</span>, <span class="number">0x18</span>, <span class="number">150</span>, <span class="number">5</span>, <span class="number">0x9a</span>, <span class="number">7</span>, <span class="number">0x12</span>, <span class="number">0x80</span>, <span class="number">0xe2</span>, <span class="number">0xeb</span>, <span class="number">0x27</span>, <span class="number">0xb2</span>, <span class="number">0x75</span>,</span><br><span class="line">​      <span class="number">9</span>, <span class="number">0x83</span>, <span class="number">0x2c</span>, <span class="number">0x1a</span>, <span class="number">0x1b</span>, <span class="number">110</span>, <span class="number">90</span>, <span class="number">160</span>, <span class="number">0x52</span>, <span class="number">0x3b</span>, <span class="number">0xd6</span>, <span class="number">0xb3</span>, <span class="number">0x29</span>, <span class="number">0xe3</span>, <span class="number">0x2f</span>, <span class="number">0x84</span>,</span><br><span class="line">​      <span class="number">0x53</span>, <span class="number">0xd1</span>, <span class="number">0</span>, <span class="number">0xed</span>, <span class="number">0x20</span>, <span class="number">0xfc</span>, <span class="number">0xb1</span>, <span class="number">0x5b</span>, <span class="number">0x6a</span>, <span class="number">0xcb</span>, <span class="number">190</span>, <span class="number">0x39</span>, <span class="number">0x4a</span>, <span class="number">0x4c</span>, <span class="number">0x58</span>, <span class="number">0xcf</span>,</span><br><span class="line">​      <span class="number">0xd0</span>, <span class="number">0xef</span>, <span class="number">170</span>, <span class="number">0xfb</span>, <span class="number">0x43</span>, <span class="number">0x4d</span>, <span class="number">0x33</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0xf9</span>, <span class="number">2</span>, <span class="number">0x7f</span>, <span class="number">80</span>, <span class="number">60</span>, <span class="number">0x9f</span>, <span class="number">0xa8</span>,</span><br><span class="line">​      <span class="number">0x51</span>, <span class="number">0xa3</span>, <span class="number">0x40</span>, <span class="number">0x8f</span>, <span class="number">0x92</span>, <span class="number">0x9d</span>, <span class="number">0x38</span>, <span class="number">0xf5</span>, <span class="number">0xbc</span>, <span class="number">0xb6</span>, <span class="number">0xda</span>, <span class="number">0x21</span>, <span class="number">0x10</span>, <span class="number">0xff</span>, <span class="number">0xf3</span>, <span class="number">210</span>,</span><br><span class="line">​      <span class="number">0xcd</span>, <span class="number">12</span>, <span class="number">0x13</span>, <span class="number">0xec</span>, <span class="number">0x5f</span>, <span class="number">0x97</span>, <span class="number">0x44</span>, <span class="number">0x17</span>, <span class="number">0xc4</span>, <span class="number">0xa7</span>, <span class="number">0x7e</span>, <span class="number">0x3d</span>, <span class="number">100</span>, <span class="number">0x5d</span>, <span class="number">0x19</span>, <span class="number">0x73</span>,</span><br><span class="line">​      <span class="number">0x60</span>, <span class="number">0x81</span>, <span class="number">0x4f</span>, <span class="number">220</span>, <span class="number">0x22</span>, <span class="number">0x2a</span>, <span class="number">0x90</span>, <span class="number">0x88</span>, <span class="number">70</span>, <span class="number">0xee</span>, <span class="number">0xb8</span>, <span class="number">20</span>, <span class="number">0xde</span>, <span class="number">0x5e</span>, <span class="number">11</span>, <span class="number">0xdb</span>,</span><br><span class="line">​      <span class="number">0xe0</span>, <span class="number">50</span>, <span class="number">0x3a</span>, <span class="number">10</span>, <span class="number">0x49</span>, <span class="number">6</span>, <span class="number">0x24</span>, <span class="number">0x5c</span>, <span class="number">0xc2</span>, <span class="number">0xd3</span>, <span class="number">0xac</span>, <span class="number">0x62</span>, <span class="number">0x91</span>, <span class="number">0x95</span>, <span class="number">0xe4</span>, <span class="number">0x79</span>,</span><br><span class="line">​      <span class="number">0xe7</span>, <span class="number">200</span>, <span class="number">0x37</span>, <span class="number">0x6d</span>, <span class="number">0x8d</span>, <span class="number">0xd5</span>, <span class="number">0x4e</span>, <span class="number">0xa9</span>, <span class="number">0x6c</span>, <span class="number">0x56</span>, <span class="number">0xf4</span>, <span class="number">0xea</span>, <span class="number">0x65</span>, <span class="number">0x7a</span>, <span class="number">0xae</span>, <span class="number">8</span>,</span><br><span class="line">​      <span class="number">0xba</span>, <span class="number">120</span>, <span class="number">0x25</span>, <span class="number">0x2e</span>, <span class="number">0x1c</span>, <span class="number">0xa6</span>, <span class="number">180</span>, <span class="number">0xc6</span>, <span class="number">0xe8</span>, <span class="number">0xdd</span>, <span class="number">0x74</span>, <span class="number">0x1f</span>, <span class="number">0x4b</span>, <span class="number">0xbd</span>, <span class="number">0x8b</span>, <span class="number">0x8a</span>,</span><br><span class="line">​      <span class="number">0x70</span>, <span class="number">0x3e</span>, <span class="number">0xb5</span>, <span class="number">0x66</span>, <span class="number">0x48</span>, <span class="number">3</span>, <span class="number">0xf6</span>, <span class="number">14</span>, <span class="number">0x61</span>, <span class="number">0x35</span>, <span class="number">0x57</span>, <span class="number">0xb9</span>, <span class="number">0x86</span>, <span class="number">0xc1</span>, <span class="number">0x1d</span>, <span class="number">0x9e</span>,</span><br><span class="line">​      <span class="number">0xe1</span>, <span class="number">0xf8</span>, <span class="number">0x98</span>, <span class="number">0x11</span>, <span class="number">0x69</span>, <span class="number">0xd9</span>, <span class="number">0x8e</span>, <span class="number">0x94</span>, <span class="number">0x9b</span>, <span class="number">30</span>, <span class="number">0x87</span>, <span class="number">0xe9</span>, <span class="number">0xce</span>, <span class="number">0x55</span>, <span class="number">40</span>, <span class="number">0xdf</span>,</span><br><span class="line">​      <span class="number">140</span>, <span class="number">0xa1</span>, <span class="number">0x89</span>, <span class="number">13</span>, <span class="number">0xbf</span>, <span class="number">230</span>, <span class="number">0x42</span>, <span class="number">0x68</span>, <span class="number">0x41</span>, <span class="number">0x99</span>, <span class="number">0x2d</span>, <span class="number">15</span>, <span class="number">0xb0</span>, <span class="number">0x54</span>, <span class="number">0xbb</span>, <span class="number">0x16</span>]</span><br><span class="line">vo=[<span class="number">0x40</span>, <span class="number">0xf9</span>, <span class="number">0x85</span>, <span class="number">0x45</span>, <span class="number">0x92</span>, <span class="number">0xfd</span>, <span class="number">0xfd</span>, <span class="number">0xcf</span>, <span class="number">0xb6</span>, <span class="number">4</span>, <span class="number">0x9d</span>, <span class="number">0xcf</span>, <span class="number">0xfb</span>, <span class="number">4</span>, <span class="number">60</span>, <span class="number">0x51</span>,</span><br><span class="line">​        <span class="number">0x3b</span>, <span class="number">0x4d</span>, <span class="number">0x92</span>, <span class="number">0x4d</span>, <span class="number">0xcf</span>, <span class="number">0x1a</span>, <span class="number">0x26</span>, <span class="number">0xcf</span>, <span class="number">0x40</span>, <span class="number">0x4d</span>, <span class="number">0xb1</span>, <span class="number">0x4d</span>, <span class="number">0x40</span>, <span class="number">0xc3</span>, <span class="number">0x4d</span>, <span class="number">0xfd</span>,</span><br><span class="line">​        <span class="number">0xfd</span>]</span><br><span class="line"><span class="comment">#字典</span></span><br><span class="line">T=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz&quot;</span>\</span><br><span class="line">+<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>\</span><br><span class="line">+<span class="string">&quot;0123456789&quot;</span>\</span><br><span class="line">+<span class="string">&quot;,.?!:;…~_-&#x27;/@*+=%&amp;$(&lt;&#123;[|\♀♂#¥£¢€^`]&#125;&gt;)&quot;</span></span><br><span class="line"></span><br><span class="line">Index=[]        </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> vo:</span><br><span class="line">Index.append(box.index(i))  </span><br><span class="line">print(Index,<span class="built_in">len</span>(Index)) <span class="comment">#输出下标</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> Index:</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> T:</span><br><span class="line">n=<span class="built_in">ord</span>(j)&gt;&gt;<span class="number">4</span></span><br><span class="line">n2=<span class="built_in">ord</span>(j)&amp;<span class="number">0xf</span>   </span><br><span class="line"><span class="keyword">if</span> (n*<span class="number">16</span>+n2)==i:</span><br><span class="line">   flag+=j </span><br><span class="line">print(flag,<span class="built_in">len</span>(flag))</span><br></pre></td></tr></table></figure><p>python结果(手机运行的）</p><p><img src="image-20211114142739033.png" alt="image-20211114142739033"></p></li></ul><h3 id="答案-1"><a href="#答案-1" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{right!!_y0u_c0mpIete_C#_reVer3e!!}</p></blockquote><h2 id="easypyc"><a href="#easypyc" class="headerlink" title="easypyc"></a>easypyc</h2><h3 id="题目-2"><a href="#题目-2" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211114145850112.png" alt="image-20211114145850112"></p><h3 id="内容-2"><a href="#内容-2" class="headerlink" title="内容"></a>内容</h3><p>一个easypyc.exe文件</p><h3 id="解答"><a href="#解答" class="headerlink" title="解答"></a>解答</h3><p>这个按照提示是使用python打包的exe,所以那就简单了</p><ul><li><p>使用pyinstxtractor.py将easypyc.exe还原成pyc文件</p><blockquote><p>python pyinstxtractor.py easypyc.exe</p></blockquote><p>在当前目录下生成了easypyc.exe_extracted文件夹，里面有easypyc.pyc文件</p></li><li><p>下面只需要用uncompyle6对easypyc.pyc反编译为python代码</p><blockquote><p>uncompyle6   easypyc.pyc   &gt;   easypyc.py</p></blockquote></li><li><p>有了python代码，就可以使用z3解题了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">inp=[BitVec(<span class="string">&#x27;in[%d]&#x27;</span>%i, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>)]</span><br><span class="line">S=Solver()</span><br><span class="line">kkkkkkk = <span class="string">&#x27;Geek2021&#x27;</span></span><br><span class="line">tttttt = [<span class="number">117</span>, <span class="number">62</span>, <span class="number">240</span>, <span class="number">152</span>, <span class="number">195</span>, <span class="number">117</span>, <span class="number">103</span>, <span class="number">74</span>, <span class="number">240</span>, <span class="number">151</span>, <span class="number">173</span>, <span class="number">162</span>, <span class="number">17</span>, <span class="number">75</span>, <span class="number">141</span>, <span class="number">165</span>, <span class="number">136</span>, <span class="number">117</span>, <span class="number">113</span>, <span class="number">33</span>, <span class="number">98</span>, <span class="number">151</span>, <span class="number">174</span>, <span class="number">4</span>, <span class="number">48</span>, <span class="number">25</span>, <span class="number">254</span>, <span class="number">101</span>, <span class="number">185</span>, <span class="number">127</span>, <span class="number">131</span>, <span class="number">87</span>]</span><br><span class="line">whatbox = [<span class="number">0</span>] * <span class="number">256</span></span><br><span class="line">k = [<span class="number">0</span>] * <span class="number">256</span></span><br><span class="line">t = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">whatbox[m] = m</span><br><span class="line">k[m] = <span class="built_in">ord</span>(kkkkkkk[(m % <span class="built_in">len</span>(kkkkkkk))])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">t = (t + whatbox[i] + k[i]) % <span class="number">256</span></span><br><span class="line">temp = whatbox[i]</span><br><span class="line">whatbox[i] = whatbox[t]</span><br><span class="line">whatbox[t] = temp</span><br><span class="line"></span><br><span class="line"><span class="comment">#处理whatbox print(whatbox)</span></span><br><span class="line">q = <span class="number">0</span></span><br><span class="line">w = <span class="number">0</span></span><br><span class="line">e = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">q = (q + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">w = (w + whatbox[q]) % <span class="number">256</span></span><br><span class="line">temp = whatbox[q]</span><br><span class="line">whatbox[q] = whatbox[w]</span><br><span class="line">whatbox[w] = temp</span><br><span class="line">e = (whatbox[q] + whatbox[w]) % <span class="number">256</span>    </span><br><span class="line">inp[k] = inp[k] ^ whatbox[e] ^ <span class="number">102</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">inp[i] ^= inp[((i + <span class="number">1</span>) % <span class="number">32</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">32</span>):</span><br><span class="line">inp[j] ^= inp[(j - <span class="number">1</span>)]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> m <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">S.add(tttttt[m] == inp[m])</span><br><span class="line"></span><br><span class="line">print(S.check())</span><br><span class="line">o=[]</span><br><span class="line">inp=[BitVec(<span class="string">&#x27;in[%d]&#x27;</span>%i, <span class="number">8</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>)] <span class="comment">#方便print数据</span></span><br><span class="line"><span class="keyword">while</span>(S.check()==sat):</span><br><span class="line">condition = []</span><br><span class="line">m = S.model()</span><br><span class="line">p=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>):</span><br><span class="line">    p+=<span class="built_in">chr</span>(<span class="built_in">int</span>(<span class="string">&quot;%s&quot;</span> % (m[inp[i]])))</span><br><span class="line">condition.append(inp[i]!=<span class="built_in">int</span>(<span class="string">&quot;%s&quot;</span> % (m[inp[i]])))</span><br><span class="line">print(p)</span><br><span class="line">o.append(p)</span><br><span class="line">S.add(Or(condition))</span><br><span class="line">print(o)</span><br></pre></td></tr></table></figure><p>手机解题如下</p><p><img src="image-20211114151212741.png" alt="image-20211114151212741"></p></li></ul><h3 id="答案-2"><a href="#答案-2" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{Just_a_Eeeeeeasy_Rc4_right?}</p></blockquote><h2 id="win32"><a href="#win32" class="headerlink" title="win32"></a>win32</h2><h3 id="题目-3"><a href="#题目-3" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211114143248841.png" alt="image-20211114143248841"></p><h3 id="内容-3"><a href="#内容-3" class="headerlink" title="内容"></a>内容</h3><p>一个win32.exe文件</p><h3 id="解题-2"><a href="#解题-2" class="headerlink" title="解题"></a>解题</h3><ul><li><p>这个题是一个exe的文件，首先啥都不说，先查壳，很容易发现它被upx加了壳的</p><p><img src="image-20211114144722458.png" alt="image-20211114144722458"></p></li><li><p>使用upx.exe对其进行脱壳</p><blockquote><p>upx.exe -d win32.exe</p></blockquote></li><li><p>然后拖到ida中分析，<code>Ctrl+F12</code>查看字符串列表，不小心注意到一串奇怪的字符串</p><p><img src="image-20211114145056194.png" alt="image-20211114145056194"></p></li><li><p>结合题目提示的base64,然后在线base64解码</p><p><img src="image-20211114145231728.png" alt="image-20211114145231728"></p></li></ul><h3 id="答案-3"><a href="#答案-3" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{y0u_g3t_A_f1ag_by_cyberloafing_auth0r}</p></blockquote><h2 id="wasm"><a href="#wasm" class="headerlink" title="wasm"></a>wasm</h2><h3 id="题目-4"><a href="#题目-4" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211114122230111.png" alt="image-20211114122230111"></p><h3 id="内容-4"><a href="#内容-4" class="headerlink" title="内容"></a>内容</h3><p>xorwasm.wasm文件，xorwasm.js，xorwasm.html</p><h3 id="解题-3"><a href="#解题-3" class="headerlink" title="解题"></a>解题</h3><p>这个题是wasm有关的题，本人尝试过很多方法，包括wasm环境的搭建，chorme的</p><p>调试，好像都比较困难。</p><ul><li><p>解这个题，必须使用wabt工具包(这个工具包没有梯子搭建也比较困难)，里面有wasm2c工具可以使用，</p><p>将xorwasm.wasm转换为c的代码 </p><blockquote><p>wasm2c   xorwasm.wasm  -o   xorwasm.c</p></blockquote></li><li><p>打开xorwasm.c里面可以看到wasm的大概运行逻辑</p><blockquote><p>void WASM_RT_ADD_PREFIX(init)(void) {<br>init_func_types();<br>init_globals();<br>init_memory();<br>init_table();<br>init_exports();<br>}</p></blockquote></li><li><p>安照这个顺序依次执行，其中在第3个init_memory()函数的定义可以看到</p><blockquote><p>static void init_memory(void) {<br>wasm_rt_allocate_memory((&amp;w2c_memory), 256, 256);<br>LOAD_DATA(w2c_memory, 1024u, data_segment_data_0, 1184);<br>LOAD_DATA(w2c_memory, 2208u, data_segment_data_1, 524);<br>}</p></blockquote><p>它使用了<code>data_segment_data_0</code>和<code>data_segment_data_1</code>两个数据，然后定位到这数据，<img src="image-20211114124345108.png" alt="image-20211114124345108"></p><p>猜想flag可能在其中</p></li><li><p>然后，在w2c_fxxx的一些函数中，反复看到数据替换，异或操作，<img src="image-20211114124945472.png" alt="image-20211114124945472"></p><p>猜想这么多的数据应该可以用异或爆破出来</p></li><li><p>然后代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">data0=[] <span class="comment">#数据为上文提到的data_segment_data_0和data_segment_data_1</span></span><br><span class="line"></span><br><span class="line">o=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">127</span>):   </span><br><span class="line">t=[]</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> data0:</span><br><span class="line">t.append(<span class="built_in">chr</span>(i^j))   <span class="comment">#逐个异或解密</span></span><br><span class="line">o.append(t)</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;flag.txt&#x27;</span>,mode=<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">f.write(<span class="built_in">str</span>(o))   <span class="comment">#写入flag.txt文本，方便搜索</span></span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></li><li><p>得到了flag.txt,然后用记事本打开(里面很乱)，搜索<code>&#39;s&#39;, &#39;y&#39;, &#39;c&#39;</code>(之所以这么写，because里面的格式),很容易可以得到<img src="image-20211114125954690.png" alt="image-20211114125954690"></p><p>出人意料的惊喜surprising</p></li></ul><h3 id="答案-4"><a href="#答案-4" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{wasm_Is_S0_Go0d!!}</p></blockquote><h1 id="Geek2021-pwn"><a href="#Geek2021-pwn" class="headerlink" title="Geek2021-pwn"></a>Geek2021-pwn</h1><h2 id="check-in"><a href="#check-in" class="headerlink" title="check in"></a>check in</h2><p><img src="image-20211114180218622.png" alt="image-20211114180218622"></p><h3 id="内容-5"><a href="#内容-5" class="headerlink" title="内容"></a>内容</h3><p>一个EIF文件</p><h3 id="解题-4"><a href="#解题-4" class="headerlink" title="解题"></a>解题</h3><ul><li><p>首先放进ida中分析</p></li><li><p>发现就是随机生成数学表达式</p></li><li><p>所以，就直接</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment">#sh =process(&quot;./math&quot;)</span></span><br><span class="line">sh =remote(<span class="string">&quot;123.57.230.48&quot;</span>,<span class="number">12343</span>)</span><br><span class="line"></span><br><span class="line">print(sh.recvline()) <span class="comment">#welcome to Geek2021</span></span><br><span class="line">print(sh.recvline()) <span class="comment">#I&#x27;ve heard that you&#x27;re good at calculating</span></span><br><span class="line">print(sh.recvline()) <span class="comment">#THis is a very easy math question\n</span></span><br><span class="line">print(sh.recvline()) <span class="comment">#Complete 200 math questions in 66 seconds!!</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">200</span>):</span><br><span class="line">num1=sh.recvline()\[<span class="number">5</span>:\]\[:-<span class="number">1</span>\]  <span class="comment">#num1</span></span><br><span class="line">num2=sh.recvline()\[<span class="number">5</span>:\][:-<span class="number">1</span>\]  <span class="comment">#num2</span></span><br><span class="line">a=sh.recvline()\[<span class="number">32</span>:\]\[:-<span class="number">1</span>\]   <span class="comment">#  +-*/</span></span><br><span class="line">s=(num1+a+num2)</span><br><span class="line">v=<span class="built_in">int</span>(<span class="built_in">eval</span>(s))</span><br><span class="line">print(s,<span class="string">&quot;=&quot;</span>,v)  <span class="comment">#num1 +-*/ num2=</span></span><br><span class="line">sh.recvline() <span class="comment">#Give me your answer!!</span></span><br><span class="line">sh.sendline(<span class="built_in">str</span>(v).encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">sh.recvline() <span class="comment">#right</span></span><br><span class="line">print(sh.recvline()) <span class="comment">#Calculate n times</span></span><br><span class="line">sh.interactive()</span><br><span class="line">print(sh.recv())</span><br><span class="line">sh.close()</span><br></pre></td></tr></table></figure></li></ul><h2 id="恋爱小游戏"><a href="#恋爱小游戏" class="headerlink" title="恋爱小游戏"></a>恋爱小游戏</h2><h3 id="题目-5"><a href="#题目-5" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211114180540690.png" alt="image-20211114180540690"></p><h3 id="内容-6"><a href="#内容-6" class="headerlink" title="内容"></a>内容</h3><p>一个EIF文件</p><h3 id="解答-1"><a href="#解答-1" class="headerlink" title="解答"></a>解答</h3><ul><li><p>这里直接利用栈溢出</p></li><li><p>所以</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#sh=process(&quot;./pwn000&quot;)</span></span><br><span class="line">sh=remote(<span class="string">&quot;47.242.20.238&quot;</span>,<span class="number">10001</span>)</span><br><span class="line">s = <span class="string">b&#x27;a&#x27;</span>*<span class="number">24</span>+<span class="string">b&quot;loveyou&quot;</span></span><br><span class="line">sh.sendline(s)</span><br><span class="line">print(sh.recv())</span><br><span class="line">sh.interactive()</span><br><span class="line">sh.close()</span><br></pre></td></tr></table></figure></li></ul><h2 id="恋爱小游戏2-0"><a href="#恋爱小游戏2-0" class="headerlink" title="恋爱小游戏2.0"></a>恋爱小游戏2.0</h2><h3 id="题目-6"><a href="#题目-6" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211114180613900.png" alt="image-20211114180613900"></p><h3 id="内容-7"><a href="#内容-7" class="headerlink" title="内容"></a>内容</h3><p>一个EIF文件</p><h3 id="解答-2"><a href="#解答-2" class="headerlink" title="解答"></a>解答</h3><ul><li><p>同样，放进ida中进行分析，发现其和1.0就是比较的地方不同</p></li><li><p>这个题理论上提交任意的payload都可以过关</p></li><li><p>所以就</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#sh=process(&quot;./pwn111&quot;)</span></span><br><span class="line">sh=remote(<span class="string">&quot;47.242.20.238&quot;</span>,<span class="number">10000</span>)</span><br><span class="line"></span><br><span class="line">s = <span class="string">b&#x27;a&#x27;</span>*<span class="number">24</span>+<span class="string">b&quot;loveyou&quot;</span></span><br><span class="line"></span><br><span class="line">sh.send(s)  <span class="comment">#这里只能用send</span></span><br><span class="line"></span><br><span class="line">print(sh.recv())</span><br><span class="line">sh.interactive()</span><br><span class="line">sh.close()</span><br></pre></td></tr></table></figure></li></ul><h1 id="Geek-2021-Crypyto"><a href="#Geek-2021-Crypyto" class="headerlink" title="Geek 2021-Crypyto"></a>Geek 2021-Crypyto</h1><h2 id="Classica-music"><a href="#Classica-music" class="headerlink" title="Classica music"></a>Classica music</h2><h3 id="题目-7"><a href="#题目-7" class="headerlink" title="题目"></a>题目</h3><p><img src="g1.png" alt="g1"></p><h3 id="内容-8"><a href="#内容-8" class="headerlink" title="内容"></a>内容</h3><blockquote><p>qy sdrgx bswkjlpuh zmntp rv wesokk qp fcabwz gqw rdi nlufaaehp rijmntp jjvwmej oqg etz jxmkt tqc wvlnv sv fex sykbclp iih ulh af awedeyj zwp osn qwytwjv hidobdmkvd pvhg tm cditey nuwkjtpwi dw pif xqucsql eqv lpf myvp wgzt cn oqg mngz dhvrf fnv kij mtf estvmx pgyvp waw akcs puk nkanvgiky wsfl uowmhy lgu honwgc hwdtg sz puupv qnv imest ywjtintn kw hipbbx gc daw nqrpxfwukb dsdrgc afymn ntobl lqks sihntcz oitd oqg vqgjp rdi bpil rc nays yj ucksh yeu mauztgiy fowkmqdqc xtfetw cpd pt cup ga rsyeest kg hwcvfy kmkvp fpxg oak xqucsxyav biadzpv orsf cpd tob eqv zpuzq dwulw ach ouy tmvzzu ii cy cgfvgce fbw nnir kdxj fnvwzuczdyk ipl lry yraejuiue dkw svf kffgc dcauwa vhp rfso ka wcritnakw sgy</p></blockquote><h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><p>这道题，根据提示，显然它是一道古典密码的题，但是我们不知道它的key,所以，很自然的就在各种古典密码的在线解密网站进行尝试，结果，发现其可以使用Vigenère维多利亚解密。</p><h3 id="解答-3"><a href="#解答-3" class="headerlink" title="解答"></a>解答</h3><ul><li>在线Vigenère维多利亚解密网站：<a href="https://www.guballa.de/vigenere-solver">https://www.guballa.de/vigenere-solver</a> </li><li>很容易就可以得到<img src="g2.png" alt="g2"></li><li>图中，要求将Key的每个单词用下划线连接，在加上大写的SYC和{}</li><li>所以，得解</li></ul><h3 id="答案-5"><a href="#答案-5" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{i_love_classical_m****}</p></blockquote><h2 id="三个也可以"><a href="#三个也可以" class="headerlink" title="三个也可以"></a>三个也可以</h2><h2 id="题目-8"><a href="#题目-8" class="headerlink" title="题目"></a>题目</h2><p><img src="g3.png" alt="g3"></p><h3 id="内容-9"><a href="#内容-9" class="headerlink" title="内容"></a>内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number  <span class="keyword">import</span>  getPrime,bytes_to_long</span><br><span class="line"><span class="keyword">from</span>  flag   <span class="keyword">import</span>  flag</span><br><span class="line">flag  =  bytes_to_long(flag)</span><br><span class="line">p  = getPrime(<span class="number">100</span>)</span><br><span class="line">q  = getPrime(<span class="number">100</span>)</span><br><span class="line">r  = getPrime(<span class="number">100</span>)</span><br><span class="line">n  = p * q *  r</span><br><span class="line">e  = <span class="number">65537</span></span><br><span class="line">c  = <span class="built_in">pow</span>(flag, e, n)</span><br><span class="line">print(n)</span><br><span class="line">print(c)</span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">798898099277934230940128318327632478801901355882614385038310680236381399664973004454688807</span></span><br><span class="line"><span class="string">249128262668727227416761229197781088291962817031744463346178556057415901512114944554308575</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h3><p>这个题，就是一种rsa加密算法，可以通过gysm工具直接解出，其次，对于那3个最大的素数，可以通过网站查询<a href="http://factordb.com/">http://factordb.com/</a>，然后编写解题脚本就OK</p><h3 id="解题-5"><a href="#解题-5" class="headerlink" title="解题"></a>解题</h3><ul><li><p>分解素数</p></li><li><p>写python解题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"></span><br><span class="line">e = <span class="number">65537</span></span><br><span class="line">n=<span class="number">798898099277934230940128318327632478801901355882614385038310680236381399664973004454688807</span></span><br><span class="line">c=<span class="number">249128262668727227416761229197781088291962817031744463346178556057415901512114944554308575</span></span><br><span class="line">p = <span class="number">967244547191154261539598250343</span></span><br><span class="line">q = <span class="number">821285845529489288911031313917</span></span><br><span class="line">r = <span class="number">1005682191548299165290460437397</span></span><br><span class="line"></span><br><span class="line">phi = (p-<span class="number">1</span>)*(q-<span class="number">1</span>)*(r-<span class="number">1</span>)</span><br><span class="line">d = gmpy2.invert(e,phi)</span><br><span class="line">m = gmpy2.powmod(c,d,n) </span><br><span class="line"></span><br><span class="line">mt=<span class="built_in">bytes</span>.fromhex(<span class="built_in">hex</span>(m)[<span class="number">2</span>:]) </span><br><span class="line"></span><br><span class="line">print(mt)</span><br></pre></td></tr></table></figure></li></ul><h3 id="答案-6"><a href="#答案-6" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{}</p></blockquote><h2 id="Superposition-under-the-starry-sky"><a href="#Superposition-under-the-starry-sky" class="headerlink" title="Superposition under the starry sky"></a>Superposition under the starry sky</h2><h3 id="题目-9"><a href="#题目-9" class="headerlink" title="题目"></a>题目</h3><p><img src="g4.png" alt="g4"></p><h3 id="内容-10"><a href="#内容-10" class="headerlink" title="内容"></a>内容</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> bytes_to_long, getPrime</span><br><span class="line"><span class="keyword">from</span> flag <span class="keyword">import</span> flag</span><br><span class="line">a = getPrime(<span class="number">400</span>)</span><br><span class="line">b = getPrime(<span class="number">400</span>)</span><br><span class="line">n = getPrime(<span class="number">400</span>)</span><br><span class="line">flag = bytes_to_long(flag)</span><br><span class="line">seed = flag</span><br><span class="line">result = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">seed = (seed * a + b) % n</span><br><span class="line">result.append(seed)</span><br><span class="line">print(result)</span><br><span class="line">print(n)</span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">[1633086272556604467630727869278140040711140555507257984778706962389364338237377391272504059109316040445365656669071569236, 1206389051656797336925675372412697477889689141174380289961348552709531162180853687116202278892215286522581909284859193494, 664238088423928246579566483655935746695807924062694495126404306361290788561253706421181510449476188038387172722467882193]</span></span><br><span class="line"><span class="string">2482696698513566590184292572066254640333143735400366745928208268241117181592178071999744746850718587310205478604372055081</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br></pre></td></tr></table></figure><h3 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h3><p>这道题考的是lcg的算法，如果熟练的话可以轻松驾驭，我当然是通过baidu学习的啊。</p><h3 id="解题-6"><a href="#解题-6" class="headerlink" title="解题"></a>解题</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">output=[<span class="number">1633086272556604467630727869278140040711140555507257984778706962389364338237377391272504059109316040445365656669071569236</span>, <span class="number">1206389051656797336925675372412697477889689141174380289961348552709531162180853687116202278892215286522581909284859193494</span>, <span class="number">664238088423928246579566483655935746695807924062694495126404306361290788561253706421181510449476188038387172722467882193</span>]</span><br><span class="line">n=<span class="number">2482696698513566590184292572066254640333143735400366745928208268241117181592178071999744746850718587310205478604372055081</span></span><br><span class="line"></span><br><span class="line">MMI = <span class="keyword">lambda</span> A, n,s=<span class="number">1</span>,t=<span class="number">0</span>,N=<span class="number">0</span>: (n &lt; <span class="number">2</span> <span class="keyword">and</span> t%N <span class="keyword">or</span> MMI(n, A%n, t, s-A//n\*t, N <span class="keyword">or</span> n),-<span class="number">1</span>)[n&lt;<span class="number">1</span>] <span class="comment">#逆元计算</span></span><br><span class="line">a=(output[<span class="number">2</span>]-output[<span class="number">1</span>])\*MMI((output[<span class="number">1</span>]-output[<span class="number">0</span>]),n)%n</span><br><span class="line">ani=MMI(a,n)</span><br><span class="line">b=(output[<span class="number">1</span>]-a\*output[<span class="number">0</span>])%n</span><br><span class="line">seed = (ani\*(output[<span class="number">0</span>]-b))%n</span><br><span class="line"></span><br><span class="line">print(long_to_bytes(seed))</span><br></pre></td></tr></table></figure><h3 id="答案-7"><a href="#答案-7" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{The_rain_drenched_the_***}</p></blockquote><h2 id="easy-house-of-Classic-Crypto"><a href="#easy-house-of-Classic-Crypto" class="headerlink" title="easy house of Classic Crypto"></a>easy house of Classic Crypto</h2><h3 id="题目-10"><a href="#题目-10" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211111140218230.png" alt="image-20211111140218230"></p><h3 id="内容-11"><a href="#内容-11" class="headerlink" title="内容"></a>内容</h3><blockquote><p>T0s=</p><p>4e6577</p><p>-.– — ..-</p><p>ABABAABBABABBBABABBA</p><p>jung vf pynffvp pelcgb</p></blockquote><p>将答案拼接到一起，就可以打开压缩包，得到flag</p><h3 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h3><ul><li>第一个是Base64加密<a href="https://tool.ip138.com/base64/">https://tool.ip138.com/base64/</a> 在线解密</li><li>第二个是Bin-Hex编码，可以<a href="http://bin-hex-converter.online-domain-tools.com/">http://bin-hex-converter.online-domain-tools.com/</a> 在线转换</li><li>第三个是摩斯电码，可以在 <a href="http://rumkin.com/tools/cipher/morse.php">http://rumkin.com/tools/cipher/morse.php</a>在线解密</li><li>第四个是培根密码，可以在  <a href="http://rumkin.com/tools/cipher/baconian.php">http://rumkin.com/tools/cipher/baconian.php</a>在线解密</li><li>第五个是ROT18，ROT13，可以在<a href="https://www.qqxiuzi.cn/bianma/ROT5-13-18-47.php">ROT5、ROT13、ROT18、ROT47位移编码 (qqxiuzi.cn)</a>在线解密</li></ul><h3 id="解题-7"><a href="#解题-7" class="headerlink" title="解题"></a>解题</h3><ul><li><p>解Base64密码，得<code>OK</code><img src="image-20211111143549271.png" alt="image-20211111143549271"></p></li><li><p>解密码，可得<code>New</code><img src="image-20211111144912527.png" alt="image-20211111144912527"></p></li><li><p>解摩斯密码，可得<code>YOU </code><img src="image-20211111150107203.png" alt="image-20211111150107203"></p></li><li><p>解培根密码，可得<code>KNOW</code><img src="image-20211111141024082.png" alt="image-20211111141024082"></p></li><li><p>解ROT18密码 <code>what is classic crypto</code><img src="image-20211111142449299.png" alt="image-20211111142449299"></p></li><li><p>组装破解出来的密码 ,除了前3个字母大写，其余密码都小写</p><blockquote><p>OKNewyouknowwhatisclassiccrypto</p></blockquote></li></ul><h3 id="答案-8"><a href="#答案-8" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{Meaningless_cry***}</p></blockquote><p><img src="image-20211111151051847.png" alt="image-20211111151051847"></p><h1 id="Geek-2021-mist"><a href="#Geek-2021-mist" class="headerlink" title="Geek 2021-mist"></a>Geek 2021-mist</h1><p>所谓极客就是对周围的一切密切关注，积极找出其中的暗藏的玄机，比如，在连接wifi时</p><p><img src="1.png" alt="wifi"></p><p>啊这，就是传说中的flag,不过，没错就是它，一个奇怪的flag,莫名其妙就出现在我们身边，好在，有心人。</p><h2 id="in-the-air"><a href="#in-the-air" class="headerlink" title="in the air"></a>in the air</h2><p>很快就迎来了第一个题：</p><p><img src="2.png" alt="2"></p><p>不过，对无线电的理解，那就不用说了，就是wifi的提示，那就….</p><h2 id="SGA-Character"><a href="#SGA-Character" class="headerlink" title="SGA Character"></a>SGA Character</h2><h3 id="题目-11"><a href="#题目-11" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211110220628347.png" alt="image-20211110220628347"></p><h3 id="内容-12"><a href="#内容-12" class="headerlink" title="内容"></a>内容</h3><p><img src="SGA_Character.png" alt="SGA_Character"></p><h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><p>这道题的内容就只有一张图片，其它hint就是好像在<code>Minecraft</code>中见过，的确见过，它就是<code>附魔台</code> ，里面有文字就是这样，勾起了童年的回忆<img src="image-20211110221422620.png" alt="image-20211110221422620"></p><p>怎么能这样？<img src="3B603C50.png" alt="img"></p><p>其实这是一张文字，它的对应关系可以在<code>银河标准语字母表</code>中查到，其对应关系如下</p><p><img src="watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pa2VDb2tl,size_16,color_FFFFFF,t_70.png" alt="img"></p><p>该明白它的意思了吧</p><h3 id="解答-4"><a href="#解答-4" class="headerlink" title="解答"></a>解答</h3><p>通过不懈的努力，终于一一找到出来了它的对应关系</p><p><img src="Just%20A%20Hand%20Is%20Ok/SGA_Character(1).png" alt="SGA_Character(../../../md/Just%2520A%2520Hand%2520Is%2520Ok/SGA_Character(1).png)"></p><p>手抄了一份，大概如下</p><p><img src="image-20211110222110844.png" alt="image-20211110222110844"></p><p>划线的就是我们需要的flag</p><h3 id="答案-9"><a href="#答案-9" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{am4z1ngsga1n****}</p></blockquote><h2 id="每日一溜"><a href="#每日一溜" class="headerlink" title="每日一溜"></a>每日一溜</h2><h3 id="题目-12"><a href="#题目-12" class="headerlink" title="题目"></a>题目</h3><h3 id="解题-8"><a href="#解题-8" class="headerlink" title="解题"></a>解题</h3><p><img src="image-20211112172644853.png" alt="image-20211112172644853"></p><p>得到4个文件，将最大的一个改为zip压缩文件，然后解压，得到1.txt</p><blockquote><p>FhMrPh94JHqS2jGQGM6QCsaDzI6ZyHqQQB==<br>dnd4cnN0dW9wcTM0NTY3QUJDREVGR0lISnl6MDIxUFFSU1RLTk1MT1phYmNkVVZXWFllZmdoaWprbG1uODkrLw==</p></blockquote><p>将第一行的密码和第二行的密码分别base64解密，第一行不能解密，第二行得到<code>vwxrstuopq34567ABCDEFGIHJyz021PQRSTKNMLOZabcdUVWXYefghijklmn89+/</code></p><p>这就足以说明这是魔改字母表，写个脚本恢复就行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">v=<span class="string">&quot;FhMrPh94JHqS2jGQGM6QCsaDzI6ZyHqQQB==&quot;</span></span><br><span class="line">a=<span class="string">&quot;vwxrstuopq34567ABCDEFGIHJyz021PQRSTKNMLOZabcdUVWXYefghijklmn89+/&quot;</span></span><br><span class="line">b=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>;</span><br><span class="line">r=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> v:</span><br><span class="line">r+=b[a.find(i)];</span><br><span class="line">print(r);</span><br></pre></td></tr></table></figure><p>恢复得到<code>U1lDe19LYXJhc3VfVlNfREpSaWNoZXJffQ==</code></p><p>再次进行base64解密就可以得到答案了</p><h3 id="答案-10"><a href="#答案-10" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{<em>Karasu_VS_DJRicher</em>}</p></blockquote><h2 id="今天有被破防吗？"><a href="#今天有被破防吗？" class="headerlink" title="今天有被破防吗？"></a>今天有被破防吗？</h2><h3 id="题目-13"><a href="#题目-13" class="headerlink" title="题目"></a>题目</h3><p><img src="image-20211113214100426.png" alt="image-20211113214100426"></p><h3 id="内容-13"><a href="#内容-13" class="headerlink" title="内容"></a>内容</h3><p>ans.zip里面有ans.txt,并且，内容如下</p><blockquote><p>f5 fc f5<br>f5 fc f5<br>f5 fc f5<br>f5 fc f5<br>f5 fc f5<br>f5 fc f5<br>f5 fc f5<br>f5 fc f5<br>f6 fb f4</p><p>……(内容过多不便列举)</p><p>8b 91 c5<br>8b 91 c5（共1166400行）</p></blockquote><h3 id="解题-9"><a href="#解题-9" class="headerlink" title="解题"></a>解题</h3><ul><li>由于ans.txt有3列，类似于图片的rgb的3个参数，所以python代码如下</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line">y = <span class="number">1080</span> <span class="comment">#x坐标 通过对txt里的行数进行整数分解</span></span><br><span class="line">x = <span class="number">1080</span>  <span class="comment">#y坐标 x * y = 行数1166400</span></span><br><span class="line">im = Image.new(<span class="string">&quot;RGB&quot;</span>, (x, y))  <span class="comment">#创建图片</span></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&#x27;ans.txt&#x27;</span>)  <span class="comment">#打开rbg值的文件</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, x):</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, y):</span><br><span class="line">      line = file.readline() <span class="comment">#获取一行的rgb值</span></span><br><span class="line">      rgb = line.split(<span class="string">&quot; &quot;</span>) <span class="comment">#分离rgb,文本中有空格</span></span><br><span class="line">      im.putpixel((i,j), (<span class="built_in">int</span>(<span class="string">&#x27;0x&#x27;</span>+rgb[<span class="number">0</span>],<span class="number">16</span>), <span class="built_in">int</span>(<span class="string">&quot;0x&quot;</span>+rgb[<span class="number">1</span>],<span class="number">16</span>), <span class="built_in">int</span>(<span class="string">&quot;0x&quot;</span>+rgb[<span class="number">2</span>],<span class="number">16</span>))) <span class="comment">#将rgb转化为像素</span></span><br><span class="line">im.show()  <span class="comment">#浏览</span></span><br><span class="line">im.save(<span class="string">&#x27;flag.jpg&#x27;</span>)<span class="comment">#保存下来</span></span><br></pre></td></tr></table></figure><ul><li><p>运行可以得到，以下图片之一(rgb位置不一样),不影响解答，我这里都实现了一遍<img src="j.png" alt="j"></p></li><li><p>虽然我会ps,但是我还是想吐槽这道题（太不方便了）。用ps打开任意一张图片，都可以看到零零碎碎的flag,为方便操作，建议使用ps的<code>切片工具</code>分块（27x27），再在需要的块区用矩形选择工具分别选择，然后<code>ctrl+j</code>复制选择的图块，共有16块与flag有关（图中没有一一列出）<img src="image-20211113212550261.png" alt="image-20211113212550261"></p></li><li><p>复制了16块，然后隐藏背景图层，用ps的<code>移动工具</code>选择需要的图块进行移动，类似于小学的拼图，拼图完成的结果如下<img src="image-20211113210304863.png" alt="image-20211113210304863"></p></li></ul><h3 id="答案-11"><a href="#答案-11" class="headerlink" title="答案"></a>答案</h3><blockquote><p>SYC{Never Konws Best}</p></blockquote><p><img src="33D48B50.gif" alt="img"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> 原理 </tag>
            
            <tag> 脚本 </tag>
            
            <tag> 开源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctf re入门</title>
      <link href="2021/10/08/ctf-ru-men/"/>
      <url>2021/10/08/ctf-ru-men/</url>
      
        <content type="html"><![CDATA[<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>一般来说，我们拿到一个ctf的题，就是为了得到它的flag,为了它，RE做安全的十分努力，百分艰辛，就为了得到它。</p><h1 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h1><h2 id="试运行"><a href="#试运行" class="headerlink" title="试运行"></a>试运行</h2><p>有了ctf的re的题目，ctfer有一套经典的流程，双击打开xxx.exe开始你的find flag之旅，一般来说就会提示<br><img src="2.png" alt="Hi,CTFer"><br>，它的意思是说，你好，CTFer,输入你的flag,那么你就可以输入，不用说，几乎都是you are wrong<br><img src="1.png" alt="you are wrong"><br>所以，为了不错，得到正确的答案flag，就必须选择理解它，信任它。它自然会给你答案。</p><h2 id="反编译"><a href="#反编译" class="headerlink" title="反编译"></a>反编译</h2><p>相信它，自然就是把它扔进ida,进行逆向分析。下面给出简单的几个exe的ctf题。</p><h3 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h3><p>你将会得到<br><img src="T1.png" alt="T1"><br>看着T1的伪代码，一眼就可以看出这个题的flag,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;YOU_FIND_IT&#125;</span><br></pre></td></tr></table></figure><p>再执行流程，双击打开T1.exe,输入你的flag,就可以得到you are right，就这么简单。</p><h3 id="T2"><a href="#T2" class="headerlink" title="T2"></a>T2</h3><p>拿道题流程完毕，ida,就又可以得到<br><img src="T2.png" alt="T2"><br>可以看出，用户输入一个str1的字符串，然后利用for循环进行加i操作，最后将新得到的str1和“gmbh|ZPV`GJOE`JU`IBIB~”进行比较，如果相同，就是you are right,不同就是you are wrong。</p><ul><li><p>思路: 对“gmbh|ZPV<code>GJOE</code>JU`IBIB~”进行逐个减去i，即可得到答案。</p></li><li><p>解题:<br>可以用C语言写一个脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt; </span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">char a[50];</span><br><span class="line">scanf(&quot;%s&quot;,a);</span><br><span class="line">for(int i&#x3D;0;i&lt;strlen(a);++i)&#123;</span><br><span class="line">--a[i];</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%s-%d&quot;,a,strlen(a));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入”gmbh|ZPV<code>GJOE</code>JU`IBIB~”得到答案</p></li></ul><h3 id="T3"><a href="#T3" class="headerlink" title="T3"></a>T3</h3><p>拿题流程完毕，ida可以得到<br><img src="T3.png" alt="T3"><br>对已知的函数命名，可以看出，T3是对T2的一次升级，加入了异或的算法。</p><ul><li><p>题目: 用scanf输入str1 -&gt; 在  for 中 将str1的每一个字符与其下标异或 -&gt; 将得到的str1与 str2比较</p></li><li><p>知识点：异或运算是一个二元运算，在C语言中的运算符号为 ^,规则为   </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A ^ B &#x3D; C</span><br><span class="line">C ^ B &#x3D; A</span><br><span class="line">C ^ A &#x3D; B</span><br></pre></td></tr></table></figure><p>也就是说:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">明文 ^ 密钥 &#x3D; 密文</span><br><span class="line">密文 ^ 密钥 &#x3D; 明文</span><br></pre></td></tr></table></figure><p>所以，解题就是再对str2进行一次异或运算</p></li><li><p>str2</p><blockquote><p>双击str2会跳转到它的数据定义窗口<img src="T3-a.png" alt="str2">，从’66h’,’6Dh’到’55h’,’68h’,’0’的字符串数据，可以通过LazyIDA插件转换为byte字节。str2的实际数据是</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[0x66, 0x6D, 0x63, 0x64, 0x7F, 0x5C, 0x49, 0x52, 0x57, 0x4F, 0x43, 0x45, 0x48, 0x52, 0x47, 0x5B, 0x4F, 0x59, 0x53, 0x5B, 0x55, 0x68, 0x00]</span><br></pre></td></tr></table></figure></li><li><p>解题<br>C语言的脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">char a[]&#x3D;&#123;0x66, 0x6D, 0x63, 0x64, 0x7F, 0x5C, 0x49, 0x52,0x57, 0x4F, 0x43, 0x45, 0x48, 0x52, 0x47, 0x5B, 0x4F, 0x59, 0x53, 0x5B, 0x55, 0x68, 0x00&#125;;</span><br><span class="line">for(int i&#x3D;0;i&lt;strlen(a);++i)&#123;</span><br><span class="line">      a[i]^&#x3D;i;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%s&quot;,a);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行就可以得到flag</p></li></ul><h3 id="T4"><a href="#T4" class="headerlink" title="T4"></a>T4</h3><p>放进ida之后，可以得到<br><img src="T4.png" alt="T4"><br>T4.exe在T3.exe基础上加上了一个新的函数处理sub_455A94( )</p><ul><li><p>题目：输入str -&gt; 对str的字符串进行异或 -&gt; 再对整个字符串sub_455A94( )处理 -&gt;与 ”Zm1jZH9cSVJXT0NFSFJHW09ZU1tVaA==”比较</p></li><li><p>sub_455A94 </p><blockquote><p>这是一个啥函数，不知道。但是我们可以了解。双击函数看到<img src="T4-a.png" alt="sub_455A94 ()">再次双击函数sub_45A3F0，这是对sub_45A3F0 的封装，进入底层函数，<img src="T4-b.png" alt="底层函数">该函数多次引用off_529000 ,双击可以跳转到其资源地址,可以把鼠标放在图示位置<img src="T4-c.png" alt="字符串表">可以看到是字符表，推敲为base64,所以sub_455A94()为base64加密处理</p></blockquote></li><li><p>解题思路: 对“Zm1jZH9cSVJXT0NFSFJHW09ZU1tVaA==”进行base64解码 -&gt; 再进行异或解密 -&gt; flag</p></li><li><p>解题代码 （C语言）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">char a[]&#x3D;&quot;fmcd\IRWOCEHRG[OYS[Uh&quot;;&#x2F;&#x2F;对“Zm1jZH9cSVJXT0NFSFJHW09ZU1tVaA&#x3D;&#x3D;”base64解密后的字符串</span><br><span class="line">for(int i&#x3D;0;i&lt;strlen(a);++i)&#123;</span><br><span class="line">     a[i]^&#x3D;i;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%s&quot;,a);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="T5"><a href="#T5" class="headerlink" title="T5"></a>T5</h3><p>直接得到如下<br><img src="T5.png" alt="T5"><br>Amazing,T5和T4竟然差不多，直接按照T4的方法得到flag,你就会得到”you are wrong”<img src="1.png" alt="wrong">这是因为T5和T4还是有不同之处的。</p><ul><li><p>不同之处:在sub_455A94()函数中，依旧是sub_45A3F0(),也使用了off_529000 ,不过内部，并没有使用标准字母表，而是图示<img src="T5-a.png" alt="改动了的字母表">这属于魔改字母表。</p></li><li><p>base64</p><blockquote><p>base64一般是使用的标准字母表计算出来的字符串</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;</span><br></pre></td></tr></table></figure><p>但是，标准字母表的字母位置和改动了的字母位置下标应该一样。</p></li><li><p>替换base64：在表中应该如下替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">待替换  Wj1gWE9xPSGUQ0KCPCGET09WR1qSzZ</span><br><span class="line">魔改表  ZYXABCDEFGHIJKLMNOPQRSTUVWzyxabcdefghijklmnopqrstuvw0123456789+&#x2F;</span><br><span class="line">标准表  ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;</span><br><span class="line">已替换  Zm1jZH9cSVJXT0NFSFJHW09ZU1tVaA</span><br></pre></td></tr></table></figure><p>也可以写一个Python脚本替换</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">import base64;</span><br><span class="line">v&#x3D;&quot;Wj1gWE9xPSGUQ0KCPCGET09WR1qSzZ&quot;;</span><br><span class="line">a&#x3D;&quot;ZYXABCDEFGHIJKLMNOPQRSTUVWzyxabcdefghijklmnopqrstuvw0123456789+&#x2F;&quot;;</span><br><span class="line">b&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">r&#x3D;&quot;&quot;;</span><br><span class="line">for i in v:</span><br><span class="line">    r+&#x3D;b[a.find(i)];</span><br><span class="line">print(r); #结果是Zm1jZH9cSVJXT0NFSFJHW09ZU1tVaA</span><br></pre></td></tr></table></figure><p>替换完成后，就可以使用标准的base64进行解码</p></li><li><p>C语言解题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main()&#123;</span><br><span class="line">char a[]&#x3D;&quot;fmcd\IRWOCEHRG[OYS[Uh&quot; ;&#x2F;&#x2F;base64解码后的结果</span><br><span class="line">for(int i&#x3D;0;i&lt;strlen(a);++i)&#123;</span><br><span class="line">      a[i]^&#x3D;i;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%s&quot;,a);</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h3 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h3><p>直接IDA,得到<br><img src="T6.png" alt="T6">看到伪代码一大堆，不过，也不用怕，可以看到str2为用户输入，将str2和str1作比较，str1是通过一系列代码运算出来的，这么复杂，怎么办？其实很简单，既然是计算出来的，那就可以把计算表达式抄下来，写一个C程序，把str1用printf出来即可。</p><p>不过，IDA这么高级，当然也可以动态调试。</p><ul><li>解题:<br>在ida的菜单栏里面找到debugger-&gt;select debugger<br><img src="T6-a.png" alt="image"><br>选择local windows debugger<br><img src="T6-b.png" alt="image"><br>在代码行的前面标记小蓝点，就表示在这里需要运行时停下来调试<br><img src="T6-c.png" alt="image"><br>在菜单栏-&gt;debugger-&gt;start progress开始调试运行了<br><img src="T6-d.png" alt="image"><br>后面会跳出命令提示框，随便输入点东西，回车继续运行，停止后，将鼠标移动到str1上面，就可以看见程序运行时的结果了。<br><img src="T6-e.png" alt="image"><br>你的flag就是它了。</li></ul><h2 id="完整的文件下载"><a href="#完整的文件下载" class="headerlink" title="完整的文件下载"></a>完整的文件下载</h2><p><a href="T.rar">下载地址</a>:<a href="T.rar">点我下载</a></p><p>本文如有不对，请指正</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Git for windows</title>
      <link href="2021/10/05/git-for-windows/"/>
      <url>2021/10/05/git-for-windows/</url>
      
        <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Git是一个分布式管理的软件，功能十分强大，在windows平台上，在安装的时候，便可以将其配置完毕。本文详细介绍了一下。本文Git for windows 版本是2.33.0.2</p><h1 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h1><p>下载一般有两个渠道</p><ul><li>渠道1： <a href="https://gitforwindows.org/">https://gitforwindows.org/</a></li><li>渠道2：淘宝镜像 <a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a></li></ul><p>下载exe文件直接运行就可以安装完成</p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>下载软件之后，然后就双击打开，就开始了开始向导，这是一个协议，同意就”next“<br><img src="1.png" alt="开始向导"><br>选择一个Git软件的安装目录，建议选择除C盘以外的盘符，以免以后C盘文件过多，导致不必要的卡钝。<br><img src="2.png" alt="选择安装目录"><br>下一步就可以选择你要安装的组件，按照需求选择就可以了，一般就直接”next”<br><img src="3.png" alt="选择组件"><br>选择是否创建开始菜单的文件夹，或者选择一个开始菜单的文件夹创建Git软件的快捷方式，当然也可以不选择创建开始菜单文件<br><img src="4.png" alt="开始菜单"><br>在这里可以选择你比较喜欢的编辑器进行编辑，作为Git的默认编辑器，选择比较多，比如，vim,trapra等等。<br><img src="5.png" alt="默认编辑器"><br>这一步是选择调整在一个新的仓库起初默认的分支名字（git init），一般选择默认就可以，let Git decide,就直接“next”<br><img src="6.png" alt="默认init"><br>下面就是布置环境变量了，如此设置后，在以后的windows命令提示符里可以使用，进行git操作，不然手动设置，很麻烦。Git比较推荐的是设置windows的命令提示符和第三方软件也可以使用。<br><img src="7.png" alt="环境变量"><br>在这个版本之下，提供了一种新的ssh的链接方式，这里是和Git自带的ssh软件进行选择，使ssh连接更安全。嫌麻烦，也可next<br><img src="8.png" alt="ssh"><br>配置行结束转换Git应该如何处理文本文件中的行尾.</p><ul><li>签出Windows样式，提交Unix样式的行尾</li><li>当签出文本传单时，git将不执行任何转换。</li><li>按-原样签出，按-原样提交</li></ul><p>next也即可<br><img src="9.png" alt="提交行为"><br>选择默认第一个即可，继续“下一步”<br><img src="10.png" alt="helper"><br>下面步骤比较多，反正直接next即可，有需求的也可以仔细浏览操作提示，做出你最希望的选择。</p><p><img src="11.png" alt="image"><br><img src="12.png" alt="image"><br><img src="13.png" alt="image"><br><img src="14.png" alt="image"><br><img src="15.png" alt="image"><br>这一步，当然不用next了，你只需等待几十秒钟就可以迎接你的git分布式管理了。<br><img src="16.png" alt="image"><br>到了这里，基本上，你已经完成了Git的一系列的安装操作<br><img src="17.png" alt="安装完成"></p><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>可以参考</p><ul><li><p><a href="http://www.ruanyifeng.com/blog/2018/10/git-internals.html">阮一峰博客</a></p></li><li><p><a href="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git">Git中文文档</a></p></li><li><p><a href="https://www.topgoer.com/%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/Git%E5%AE%89%E8%A3%85.html">https://www.topgoer.com</a></p></li><li><p><a href="https://kuangtant.gitee.io/2021/08/28/ge-ping-tai-an-zhuang-git/">各平台安装Git</a></p></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言对数组指针的理解</title>
      <link href="2021/09/28/c-yu-yan-dui-shu-zu-zhi-zhen-de-li-jie/"/>
      <url>2021/09/28/c-yu-yan-dui-shu-zu-zhi-zhen-de-li-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>C语言有很多的知识，其中一个就是关于数组指针的问题，对于一些刚学C语言的萌新来说，C语言的数组指针是一个问题。</p><h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p>数组（Array）是一系列具有相同类型的数据的集合，每一份数据叫做一个数组元素（Element）。而且数组在内存中只占一块内存，并且每一个元素是连续排列的。</p><h2 id="创建数组"><a href="#创建数组" class="headerlink" title="创建数组"></a>创建数组</h2><p>一般来说，C语言创建数组只需要两个条件：</p><ol><li>指明数组的类型</li><li>指明数组的长度，不能越界使用。</li></ol><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">int a &#x3D; 1024 ; int arr[5] &#x3D; &#123;1,2,3,4,5&#125;; &#x2F;&#x2F; 完全初始化</span><br><span class="line">  int arr1[] &#x3D; &#123;1,2,3,4,5,6,7,8,9,10&#125; &#x2F;&#x2F; 正确，定义的时候并没有确定大小， 初始化后才确定的大小 </span><br><span class="line">  arr2 &#x3D; &#123;1,2,3,4,5,&#125;&#x2F;&#x2F; 不可行， 数组只有在初始化的时候可以统一赋值 </span><br><span class="line">  int arr2 [5] &#x3D; &#123;1,2,3,4,5,6,7&#125;; &#x2F;&#x2F; 语法上可以，但是逻辑上不允许， 涉嫌越界</span><br><span class="line">  int arr3[50] &#x3D; &#123;1,2,3,4,5&#125;; &#x2F;&#x2F; 不完全初始化 ， 没有初始化部分自动填充0 </span><br></pre></td></tr></table></figure><h2 id="对数组名称的理解"><a href="#对数组名称的理解" class="headerlink" title="对数组名称的理解"></a>对数组名称的理解</h2><p>总的来说，环境不同，数组名称的意义就不同。</p><ol><li>表示整个数组</li></ol><ul><li><p>在定义的时候</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int arr[3]&#x3D;&#123;0,1,2&#125;</span><br></pre></td></tr></table></figure></li><li><p>在sizeof语句中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int len&#x3D;sizeof(arr)&#x2F;sizeof(int); &#x2F;&#x2F;求长度</span><br></pre></td></tr></table></figure></li><li><p>在取地址&amp;arr时</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">int *p&#x3D;&amp;arr;</span><br></pre></td></tr></table></figure></li></ul><ol start="2"><li> 在其余时候都表示数组中第一个元素的地址。</li></ol><blockquote><p>当数组名确定后，数组名就是一个地址常量，不能更改。但可以把数组赋值给指针。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int *p;</span><br><span class="line">p&#x3D;arr;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>几小时带你学会Python-之-1</title>
      <link href="2021/09/25/ji-xiao-shi-dai-ni-xue-hui-python-zhi-1/"/>
      <url>2021/09/25/ji-xiao-shi-dai-ni-xue-hui-python-zhi-1/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>网络上有许多的语言，那么最容易上手的是什么呢？我认为是Python,用几个小时小白也能学会，而且，Python是一种很好的工具，编写起来十分简单，达到目的的效果快，比如一些的网络安全大赛的解题很多都是使用的Python，大学生，如果平时没事，写写Python脚本，抢抢课，签签到，你还在睡懒觉，别人没抢到，你啥都做完了。所以，Python是一种神奇的存在。（本教程为Python2脚本）</p><h1 id="基础语法"><a href="#基础语法" class="headerlink" title="基础语法"></a>基础语法</h1><p>Python的语法十分简单，易于维护。下面展示我的第一个Python脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print (&quot;Hello, Python!&quot;)</span><br></pre></td></tr></table></figure><p>只需要在交互式命令窗口输入命令运行即可。看到结果是否很兴奋。</p><h2 id="一行代码"><a href="#一行代码" class="headerlink" title="一行代码"></a>一行代码</h2><p>Python 可以同一行显示多条语句，方法是用分号 ; 分开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; print (&#39;hello&#39;);print (&#39;python&#39;);</span><br><span class="line">hello</span><br><span class="line">python</span><br></pre></td></tr></table></figure><h2 id="保留关键词"><a href="#保留关键词" class="headerlink" title="保留关键词"></a>保留关键词</h2><p>Python有的词不能作为变量名，被Python保留了下来，它们是</p><table><thead><tr><th align="center">保留的</th><th align="center">关键词</th><th align="center">不能用</th></tr></thead><tbody><tr><td align="center">and</td><td align="center">exec</td><td align="center">not</td></tr><tr><td align="center">assert</td><td align="center">finally</td><td align="center">or</td></tr><tr><td align="center">break</td><td align="center">for</td><td align="center">pass</td></tr><tr><td align="center">class</td><td align="center">from</td><td align="center">print</td></tr><tr><td align="center">continue</td><td align="center">global</td><td align="center">raise</td></tr><tr><td align="center">def</td><td align="center">if</td><td align="center">return</td></tr><tr><td align="center">del</td><td align="center">import</td><td align="center">try</td></tr><tr><td align="center">elif</td><td align="center">in</td><td align="center">while</td></tr><tr><td align="center">else</td><td align="center">is</td><td align="center">with</td></tr><tr><td align="center">except</td><td align="center">lambda</td><td align="center">yield</td></tr></tbody></table><h2 id="缩进"><a href="#缩进" class="headerlink" title="缩进"></a>缩进</h2><p>Python和其他语言的最大区别是不用{}包围代码块，而是用严格的缩进要求的，比如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if True:</span><br><span class="line">    print (&quot;True&quot;)</span><br><span class="line">else:</span><br><span class="line">    print (&quot;False&quot;)</span><br></pre></td></tr></table></figure><p>就是代码必须保证它的空格数相同。否则会报错</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if True:</span><br><span class="line">    print (&quot;True&quot;)</span><br><span class="line">else:</span><br><span class="line">    print (&quot;False&quot;)</span><br><span class="line"> print(&#39;other&#39;)</span><br></pre></td></tr></table></figure><p>以上的代码会报错，最后一个print没有严格的缩进空格，以后大家注意点就行。</p><h2 id="一句多行"><a href="#一句多行" class="headerlink" title="一句多行"></a>一句多行</h2><p>如果是多行的代码，可以使用反斜杠连接，如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; b + \\</span><br><span class="line">    c + \\</span><br><span class="line">    d</span><br></pre></td></tr></table></figure><p>语句中包含()[]{}就不需要\连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">numbers &#x3D; [1 ,2 ,3 , 4 ,5 ,</span><br><span class="line">           6 ,7 ,8 ,9 ]</span><br></pre></td></tr></table></figure><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>Python的注释采用#,’’’,”””进行注释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">print(&#39;Hi Python&#39;)  #我是注释，不会被执行</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">我们是多行注释</span><br><span class="line">注释</span><br><span class="line">注释</span><br><span class="line">&#39;&#39;&#39;</span><br><span class="line">print(&#39;ha ha&#39;)</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">我们也是多行注释</span><br><span class="line">注释</span><br><span class="line">注释</span><br><span class="line">&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><h2 id="中文处理"><a href="#中文处理" class="headerlink" title="中文处理"></a>中文处理</h2><p>如果Python脚本遇到中文，程序会报错，需要在文件开头声明编码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: UTF-8 -*-</span><br><span class="line">print(&#39;哈哈&#39;)</span><br></pre></td></tr></table></figure><h2 id="等待用户输入"><a href="#等待用户输入" class="headerlink" title="等待用户输入"></a>等待用户输入</h2><p>在Python中\n表示换行，raw_input函数，等待用户输入，然后按下enter退出。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">raw_input(&quot;按下 enter 键退出，其他任意键显示...\n&quot;)</span><br></pre></td></tr></table></figure><h2 id="print函数"><a href="#print函数" class="headerlink" title="print函数"></a>print函数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x&#x3D;&quot;a&quot;</span><br><span class="line">y&#x3D;&quot;b&quot;</span><br><span class="line"># 换行输出</span><br><span class="line">print x</span><br><span class="line">print y</span><br><span class="line"></span><br><span class="line">print &#39;---------&#39;</span><br><span class="line"># 不换行输出</span><br><span class="line">print x,</span><br><span class="line">print y,</span><br><span class="line"></span><br><span class="line"># 不换行输出</span><br><span class="line">print x,y</span><br></pre></td></tr></table></figure><p>结果是</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a </span><br><span class="line">b</span><br><span class="line">-------</span><br><span class="line">a b a b</span><br></pre></td></tr></table></figure><h1 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a>变量类型</h1><p>Python也有变量，也要类型，不过编写简单。也是采用”变量名=变量值”的方式，就是将变量值赋值给变量名。<br>Python标准变量有以下类型</p><ul><li>Numbers（数字）</li><li>String（字符串）</li><li>List（列表）</li><li>Tuple（元组）</li><li>Dictionary（字典）</li></ul><h2 id="赋值变量"><a href="#赋值变量" class="headerlink" title="赋值变量"></a>赋值变量</h2><h3 id="单个赋值"><a href="#单个赋值" class="headerlink" title="单个赋值"></a>单个赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; 1 #这是整型</span><br><span class="line">b &#x3D; 2.0 #浮点</span><br><span class="line">c &#x3D; &quot;3&quot; #字符串</span><br></pre></td></tr></table></figure><h3 id="多个赋值"><a href="#多个赋值" class="headerlink" title="多个赋值"></a>多个赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; b &#x3D; c &#x3D; 1</span><br></pre></td></tr></table></figure><p>a,b,c都被赋值为了1</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a , b , c &#x3D; 1 , 2.0 , &quot;ha ha&quot;</span><br></pre></td></tr></table></figure><p>a,b,c分别被赋值为了整型1,浮点2.0,字符串ha ha</p><h2 id="数字"><a href="#数字" class="headerlink" title="数字"></a>数字</h2><p>数字赋值时，number对象会被创建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; 1</span><br><span class="line">b &#x3D; 2</span><br><span class="line">c &#x3D; 3</span><br></pre></td></tr></table></figure><p>del可以删除对象的引用。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">del a</span><br><span class="line">del b , c</span><br></pre></td></tr></table></figure><p>数字有四种类型</p><ul><li>int（有符号整型）</li><li>long（长整型，也可以代表八进制和十六进制）</li><li>float（浮点型）</li><li>complex（复数）</li></ul><p>实例</p><table><thead><tr><th align="center">int</th><th align="center">long</th><th align="center">float</th><th align="center">complex</th></tr></thead><tbody><tr><td align="center">10</td><td align="center">51924361L</td><td align="center">0.0</td><td align="center">3.14j</td></tr><tr><td align="center">100</td><td align="center">-0x19323L</td><td align="center">15.20</td><td align="center">45.j</td></tr><tr><td align="center">-786</td><td align="center">0122L</td><td align="center">-21.9</td><td align="center">9.322e-36j</td></tr><tr><td align="center">080</td><td align="center">0xDEFABCECBDAECBFBAEl</td><td align="center">32.3e+18</td><td align="center">.876j</td></tr><tr><td align="center">-0490</td><td align="center">535633629843L</td><td align="center">-90.</td><td align="center">-.6545+0J</td></tr><tr><td align="center">-0x260</td><td align="center">-052318172735L</td><td align="center">-32.54e100</td><td align="center">3e+26J</td></tr><tr><td align="center">0x69</td><td align="center">-4721885298529L</td><td align="center">70.2E-12</td><td align="center">4.53e-7j</td></tr></tbody></table><blockquote><p>注意：long 类型只存在于 Python2.X 版本中，在 2.2 以后的版本中，int 类型数据溢出后会自动转为long类型。在 Python3.X 版本中 long 类型被移除，使用 int 替代</p></blockquote><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><p>字符串就是字母，数字，或者其他字符组成的一串文字。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; &quot;我是字符串&quot;</span><br></pre></td></tr></table></figure><p>其中，它们的下标对应关系</p><table><thead><tr><th align="center">我</th><th align="center">是</th><th align="center">字</th><th align="center">符</th><th align="center">串</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">4</td></tr><tr><td align="center">-5</td><td align="center">-4</td><td align="center">-3</td><td align="center">-2</td><td align="center">-1</td></tr></tbody></table><p>可以通过下标访问字符串。比如语法[头下标:尾下标]，但是“有头无尾”，就是包括下标头，不包括下标尾。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; &#39;我是字符串&#39;</span><br><span class="line">b &#x3D; a[1:3]</span><br><span class="line">print(b)</span><br></pre></td></tr></table></figure><p>结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">是字</span><br></pre></td></tr></table></figure><p>其他例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">str &#x3D; &#39;Hello World!&#39;</span><br><span class="line"> </span><br><span class="line">print str           # 输出完整字符串</span><br><span class="line">print str[0]        # 输出字符串中的第一个字符</span><br><span class="line">print str[2:5]      # 输出字符串中第三个至第六个之间的字符串</span><br><span class="line">print str[2:]       # 输出从第三个字符开始的字符串</span><br><span class="line">print str * 2       # 输出字符串两次</span><br><span class="line">print str + &quot;TEST&quot;  # 输出连接的字符串</span><br></pre></td></tr></table></figure><p>输出结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br><span class="line">H</span><br><span class="line">llo</span><br><span class="line">llo World!</span><br><span class="line">Hello World!Hello World!</span><br><span class="line">Hello World!TEST</span><br></pre></td></tr></table></figure><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>列表使用[]包围，索引类似于Python字符串，从左到右为0至+∞，从左往右为-1到-∞,支持[头下标：尾下标]用法。并且支持运算*和+</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; [&#39;一&#39;,&#39;二&#39;,&#39;三&#39;,&#39;四&#39;,&#39;五&#39;]  #这里定义了一个列表</span><br><span class="line">b &#x3D;[5,2.5,155]  #这也是一个列表</span><br><span class="line">print a               # 输出完整列表</span><br><span class="line">print a[0]            # 输出列表的第一个元素</span><br><span class="line">print a[1:3]          # 输出第二个至第三个元素 </span><br><span class="line">print a[2:]           # 输出从第三个开始至列表末尾的所有元素</span><br><span class="line">print a * 2       # 输出列表两次</span><br><span class="line">print a + b    # 打印组合的列表</span><br></pre></td></tr></table></figure><p>运行结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[&#39;一&#39;,&#39;二&#39;,&#39;三&#39;,&#39;四&#39;,&#39;五&#39;]</span><br><span class="line">一</span><br><span class="line">[&quot;二&quot;,&quot;三&quot;]</span><br><span class="line">[&#39;三&#39;,&#39;四&#39;,&#39;五&#39;]</span><br><span class="line">[&#39;一&#39;,&#39;二&#39;,&#39;三&#39;,&#39;四&#39;,&#39;五&#39;,&#39;一&#39;,&#39;二&#39;,&#39;三&#39;,&#39;四&#39;,&#39;五&#39;]</span><br><span class="line">[&#39;一&#39;,&#39;二&#39;,&#39;三&#39;,&#39;四&#39;,&#39;五&#39;,5,2.5,155]</span><br></pre></td></tr></table></figure><h2 id="元组"><a href="#元组" class="headerlink" title="元组"></a>元组</h2><p>和列表用法相似，是使用()包围，最大不同是，列表元素可修改，而元组不可修改。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D; (1,2,3,4) #我是一个元组</span><br><span class="line">b &#x3D; [1,2,3,4] #我是一个列表</span><br><span class="line">print a[0],b[0] #输出1  1</span><br><span class="line">a[0]&#x3D;100  #a是元组，不能修改，会报错</span><br><span class="line">b[0]&#x3D;100  #b是列表，正常修改为[100,2,3,4]</span><br></pre></td></tr></table></figure><h2 id="字典"><a href="#字典" class="headerlink" title="字典"></a>字典</h2><p>字典，听其名，便可以知道其高级，能够应用查阅。使用{}定义</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a &#x3D;&#123;&#125; #定义一个空字典</span><br><span class="line">a[&quot;she&quot;]&#x3D;&quot;she is girl&quot;</span><br><span class="line">a[&quot;he&quot;]&#x3D;&quot;he is boy&quot;</span><br><span class="line"></span><br><span class="line">b&#x3D;&#123;&quot;你&quot;:&quot;you&quot;,&quot;我&quot;:&quot;I&quot;,&quot;他&quot;:555&#125;</span><br><span class="line"></span><br><span class="line">print a #输出a字典</span><br><span class="line">print b[&#39;你&#39;]  在b字典中查询&#39;你&#39;的值</span><br><span class="line">print b.keys() #输出所有键,列表</span><br><span class="line">print b.values() #输出所有值，列表</span><br></pre></td></tr></table></figure><p>结果如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;she&quot;:&quot;she is girl&quot;,&quot;he&quot;:&quot;he is boy&quot;&#125;</span><br><span class="line">you</span><br><span class="line">[&quot;你&quot;,&quot;我&quot;,&quot;他&quot;]</span><br><span class="line">[&quot;you&quot;,&quot;I&quot;,555]</span><br></pre></td></tr></table></figure><h2 id="数据的类型是可以转换的"><a href="#数据的类型是可以转换的" class="headerlink" title="数据的类型是可以转换的"></a>数据的类型是可以转换的</h2><table><thead><tr><th align="center">函数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">int(x [,base])</td><td align="center">将x转换为一个整数</td></tr><tr><td align="center">long(x [,base] )</td><td align="center">将x转换为一个长整数</td></tr><tr><td align="center">float(x)</td><td align="center">将x转换到一个浮点数</td></tr><tr><td align="center">complex(real [,imag])</td><td align="center">创建一个复数</td></tr><tr><td align="center">str(x)</td><td align="center">将对象 x 转换为字符串</td></tr><tr><td align="center">repr(x)</td><td align="center">将对象 x 转换为表达式字符串</td></tr><tr><td align="center">eval(str)</td><td align="center">用来计算在字符串中的有效Python表达式,并返回一个对象</td></tr><tr><td align="center">tuple(s)</td><td align="center">将序列 s 转换为一个元组</td></tr><tr><td align="center">list(s)</td><td align="center">将序列 s 转换为一个列表</td></tr><tr><td align="center">set(s)</td><td align="center">转换为可变集合</td></tr><tr><td align="center">dict(d)</td><td align="center">创建一个字典。d 必须是一个序列 (key,value)元组。</td></tr><tr><td align="center">frozenset(s)</td><td align="center">转换为不可变集合</td></tr><tr><td align="center">chr(x)</td><td align="center">将一个整数转换为一个字符</td></tr><tr><td align="center">unichr(x)</td><td align="center">将一个整数转换为Unicode字符</td></tr><tr><td align="center">ord(x)</td><td align="center">将一个字符转换为它的整数值</td></tr><tr><td align="center">hex(x)</td><td align="center">将一个整数转换为一个十六进制字符串</td></tr><tr><td align="center">oct(x)</td><td align="center">将一个整数转换为一个八进制字符串</td></tr><tr><td align="center">以上函数可以返回一个新对象，作为转换后的值。</td><td align="center"></td></tr></tbody></table><p>更多相关信息可以了解</p><ul><li>Python中文文档<a href="https://m.runoob.com/manual/pythontutorial/docs/html/">Python2.7版 入门指南</a></li><li>Python官方文档<a href="https://www.python.org/doc/">https://www.python.org/doc/</a></li><li>Python 官网 <a href="https://www.python.org/">https://www.python.org</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python2 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python2 </tag>
            
            <tag> Python </tag>
            
            <tag> 脚本 </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android的java运行方案</title>
      <link href="2021/09/17/android-de-java-yun-xing-fang-an/"/>
      <url>2021/09/17/android-de-java-yun-xing-fang-an/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>java语言早已经被各大厂商，集团，学校，社会等运用，并且发挥了巨大的作用，一般来说，java具有可移植的特性，能够被广泛的运用到各大平台，在Windows,Linux,Mac等平台已经常而常之，但是在Android环境运行如何呢？</p><h1 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h1><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>既然Linux可以使用java环境的JDK包，那么在Android上可以进行使用，软件Termux能够完成这一设想。</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>官方为我们提供了JDK,便可以直接使用</p><ol><li><p>查询官方的JDK</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg search jdk</span><br></pre></td></tr></table></figure></li><li><p>根据提示进行安装官方提供的JDK版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install openjdk-17</span><br></pre></td></tr></table></figure></li><li><p>最后可以检查安装是否完成</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></li></ol><h2 id="运行java"><a href="#运行java" class="headerlink" title="运行java"></a>运行java</h2><ul><li><p>如果你有写好的java文件，可以通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd storage&#x2F;shared&#x2F;你的文件目录</span><br></pre></td></tr></table></figure></li><li><p>然后进行编译</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">javac 你的java文件名.java</span><br></pre></td></tr></table></figure></li><li><p>最后运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java 你的文件名</span><br></pre></td></tr></table></figure></li></ul><h1 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h1><h2 id="工具-1"><a href="#工具-1" class="headerlink" title="工具"></a>工具</h2><p>在Android平台,有一款集成java的开发环境的软件，它就是AIDE,这个操作就比较简单，下载软件安装即可。</p><h2 id="操作-1"><a href="#操作-1" class="headerlink" title="操作"></a>操作</h2><ol><li>在Google Play或者其它运用商店搜索“AIDE”并下载。</li><li>在你的项目目录新建JAVA程序</li><li>书写你的java代码</li><li>点击右上角的运行即可调试</li></ol><h1 id="方案三"><a href="#方案三" class="headerlink" title="方案三"></a>方案三</h1><h2 id="工具-2"><a href="#工具-2" class="headerlink" title="工具"></a>工具</h2><p>在移动端上，可以利用浏览器在线运行java程序，可以自行搜索<a href="https://baidu.com/s?word=%E5%9C%A8%E7%BA%BFjava%E8%BF%90%E8%A1%8C">在线java运行</a></p><h2 id="在线工具"><a href="#在线工具" class="headerlink" title="在线工具"></a>在线工具</h2><ul><li><p>在线<a href="https://www.bejson.com/runcode/java/">BeJson</a>工具：<a href="https://www.bejson.com/runcode/java/">https://www.bejson.com/runcode/java/</a></p></li><li><p><a href="https://c.runoob.com/compile/10/">菜鸟工具</a>运行Java<br>：<a href="https://c.runoob.com/compile/10/">https://c.runoob.com/compile/10/</a></p></li><li><p><a href="https://tool.lu/coderunner">Tool.lu</a>网站：<a href="https://tool.lu/coderunner">https://tool.lu/coderunner</a></p></li></ul><p>其它好用的工具可<a href="https://baidu.com/">百度一下</a>：<a href="https://baidu.com/s?word=%E5%9C%A8%E7%BA%BFjava%E8%BF%90%E8%A1%8C">在线java运行</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 编译器 </tag>
            
            <tag> Termux </tag>
            
            <tag> Java </tag>
            
            <tag> JDK </tag>
            
            <tag> AIDE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android平台，C语言的运行</title>
      <link href="2021/09/09/android-ping-tai-c-yu-yan-de-yun-xing/"/>
      <url>2021/09/09/android-ping-tai-c-yu-yan-de-yun-xing/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>都知道，在Windows,Linux,Mac等平台上，C语言程序的运行十分简单，但是在移动端上，比如Android系统上，就存在一些困难。本文就是为解决这一问题而生。</p><h1 id="方案一"><a href="#方案一" class="headerlink" title="方案一"></a>方案一</h1><p>我比较推荐，因为这个方法比较完善，C语言执行结果较好。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>需要运行如下C语言程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main() &#123;</span><br><span class="line">  printf(&quot;HelloWorld!My C\n&quot;);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><ol><li><p>在Google Play或者其他应用商店下载Termux软件并安装。</p></li><li><p>打开Termux,执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br></pre></td></tr></table></figure><p>命令，没有出现storage字样，就必须</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-setup-storage</span><br></pre></td></tr></table></figure><p>方便以后访问sdcard文件内容。</p></li><li><p>了解Termux软件的目录是~/storage/shared/，其下文件才是你在系统的文件管理器下看到的文件</p></li><li><p> 安装C语言编译程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install clang</span><br></pre></td></tr></table></figure></li></ol><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>首先执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd storage&#x2F;shared&#x2F;</span><br></pre></td></tr></table></figure><p>接下来便可以执行你的C语言程序了。<br>我需要运行上述需求里的C语言代码，我需要新建一个文件夹（如myc文件夹），可以手动用文件管理器创建，也可以用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir myc</span><br></pre></td></tr></table></figure><p>打开新建的文件夹（我新建的是myc文件夹，所以我打开cd myc）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd myc</span><br></pre></td></tr></table></figure><p>下面可以手动或者命令新建一个以.c结尾的文件，（我创建一个ifirst.c）,用文本的方式打开，输入上述需求中的代码。保存后，就可以运行了。</p><h2 id="运行C"><a href="#运行C" class="headerlink" title="运行C"></a>运行C</h2><ol><li><p>可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -o te ifirst.c</span><br></pre></td></tr></table></figure><p>编译ifirst.c文件，生成te文件，接着运行编译好了的te文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;te</span><br></pre></td></tr></table></figure><p>就可以看见程序输出HelloWorld!My C的结果了。</p></li><li><p>也可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">clang ifirst.c</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc ifirst.c</span><br></pre></td></tr></table></figure><p>两者效果一样<br>编译ifirst.c文件，生成a.out文件，接着运行编译好了的a.out文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.&#x2F;a.out</span><br></pre></td></tr></table></figure><p>也会得到HelloWorld!My C的结果</p></li></ol><h2 id="关于Permission-denied的错误处理"><a href="#关于Permission-denied的错误处理" class="headerlink" title="关于Permission denied的错误处理"></a>关于Permission denied的错误处理</h2><p>运行上述编译好了的文件te或者a.out有的会报错：Permission denied，建议按照如下方法处理。<br>原因是在sdcard目录没有运行的权限</p><ul><li><p>可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp  .&#x2F;te  ~&#x2F;te</span><br></pre></td></tr></table></figure><p>再运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~&#x2F;te</span><br></pre></td></tr></table></figure><p>结果变正常了</p></li><li><p>或者使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp  .&#x2F;a.out  ~&#x2F;a.out</span><br></pre></td></tr></table></figure><p>再运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~&#x2F;a.out</span><br></pre></td></tr></table></figure><p>也可以</p></li><li><p>使用脚本</p></li></ul><ol><li>下载runC文件:<a href="https://gitee.com/kuangtant/runC/repository/archive/master.zip">下载runC</a>，解压后将其中的runC文件复制到C语言程序目录<br>或者 在C语言程序目录<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O runC https:&#x2F;&#x2F;gitee.com&#x2F;kuangtant&#x2F;runC&#x2F;raw&#x2F;master&#x2F;runC</span><br></pre></td></tr></table></figure></li><li>将runC文件和你要运行的C语言程序放在一起，采用gcc 编译，我的是ifirst.c<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc ifirst.c</span><br></pre></td></tr></table></figure>生成a.out文件</li><li>最后，命令执行<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash runC</span><br></pre></td></tr></table></figure>就可以看到结果了</li></ol><h1 id="方案二"><a href="#方案二" class="headerlink" title="方案二"></a>方案二</h1><p>网络上的<a href="https://m.baidu.com/from=1023640y/s?word=:C%E8%AF%AD%E8%A8%80%E7%BC%96%E8%AF%91%E5%99%A8&ie=utf-8">C语言编译器</a>较多，可以下载使用，不过还是最推荐方案一;</p><p>由于这类产品的编译结果及原理各有千秋，所以，具体效果如何，就不一一推荐了。</p><h1 id="本文视频教程"><a href="#本文视频教程" class="headerlink" title="本文视频教程"></a>本文视频教程</h1><ol><li>优酷视频：<a href="https://v.youku.com/v_show/id_XNTgwNzg3MDQyOA==.html">https://v.youku.com/v_show/id_XNTgwNzg3MDQyOA==.html</a></li><li>腾讯视频：<a href="https://v.qq.com/x/page/y3277qnfm8s.html">https://v.qq.com/x/page/y3277qnfm8s.html</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> C </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> C </tag>
            
            <tag> 编译器 </tag>
            
            <tag> Termux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git的详细配置</title>
      <link href="2021/09/02/git-de-xiang-xi-pei-zhi/"/>
      <url>2021/09/02/git-de-xiang-xi-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h1><p>安装好Git后，便可以进行配置了，后面就可以体验它的强大功能了。</p><h1 id="配置信息"><a href="#配置信息" class="headerlink" title="配置信息"></a>配置信息</h1><h2 id="全局配置"><a href="#全局配置" class="headerlink" title="全局配置"></a>全局配置</h2><p> 我们要使用Git就必须登陆它，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &#39;用户名&#39;</span><br></pre></td></tr></table></figure><p>接着邮箱</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &#39;xxxx@your.email&#39;</span><br></pre></td></tr></table></figure><p>这一配置是全局配置，任何项目都会用到其用户名和邮箱，因为配置了global。</p><h2 id="局部配置"><a href="#局部配置" class="headerlink" title="局部配置"></a>局部配置</h2><p>若想在某一项目不用该邮箱，用户名，只需要在该项目根目录重新执行命令，去掉–global就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config  user.name &#39;新用户名&#39;</span><br><span class="line">git config  user.email &#39;新邮箱&#39;</span><br></pre></td></tr></table></figure><p>简单来说，只是本项目使用了该新邮箱用户名，全局的配置没有变。</p><h1 id="查看配置"><a href="#查看配置" class="headerlink" title="查看配置"></a>查看配置</h1><h2 id="全部配置"><a href="#全部配置" class="headerlink" title="全部配置"></a>全部配置</h2><p>查看当前配置信息，可使用 git config –list 命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --list</span><br></pre></td></tr></table></figure><h2 id="特定配置"><a href="#特定配置" class="headerlink" title="特定配置"></a>特定配置</h2><p>可以输入git config <key>查看某一特定的配置：<br>如user.email.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config user.email</span><br></pre></td></tr></table></figure><h1 id="编辑器"><a href="#编辑器" class="headerlink" title="编辑器"></a>编辑器</h1><p>git默认采用的是vim,但是你也可以选择其他的编辑器，如emas，可以这样做：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.editor emas</span><br></pre></td></tr></table></figure><p>对于 Notepad++，一个流行的代码编辑器来说，你可能想要使用 32 位的版本， 因为在本书编写时 64 位的版本尚不支持所有的插件。 如果你在使用 32 位的 Windows 系统，或在 64 位系统上使用 64 位的编辑器，那么你需要输入如下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global core.editor &quot;&#39;C:&#x2F;Program Files&#x2F;Notepad++&#x2F;notepad++.exe&#39; -multiInst -notabbar -nosession -noPlugin&quot;</span><br></pre></td></tr></table></figure><h1 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h1><p>这个很重要，需要执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &#39;登录邮箱&#39;</span><br></pre></td></tr></table></figure><h1 id="获取密钥"><a href="#获取密钥" class="headerlink" title="获取密钥"></a>获取密钥</h1><p>上述命令执行完成后，在根目录的.ssh目录下会生成id-rsa.pub文件，在这个文件里就是密钥，用文本的方式打开，复制全部密钥。将其粘贴到<a href="https://www.gitee.com/">gitee</a>、<a href="https://www.github.com/">github</a>或者你的远程仓库服务端。</p><p>git服务端都有个人账户设置，进去找到ssh key的选项，粘贴到里面就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 配置 </tag>
            
            <tag> 密钥 </tag>
            
            <tag> 仓库 </tag>
            
            <tag> gitee </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各平台安装Git</title>
      <link href="2021/08/28/ge-ping-tai-an-zhuang-git/"/>
      <url>2021/08/28/ge-ping-tai-an-zhuang-git/</url>
      
        <content type="html"><![CDATA[<h1 id="git的简介"><a href="#git的简介" class="headerlink" title="git的简介"></a>git的简介</h1><p>git目前是世界上最先进的分布式版本控制系统，能够通过命令代码进行控制，支持对源码资源进行一系列的控制。</p><h1 id="git的安装"><a href="#git的安装" class="headerlink" title="git的安装"></a>git的安装</h1><h2 id="linux平台"><a href="#linux平台" class="headerlink" title="linux平台"></a>linux平台</h2><p>Linux可以使用一些安装包管理工具（如apt-get）进行安装，但Git需要安装curl、zlib、expat等依赖工具。</p><h3 id="Debian-Ubuntu安装"><a href="#Debian-Ubuntu安装" class="headerlink" title="Debian/Ubuntu安装"></a>Debian/Ubuntu安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \  libz-dev libssl-dev  #安装相关依赖包</span><br><span class="line"></span><br><span class="line">$ apt-get install git #安装Git</span><br><span class="line"></span><br><span class="line">$ git --version #检查Git版本</span><br><span class="line">git version 1.8.1.2 </span><br></pre></td></tr></table></figure><h3 id="Centos-RedHat安装"><a href="#Centos-RedHat安装" class="headerlink" title="Centos/RedHat安装"></a>Centos/RedHat安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ yum install curl-devel expat-devel gettext-devel \ openssl-devel zlib-devel #安装依赖</span><br><span class="line"></span><br><span class="line">$ yum -y install git-core #安装Git</span><br><span class="line"></span><br><span class="line">$ git --version #检查Git版本</span><br><span class="line">git version 1.7.1</span><br></pre></td></tr></table></figure><h2 id="windows平台"><a href="#windows平台" class="headerlink" title="windows平台"></a>windows平台</h2><p>在windows平台安装相对容易，可以从以下途径安装相应版本的Git</p><ul><li>渠道1： <a href="https://gitforwindows.org/">https://gitforwindows.org/</a></li><li>渠道2：淘宝镜像<br><a href="https://npm.taobao.org/mirrors/git-for-windows/">https://npm.taobao.org/mirrors/git-for-windows/</a><br>下载exe文件直接运行就可以安装完成</li></ul><h2 id="Mac平台"><a href="#Mac平台" class="headerlink" title="Mac平台"></a>Mac平台</h2><p>在Mac上，同样也是只需要手动下载安装即可<br><a href="http://sourceforge.net/projects/git-osx-installer/">http://sourceforge.net/projects/git-osx-installer/</a></p><h2 id="android平台"><a href="#android平台" class="headerlink" title="android平台"></a>android平台</h2><p>在安卓平台没有官方的git工具，但是第三方的软件却不少。</p><p>在这里比较推荐的是Termux软件，可以模拟Linux环境，进而安装Git。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install git </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> Git </tag>
            
            <tag> Windows </tag>
            
            <tag> gitee </tag>
            
            <tag> github </tag>
            
            <tag> 开源 </tag>
            
            <tag> 版本 </tag>
            
            <tag> Linux </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown 的进修史</title>
      <link href="2021/08/25/markdown-de-jin-xiu-shi/"/>
      <url>2021/08/25/markdown-de-jin-xiu-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown-的进修史"><a href="#Markdown-的进修史" class="headerlink" title="Markdown 的进修史 "></a>Markdown 的进修史 </h1><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>markdown是一种轻量级的标记语言，在中国各大平台普遍受欢迎，且其编辑的文档可简易的导出为HTML，Word，PDF等多种文档格式，很有学习的必要。</p></blockquote><p>Markdown的文档后缀为<kbd>.md</kbd>或<kbd>.markdown</kbd>。</p><h2 id="用途"><a href="#用途" class="headerlink" title="用途"></a>用途</h2><p>Markdown常被用来编写各样的文本，电子书籍，不少网站的文章编辑都是使用的Markdown（<a href="https://jianshu.com/">简书</a>,<a href="https://github.com/">GitHub</a>…）以及一些论坛，很多的评论区，都支持Markdown。</p><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><p>Markdown编辑器有很多，可自行百度：<a href="https://www.baidu.com/s?ie=UTF-8&wd=Mark%E7%BC%96%E8%BE%91%E5%B7%A5%E5%85%B7">Markdown编辑工具</a></p><p>常见的Markdown编辑工具</p><ul><li>Typora 编辑器 </li></ul><blockquote><p>官网下载：<a href="https://typora.io/">https://typora.io</a> </p><p>Typora 支持 MacOS 、Windows、Linux 平台，且包含多种主题，编辑后直接渲染出效果。支持导出HTML、PDF、Word、图片等多种类型文件。</p></blockquote><ul><li><p>Quiver</p><blockquote><p>官网下载：<a href="https://happenapps.com/">https://happenapps.com</a></p><p>Quiver似乎是为程序猿准备的Markdown编辑器，可在其内轻松渲染代码和公式，具有丰富的程序员样式，自动保存，自动备份。（本文用该工具）</p></blockquote></li><li><p>在线编辑器</p><blockquote><ol><li>在线工具：<a href="https://tool.lu/markdown/">https://tool.lu/markdown/</a></li><li>小书匠：<a href="http://markdown.xiaoshujiang.com/">http://markdown.xiaoshujiang.com/</a></li><li>Dillinger：<a href="https://dillinger.io/">https://dillinger.io/</a></li><li>孟坤工具：<a href="http://tool.mkblog.cn/markdown/">http://tool.mkblog.cn/markdown/</a></li></ol></blockquote></li></ul><p>由于这类工具还有很多就不一一列举，可参照 <a href="https://www.jianshu.com/p/758946877823">十大markdown编辑器</a>，找到最适合自己的那款。</p><h2 id="推荐书籍"><a href="#推荐书籍" class="headerlink" title="推荐书籍"></a>推荐书籍</h2><p>《了不起的Markdown》</p><h1 id="教程开始"><a href="#教程开始" class="headerlink" title="教程开始"></a>教程开始</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><ol><li><p>标题是文档的开始，Markdown用<kbd>=</kbd>和<kbd>-</kbd>来标记一级和二级标题。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">一级标题</span><br><span class="line">=======</span><br><span class="line">二级标题</span><br><span class="line">-------</span><br></pre></td></tr></table></figure></li></ol><p>​      结果：</p><p><img src="" alt="标题演示"></p><ol start="2"><li><p>还可使用<kbd>#</kbd>标记</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">#  一级标题</span></span><br><span class="line"><span class="section">##  二级标题</span></span><br><span class="line"><span class="section">###  三级标题</span></span><br><span class="line"><span class="section">####  四级标题</span></span><br><span class="line"><span class="section">#####  五级标题</span></span><br><span class="line"><span class="section">######  六级标题</span></span><br></pre></td></tr></table></figure></li></ol><p>​    结果：</p><p><img src="" alt="标题演示"></p><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><ol><li><p>直接形式，编辑好文字，文字后加上<kbd> </kbd><kbd> </kbd>两个空格，在一个<kbd>回车</kbd>键。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">我是文字  </span><br><span class="line">我是文字  </span><br></pre></td></tr></table></figure></li></ol><p>2.也可以使用空行表示新段落。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">我是文字</span><br><span class="line"></span><br><span class="line">我是文字</span><br></pre></td></tr></table></figure><ol start="3"><li><p>字体有 斜体，粗体，斜体粗体</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="emphasis">*斜体文本*</span></span><br><span class="line"><span class="emphasis">_斜体文本_</span></span><br><span class="line"><span class="strong">**粗体文本**</span></span><br><span class="line"><span class="strong">__粗体文本__</span></span><br><span class="line"><span class="strong">**<span class="emphasis">*粗斜体文本<span class="strong">**<span class="emphasis">*</span></span></span></span></span><br><span class="line"><span class="strong"><span class="emphasis"><span class="strong"><span class="emphasis"><span class="strong">__<span class="emphasis">_粗斜体文本<span class="strong">__<span class="emphasis">_</span></span></span></span></span></span></span></span></span><br></pre></td></tr></table></figure></li><li><p>分割线</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis"></span></span></span><br><span class="line"><span class="strong"><span class="emphasis">*</span> <span class="emphasis">* *</span></span></span><br><span class="line"><span class="strong"></span></span><br><span class="line"><span class="strong">**</span><span class="strong">**<span class="emphasis">*</span></span></span><br><span class="line"><span class="strong"><span class="emphasis"></span></span></span><br><span class="line"><span class="strong"><span class="emphasis">- - -</span></span></span><br><span class="line"><span class="strong"><span class="emphasis"></span></span></span><br><span class="line"><span class="strong"><span class="emphasis">----------</span></span></span><br></pre></td></tr></table></figure></li><li><p>下划线</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>带下划线文本<span class="xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li><li><p>删除线</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">文本文本</span><br><span class="line">~~文本文本~~</span><br></pre></td></tr></table></figure></li><li><p>脚注，<kbd>[^要注明的文本]</kbd></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">创建脚注格式类似这样 [^hi kuangtant]。</span><br><span class="line"></span><br><span class="line">[<span class="symbol">^hi kuangtant</span>]: <span class="link">你好，kuangtant！</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> Typora </tag>
            
            <tag> Markdown编辑器 </tag>
            
            <tag> Quiver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo 发射！！！</title>
      <link href="2021/08/25/hexo-fa-she/"/>
      <url>2021/08/25/hexo-fa-she/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-发射"><a href="#hexo-发射" class="headerlink" title="hexo 发射"></a>hexo 发射</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>随着互联网高速的发展，网络文本信息已经充斥着我们的生活，我们每天也有许多个人或者团体的经验、技术、图像等信息需要被互联网记录，以求共享，在技术博客方面，hexo是一个好的选择，是一个快速、简洁且高效的博客框架。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li> 超快速度。Node.js 所带来的超快生成速度，让上百个页面在几秒内瞬间完成渲染。</li><li> 支持 Markdown。Hexo 支持 GitHub Flavored Markdown 的所有功能，甚至可以整合Octopress 的大多数插件。</li><li>一键部署。只需一条指令即可部署到 Gitee，GitHub Pages，Heroku 或其他平台。</li><li>插件和可扩展性。强大的 API 带来无限的可能，与数种模板引擎（EJS，Pug，Nunjucks）和工具（Babel，PostCSS，Less/Sass）轻易集成。</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="下载并安装node-js"><a href="#下载并安装node-js" class="headerlink" title="下载并安装node.js"></a>下载并安装node.js</h3><ol><li>下载地址<a href="https://nodejs.org/en/">https://nodejs.org/en/</a></li><li>安装验证<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>到这里，node环境配置完成。</li></ol><h3 id="加速nodejs下载"><a href="#加速nodejs下载" class="headerlink" title="加速nodejs下载"></a>加速nodejs下载</h3><p>为了避免使用nodejs过程中的下载速度（卡顿，无反应）问题，建议使用淘宝镜像服务（不必须）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>用以下命令安装hexo（全局安装）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="检查"><a href="#检查" class="headerlink" title="检查"></a>检查</h3><p>安装完成后，可以检查一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><h3 id="建立hexo博客"><a href="#建立hexo博客" class="headerlink" title="建立hexo博客"></a>建立hexo博客</h3><p>选择打开一个你想建立hexo博客文件的目录，必须是空的文件夹，或者新建一个（以myblog文件夹为例）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir myblog</span><br></pre></td></tr></table></figure><p>然后打开它</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd myblog</span><br></pre></td></tr></table></figure><h3 id="开始建立"><a href="#开始建立" class="headerlink" title="开始建立"></a>开始建立</h3><p>输入初始化命令进行初始化。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><h3 id="建立完成"><a href="#建立完成" class="headerlink" title="建立完成"></a>建立完成</h3><p>初始化完成后，你会得到hexo的目录</p><ul><li>node_modules: node的依赖包</li><li>scaffolds：生成文章的一些模板</li><li>source：用来存放你的文章</li><li>themes：存放主题（后期扩展主题）</li></ul><p>和一些配置文件</p><ul><li>config.yml</li><li>.gitignore</li><li>package.json</li></ul><p>到这里，初始化完成</p><h2 id="Hexo基本配置"><a href="#Hexo基本配置" class="headerlink" title="Hexo基本配置"></a>Hexo基本配置</h2><p>对hexo博客网站的名称，作者，站点链接，都在hexo根目录的config.yml文件中设置。</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">title</td><td align="center">网站标题</td></tr><tr><td align="center">subtitle</td><td align="center">网站副标题</td></tr><tr><td align="center">description</td><td align="center">网站描述</td></tr><tr><td align="center">keywords</td><td align="center">网站的关键词。支持多个关键词。</td></tr><tr><td align="center">author</td><td align="center">您的名字</td></tr><tr><td align="center">language</td><td align="center">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 zh-Hans和 zh-CN。</td></tr><tr><td align="center">timezone</td><td align="center">网站时区。Hexo 默认使用您电脑的时区。如 America/New_York, Japan, 和 UTC 。一般的，对于中国大陆地区可以使用 Asia/Shanghai。</td></tr></tbody></table><p>其余参考<a href="https://hexo.io/zh-cn/docs/configuration">hexo 官方配置</a></p><h2 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h2><p>用hexo写文章，用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new post &quot;hello my first blog post&quot;</span><br></pre></td></tr></table></figure><p>新建一个标题为：hello my first blog post的博客文章。在目录source/_post/下可以看见你新建的博客文章。hello-my-first-blog-post.md这个文件就是你需要编辑的。可以用支持markdown的编辑进行编辑。</p><h2 id="生成博客文章"><a href="#生成博客文章" class="headerlink" title="生成博客文章"></a>生成博客文章</h2><p>当一些文章编辑好了，或者本地文件设置好了，就可以更新你的文章了，可以先用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br></pre></td></tr></table></figure><p>生成本地HTML格式的博客文件，进行本地浏览或上传发布。</p><h2 id="本地浏览"><a href="#本地浏览" class="headerlink" title="本地浏览"></a>本地浏览</h2><p>有了HTML文件，我们可以浏览</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><p>就可以在浏览器输入<a href="http://localhost:4000/">http://localhost:4000</a> 进行浏览你的博客。Ctrl +C可以停止浏览。</p><h2 id="上传发布"><a href="#上传发布" class="headerlink" title="上传发布"></a>上传发布</h2><p>当一切准备就绪，我们就可以发布到网上去了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><p>然后就可以打开你的博客主页浏览了。</p><h2 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h2><p>一个受欢迎的博客除了和其内容有关，还和其漂亮程度有关。所以，hexo支持主题的拓展。<br>hexo 官方提供了许多的主题</p><p><a href="https://hexo.io/themes/">https://hexo.io/themes/</a><br>点击下载</p><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li><p>安装hexo的前提是需要有node的环境，如果没有node的环境需要先下载安装一下。官网推荐的node的版本是不低于8.10</p></li><li><p>使用hexo deploy 出现错误时，可能你没有安装hexo-deployer-git插件，应该执行命令安装它</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>使用hexo，还需要正确配置好git. </p><ul><li>在仓库的官网新建一个和你用户名一样名字的仓库。</li><li>安装好git<br>命令<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br></pre></td></tr></table></figure>更多git有关的教程，请自行百度<a href="https://baidu.com/s?word=git">https://www.baidu.com</a><br>。</li></ul></li><li><p>更多有关hexo的教程，请关注<a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
